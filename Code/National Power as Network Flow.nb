(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1662590,      31097]
NotebookOptionsPosition[   1626625,      30504]
NotebookOutlinePosition[   1627022,      30520]
CellTagsIndexPosition[   1626979,      30517]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["National Power as Network Flow", "Section",
 CellChangeTimes->{{3.8619161656618547`*^9, 
  3.8619161737154427`*^9}},ExpressionUUID->"3eb21de9-e109-4e74-bdb2-\
e916c14dc927"],

Cell[CellGroupData[{

Cell["Overview", "Subsection",
 CellChangeTimes->{{3.872107657751639*^9, 
  3.8721076597048693`*^9}},ExpressionUUID->"ce10cf7b-b377-4e64-be58-\
dd71ddf44f3e"],

Cell[TextData[{
 "This is the code behind the article: Poulshock, Michael. ",
 StyleBox["National Power as Network Flow ",
  FontSlant->"Italic"],
 "(2022). Available at: https://arxiv.org/abs/2209.01677."
}], "Text",
 CellChangeTimes->{{3.872108511264391*^9, 
  3.872108570022415*^9}},ExpressionUUID->"824844c1-f90e-4bb7-b2b8-\
693ac65b07ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Helper Functions", "Subsection",
 CellChangeTimes->{{3.8620000328047457`*^9, 
  3.8620000349728537`*^9}},ExpressionUUID->"b6a0c799-a86b-4d1b-8e1d-\
8b1b99fcb1b1"],

Cell[CellGroupData[{

Cell["CenteredMovingAverage", "Subsubsection",
 CellChangeTimes->{
  3.862000046750942*^9},ExpressionUUID->"2bf0e9d1-63ae-4d41-b96b-\
de018458a981"],

Cell["\<\
The window width n is assumed to be odd. Non-smoothed values at the extremes \
are left alone. Output: list.\
\>", "Text",
 CellChangeTimes->{{3.861967253570527*^9, 3.861967295804296*^9}, {
  3.872108685081366*^9, 
  3.872108688180402*^9}},ExpressionUUID->"89f5dcdc-cf6d-46ea-96a1-\
a15f0596ac06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CenteredMovingAverage", "[", 
   RowBox[{"list_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"list", ",", "len"}], "]"}], ",", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{"list", ",", "n"}], "]"}], ",", 
       RowBox[{"Take", "[", 
        RowBox[{"list", ",", 
         RowBox[{"-", "len"}]}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8619668416108418`*^9, 3.861966851741426*^9}, {
   3.861966894339069*^9, 3.8619668953924217`*^9}, {3.861966938358286*^9, 
   3.8619669675477858`*^9}, {3.861967201564006*^9, 3.861967244203045*^9}, {
   3.8619673075337543`*^9, 3.861967354691272*^9}, 3.861967399710857*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"5e178a94-8d9b-442e-a72c-6ec40d08571b"]
}, Closed]],

Cell[CellGroupData[{

Cell["ElementwiseMax", "Subsubsection",
 CellChangeTimes->{{3.862433760156004*^9, 
  3.8624337646461477`*^9}},ExpressionUUID->"ea48a862-5a2c-416a-9b00-\
2f1dd46aef70"],

Cell["\<\
Given two numeric lists, return the elementwise maximum. Output: scalar.\
\>", "Text",
 CellChangeTimes->{{3.8624331228343067`*^9, 3.862433143756049*^9}, {
  3.872108693638624*^9, 
  3.872108697554254*^9}},ExpressionUUID->"8512759e-1a0e-425a-b281-\
108bd2cebcb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ElementwiseMax", "[", "lists_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"Max", ",", 
    RowBox[{"Transpose", "[", "lists", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862433072602729*^9, 3.862433108448701*^9}, {
  3.862433147647653*^9, 3.862433151046235*^9}, {3.8624337923045397`*^9, 
  3.8624337988370543`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e24ebb38-8e34-4c9e-99ab-b54b0ced867d"]
}, Closed]],

Cell[CellGroupData[{

Cell["OneHotEncodeMax", "Subsubsection",
 CellChangeTimes->{
  3.862858869565493*^9},ExpressionUUID->"365b7fa5-8939-4635-b767-\
90988de55508"],

Cell["\<\
Make the largest element a 1 and the rest 0s. Output: binary list.\
\>", "Text",
 CellChangeTimes->{{3.856208398886827*^9, 3.856208405784697*^9}, {
  3.872108700295432*^9, 
  3.872108706554418*^9}},ExpressionUUID->"31d653c4-f23c-4273-bb77-\
ce5ef6fdbdfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OneHotEncodeMax", "[", "x_", "]"}], ":=", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0.", ",", 
      RowBox[{"Length", "[", "x", "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"PositionLargest", "[", "x", "]"}], "\[Rule]", "1."}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.823801549413574*^9, 3.823801572874689*^9}, {
   3.823812077671507*^9, 3.823812079783065*^9}, {3.823812912534919*^9, 
   3.8238129173531237`*^9}, 3.824048284182062*^9, {3.824119888660943*^9, 
   3.824119891320168*^9}, {3.856208364715556*^9, 3.856208367875956*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"63982af8-d5b8-4f91-a300-b485e0bde41f"]
}, Closed]],

Cell[CellGroupData[{

Cell["PositionLargest", "Subsubsection",
 CellChangeTimes->{
  3.86285889245848*^9},ExpressionUUID->"8b9e268c-ab14-41b1-83a1-ee94ab82a65e"],

Cell["\<\
Gives the position of the first element that has the largest value in list. \
Output: list of integers.\
\>", "Text",
 CellChangeTimes->{{3.754499579961832*^9, 3.754499593227254*^9}, {
   3.755804080817729*^9, 3.7558040839894247`*^9}, {3.824117314538582*^9, 
   3.82411731586709*^9}, 
   3.8275200536042128`*^9},ExpressionUUID->"c48e304f-ddd1-4876-a253-\
36feb5c3b45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PositionLargest", "=", 
   RowBox[{"ResourceFunction", "[", "\"\<PositionLargest\>\"", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.827264279597331*^9, 3.827264283545179*^9}, 
   3.8272643788889437`*^9, {3.828037198116499*^9, 3.82803720509267*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4e87bec6-106f-4e9a-82b7-2b9051353b11"]
}, Closed]],

Cell[CellGroupData[{

Cell["ReplaceColumn", "Subsubsection",
 CellChangeTimes->{
  3.862865833641624*^9},ExpressionUUID->"009e2bca-589b-4bfd-b2db-\
a73ced2e44f8"],

Cell[TextData[{
 "Replace a column in a matrix ",
 StyleBox["M", "Input"],
 " with a given list. Output: matrix."
}], "Text",
 CellChangeTimes->{{3.7550439201990347`*^9, 3.755043948152079*^9}, 
   3.755804247022608*^9, {3.808440489713048*^9, 
   3.808440490185446*^9}},ExpressionUUID->"a1f043da-9764-4b39-9eda-\
7818e541143e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceColumn", "[", 
   RowBox[{"M_List", ",", "i_Integer", ",", "list_List"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", "=", "M"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "=", "list"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "m", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.754932247697462*^9, 3.754932311453534*^9}, {
   3.801124009799946*^9, 3.8011240112814074`*^9}, {3.801164069708634*^9, 
   3.80116407175918*^9}, {3.8084349412254*^9, 3.8084349517503242`*^9}, {
   3.808435026354577*^9, 3.8084350421122427`*^9}, {3.808435089463604*^9, 
   3.808435089821786*^9}, 3.8084351987285147`*^9, {3.808440483032544*^9, 
   3.80844048319529*^9}, 3.8628658285501423`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"8cb4c876-c5fe-4246-8f52-6d61eeb52179"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Queries", "Subsection",
 CellChangeTimes->{{3.842911652430381*^9, 3.8429116569477673`*^9}, 
   3.843512695612566*^9},ExpressionUUID->"b7131a6a-e653-4338-8424-\
f80acc87060e"],

Cell[CellGroupData[{

Cell["File Path", "Subsubsection",
 CellChangeTimes->{{3.8619159371976357`*^9, 
  3.861915942320375*^9}},ExpressionUUID->"220c3504-903c-4f77-a39c-\
934013417b76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "path", "=", 
   "\"\</Users/mpoulshock/Documents/Github/NationalPowerAsNetworkFlow/Data/\>\
\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.861915235367968*^9, 3.861915282379094*^9}, 
   3.8619156871337748`*^9, {3.862765279979697*^9, 3.8627652819558477`*^9}, 
   3.8721106480026493`*^9, {3.872110768317401*^9, 3.872110773297923*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"562d34cd-0616-445d-9f6b-16833660c7c8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Country Name and ID", "Subsubsection",
 CellChangeTimes->{{3.844328769462521*^9, 3.8443287798858213`*^9}, {
  3.844330217210494*^9, 
  3.844330222469922*^9}},ExpressionUUID->"84646e0e-58fe-492e-8dc7-\
64ddb7a351e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countryData", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"path", "<>", "\"\<World Power Structure/Countries.csv\>\""}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844329928916192*^9, 3.844329958393878*^9}, {
   3.8619152527310743`*^9, 3.8619152711210423`*^9}, 3.8619156955642147`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"d83d65ca-47ab-4a97-8fb3-fb20d1ceaaf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countries", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Rest", "[", "countryData", "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84432996747543*^9, 3.8443299863581953`*^9}, 
   3.862765421003072*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"f424d70b-bd59-4734-b722-66e39cd71930"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountryName", "[", "id_", "]"}], ":=", 
  RowBox[{"countries", "[", 
   RowBox[{"[", "id", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84433022546587*^9, 3.84433026733356*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e75659e0-8c33-4f04-9a8d-17feeba3502c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountryID", "[", "name_", "]"}], ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"FirstPosition", "[", 
    RowBox[{"countries", ",", "name"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8443302810413303`*^9, 3.844330288062594*^9}, {
  3.8443303201989193`*^9, 3.844330326334859*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"14cf26f8-c72d-4e0c-87c6-7f6b3d5155f8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Wealth (1995-2020)", "Subsubsection",
 CellChangeTimes->{{3.8429116653101254`*^9, 3.842911666145382*^9}, {
  3.8429117178646917`*^9, 
  3.842911720714848*^9}},ExpressionUUID->"8850eb8b-56ba-4bee-958a-\
a0cfb2315478"],

Cell["\<\
Import national wealth data from the data file. Output: see below.\
\>", "Text",
 CellChangeTimes->{{3.872108860378787*^9, 
  3.872108872055974*^9}},ExpressionUUID->"021c71a0-951c-478e-9653-\
f673ef550958"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wealthData", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{
    "path", "<>", "\"\<World Power Structure/CountryYearsWealth.csv\>\""}], 
    ",", "\"\<Data\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.842911865531687*^9, 3.842911889578084*^9}, {
   3.861915472059948*^9, 3.861915474165968*^9}, 3.8619156913597717`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"f3b2bc3b-8c0b-41f9-a2be-2ee3516059f2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"Year\"\>", ",", "\<\"Country\"\>", 
             ",", "\<\"National Wealth\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1995", ",", "1", ",", "9.57`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1996", ",", "1", ",", "1.02`*^11"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1997", ",", "1", ",", "9.69`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1998", ",", "1", ",", "9.23`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1999", ",", "1", ",", "9.`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2000", ",", "1", ",", "8.33`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2001", ",", "1", ",", "7.69`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2002", ",", "1", ",", "1.02`*^11"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2003", ",", "1", ",", "1.1`*^11"}], "}"}], ",", 
           TemplateBox[{"4999"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"2011", ",", "193", ",", "6.34`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "7.65`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2013", ",", "193", ",", "7.86`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2014", ",", "193", ",", "8.21`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2015", ",", "193", ",", "8.47`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2016", ",", "193", ",", "8.58`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2017", ",", "193", ",", "9.09`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2018", ",", "193", ",", "9.72`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2019", ",", "193", ",", "7.47`*^10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2020", ",", "193", ",", "7.`*^10"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 31889987972705610022, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 31889987972705610022, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 31889987972705610022, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31889987972705610022 === $SessionID, 
   Out[11], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.842911891223419*^9, 3.84351161251727*^9, 3.84420058954784*^9, 
   3.8496325051965322`*^9, 3.8498659322616568`*^9, 3.851419937044978*^9, 
   3.851429779893261*^9, 3.851437286976164*^9, 3.851438124495919*^9, 
   3.852756967958886*^9, 3.853149793192577*^9, 3.853962005880453*^9, 
   3.854273338236846*^9, 3.855083685732482*^9, 3.855485215063925*^9, 
   3.855698217001199*^9, 3.856001898727059*^9, 3.8619154801455307`*^9, 
   3.8619156924867983`*^9, 3.861915818477846*^9, 3.8620021327287483`*^9, 
   3.8621372816641283`*^9, 3.862316870674769*^9, 3.8623174739519167`*^9, 
   3.862318562464529*^9, 3.862349873100184*^9, 3.8624178884377327`*^9, 
   3.8624351840723677`*^9, 3.862741423454615*^9, 3.862742856716124*^9, {
   3.862743025670877*^9, 3.8627430403920527`*^9}, 3.862743449154232*^9, 
   3.862743669531042*^9, 3.8627652516585417`*^9, 3.86276542429989*^9, 
   3.8627654601020308`*^9, 3.8627829401974688`*^9, 3.8632003322355633`*^9, 
   3.863200647521089*^9, 3.8711539449157467`*^9, 3.8711559761628838`*^9, 
   3.8711561160751553`*^9, 3.871238473580267*^9, 3.871906769350643*^9, 
   3.872104759124188*^9, 3.872107949115597*^9, 3.87211067620702*^9, 
   3.872110884178172*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d6657cdd-ea63-4931-ae64-382e447aae50"]
}, Open  ]],

Cell["\<\
National wealth of a given country in a given year. Output: scalar.\
\>", "Text",
 CellChangeTimes->{{3.872108772945825*^9, 
  3.8721088078357058`*^9}},ExpressionUUID->"4c3bcb50-a7a1-41b5-a639-\
8a5001a69d2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NationalWealth", "[", 
   RowBox[{"countryID_", ",", "year_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "r", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{"wealthData", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "year"}], "&&", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "countryID"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"r", "===", 
        RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", "0.", ",", 
       RowBox[{"r", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8429119898587847`*^9, 3.842912017523315*^9}, {
  3.842912068471651*^9, 3.842912119785585*^9}, {3.843511620623279*^9, 
  3.843511635375189*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"57fa66fc-89e3-454a-9e03-5c965b77895d"],

Cell["\<\
National wealth of all countries in the data set, in a given year. Output: \
list.\
\>", "Text",
 CellChangeTimes->{{3.872108789598925*^9, 
  3.872108801589674*^9}},ExpressionUUID->"63802c22-7818-4019-b039-\
11005091bb6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WealthVector", "[", "year_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"WealthVector", "[", "year", "]"}], "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NationalWealth", "[", 
       RowBox[{"#", ",", "year"}], "]"}], "&"}], ",", "193"}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8429117725529222`*^9, 3.842911785903906*^9}, {
  3.842912151553144*^9, 3.8429121720170383`*^9}, {3.843511664663272*^9, 
  3.8435116683874702`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"08daeca3-c33b-4040-97ba-55d6b1aee5ce"],

Cell["\<\
A list of all national wealth lists from 1995-2020. Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.8443726710346746`*^9, 3.844372684456126*^9}, {
  3.872108815780908*^9, 
  3.872108818053668*^9}},ExpressionUUID->"77a2947a-223f-422a-88a4-\
c8cf2754c248"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WealthSeries", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"WealthVector", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1995", ",", "2020"}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844372508326486*^9, 3.844372562669845*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"324ec18d-e194-4a9f-8fc1-43ed14a311a4"],

Cell[TextData[{
 "Extracts a time interval from the ",
 StyleBox["WealthSeries", "Input"],
 ". Output: matrix."
}], "Text",
 CellChangeTimes->{{3.850669862359833*^9, 3.850669881054284*^9}, {
  3.872108825168852*^9, 
  3.872108825507378*^9}},ExpressionUUID->"ea717e27-1a16-4b3e-85f0-\
b87fd2cda731"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WealthSeriesInterval", "[", 
   RowBox[{"start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Take", "[", 
   RowBox[{"WealthSeries", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"start", "-", "1994"}], ",", 
      RowBox[{"end", "-", "1994"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.850669557598584*^9, 3.850669634227819*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d77db4a7-26a1-404c-ba7a-9f416ccdf48d"],

Cell["\<\
Get the wealth series for a given country, over the entire 25-year interval. \
Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.8622613063576202`*^9, 3.862261319470343*^9}, {
  3.872108828890971*^9, 
  3.8721088294096947`*^9}},ExpressionUUID->"8ea24933-496e-4d57-92cd-\
b2b58b5694cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CountryWealthSeries", "[", "cid_Integer", "]"}], ":=", 
   RowBox[{"WealthSeries", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "cid"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CountryWealthSeries", "[", "name_String", "]"}], ":=", 
   RowBox[{"CountryWealthSeries", "[", 
    RowBox[{"CountryID", "[", "name", "]"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8622611218512*^9, 3.862261216430602*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4f9904f0-0a4a-46d8-b5b7-b969bbf62d1e"],

Cell["\<\
A list of the largest countries in a given year. Output: list.\
\>", "Text",
 CellChangeTimes->{{3.856042135472775*^9, 3.856042144709922*^9}, {
  3.872108834449177*^9, 
  3.872108837385234*^9}},ExpressionUUID->"5f1464e1-012e-43fd-9311-\
d50375cebe43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LargestNCountries", "[", 
   RowBox[{"n_", ",", "year_"}], "]"}], ":=", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"WealthVector", "[", "year", "]"}], "]"}], "]"}], ",", "n"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8560417953094673`*^9, 3.856041801051279*^9}, {
  3.8560420328640833`*^9, 3.856042050431959*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0d29bac8-372b-433a-85b9-7b3abbcb7cb6"],

Cell["\<\
WealthSeries with a 3-period moving average applied to each country vector. \
Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.861983528765171*^9, 3.861983542819211*^9}, {
  3.862000092985371*^9, 3.862000108326522*^9}, {3.8721088442269907`*^9, 
  3.8721088489745417`*^9}},ExpressionUUID->"910218fc-aa94-47ae-9ea0-\
0ac6430c668f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmoothedWealthSeries", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CenteredMovingAverage", "[", 
        RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", "WealthSeries", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.861983399382922*^9, 3.861983458005474*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2856251a-c073-4863-878d-454668da0091"]
}, Closed]],

Cell[CellGroupData[{

Cell["DOTS Merchandise Trade (1995-2020)", "Subsubsection",
 CellChangeTimes->{{3.84291168147701*^9, 3.8429116866406527`*^9}, {
  3.84291172269728*^9, 
  3.842911725715734*^9}},ExpressionUUID->"cebf2359-82b7-45c3-a961-\
dd1db612f39c"],

Cell["Import the DOTS data set.", "Text",
 CellChangeTimes->{{3.8435583997910423`*^9, 
  3.8435584032282267`*^9}},ExpressionUUID->"b5d451bb-1bdb-4123-9304-\
ed9ec437fc65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dotsData", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"path", "<>", "\"\<Edited/IMF DOTS Subset.csv\>\""}], ",", 
     "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8434944419583063`*^9, 3.843494456492999*^9}, {
   3.851438045613473*^9, 3.851438046794797*^9}, {3.861915492676627*^9, 
   3.861915502343108*^9}, {3.861915673315825*^9, 3.861915675590909*^9}, 
   3.8631756957265663`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"779fa1b3-5bc4-4bbe-8ef0-4cc7c9d6ec19"],

Cell["\<\
For a given year, convert the dyadic data to a list of rules. Output: see \
below.\
\>", "Text",
 CellChangeTimes->{{3.843558408687604*^9, 3.843558423789185*^9}, {
  3.872108904454308*^9, 
  3.872108907023938*^9}},ExpressionUUID->"600a6c1c-ab2f-43c7-94aa-\
5ad7948569ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dotsYearRules", "[", "year_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Rule]", 
      RowBox[{"N", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"year", "-", "1992"}], "]"}], "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"Rest", "[", "dotsData", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843552959045493*^9, 3.843552965551631*^9}, {
  3.8435530884783697`*^9, 3.843553095904674*^9}, {3.843553146223405*^9, 
  3.8435531490792837`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"a685ff40-15f2-44e2-99a4-0ed5878fdb7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dotsYearRules", "[", "2020", "]"}]], "Input",
 CellChangeTimes->{{3.843553104848301*^9, 3.843553106306225*^9}, {
  3.8435582183635273`*^9, 3.843558218908558*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"f905e367-766f-4a29-b9c1-add920b73eb5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "179"}], "}"}], "\[Rule]", "1.96182`*^8"}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "108"}], "}"}], "\[Rule]", "815000.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "140"}], "}"}], "\[Rule]", "7.8516`*^7"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "158"}], "}"}], "\[Rule]", "1.8056`*^7"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "137"}], "}"}], "\[Rule]", "1.17519`*^8"}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "152"}], "}"}], "\[Rule]", "3000.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "16"}], "}"}], "\[Rule]", "6.623`*^6"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "155"}], "}"}], "\[Rule]", "7000.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "85"}], "}"}], "\[Rule]", "5.684`*^6"}], ",", 
           TemplateBox[{"33528"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"191", ",", "181"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"193", ",", "56"}], "}"}], "\[Rule]", "2135.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"192", ",", "189"}], "}"}], "\[Rule]", "29.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"191", ",", "91"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"192", ",", "174"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"192", ",", "132"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"191", ",", "24"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"191", ",", "135"}], "}"}], "\[Rule]", "0.`"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"191", ",", "145"}], "}"}], "\[Rule]", "1094.`"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 31702446405485386086, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 31702446405485386086, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 31702446405485386086, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31702446405485386086 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8435531071842833`*^9, 3.843553154418187*^9, 
  3.843558219753685*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"be5ac171-5071-444f-8dd2-94af054824d6"]
}, Open  ]],

Cell["Generate the goods trade matrix for a given year.", "Text",
 CellChangeTimes->{{3.843558428625511*^9, 
  3.8435584440391083`*^9}},ExpressionUUID->"30455f55-7d45-4b1b-b3b3-\
da0efef2597e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", "year_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"G", "[", "year", "]"}], "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"193", ",", "193"}], "}"}]}], "]"}], ",", 
     RowBox[{"dotsYearRules", "[", "year", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84349455256398*^9, 3.843494575243742*^9}, {
  3.843496313969042*^9, 3.8434963264143057`*^9}, {3.843496440544118*^9, 
  3.843496482321148*^9}, {3.843496519985527*^9, 3.8434965330547943`*^9}, {
  3.843507513421417*^9, 3.8435075189846783`*^9}, {3.843507550316758*^9, 
  3.8435075534241962`*^9}, {3.843558352061161*^9, 3.843558355428393*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"515667f9-f080-471d-8808-5151f7cb7a6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["BATIS Services Trade (1995-2012)", "Subsubsection",
 CellChangeTimes->{{3.8429116967766*^9, 
  3.842911734681769*^9}},ExpressionUUID->"1c70f933-1901-446f-acb5-\
0fd54738a4b6"],

Cell["Import the BATIS data set. Output: see below.", "Text",
 CellChangeTimes->{{3.843559103706038*^9, 3.843559108312146*^9}, {
  3.872108919396749*^9, 
  3.872108922981373*^9}},ExpressionUUID->"319499f8-2898-45c7-a118-\
b41a2f25cf1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"batisData", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{
    "path", "<>", "\"\<Edited/OECD-WTO BATIS Data 1995-2012.csv\>\""}], ",", 
    "\"\<Data\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8434999410060177`*^9, 3.843499962161399*^9}, {
  3.851438067066935*^9, 3.851438067760912*^9}, {3.861915513955676*^9, 
  3.8619155160110083`*^9}, {3.861915723719812*^9, 3.861915724581003*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"714dbedf-2a73-4093-97a9-acc9888416e3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"Year\"\>", ",", "\<\"Exporter\"\>", 
             ",", "\<\"Importer\"\>", ",", "\<\"S200CurrentUSDMillion\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "184", ",", "14.2289`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "1", ",", "0.6013`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "5", ",", "0.059`"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "2", ",", "7.9552`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "7", ",", "0.7588`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "4", ",", "10.2353`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "6", ",", "5.2502`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2008", ",", "91", ",", "10", ",", "40.7733`"}], "}"}], 
           ",", 
           TemplateBox[{"580335"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "137", ",", "0.2045`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "154", ",", "0.0999`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "155", ",", "0.0762`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "169", ",", "0.019`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "175", ",", "0.0151`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "178", ",", "0.156`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "177", ",", "2.5447`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "187", ",", "0.0117`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2012", ",", "193", ",", "188", ",", "0.374`"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 23, 31889987972705610022, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 23, 31889987972705610022, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 23, 31889987972705610022, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31889987972705610022 === $SessionID, 
   Out[23], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQB2IJYc4fTxa9cTz1ukvCeskbx9VTNiROX/fGccIugRjO
9W8cl/AtUGPY9Mbxj3PwZxYgHfdzzTwOIP053PQ/iP6/IYuDE0iLJYgw9G55
47jl5MFzPlvfOC7qSk69ue2NYylLZFbh9jeOcybPFf27443jpdVH1Q7ufOOY
sEdaQ3PXG8flP+7k7wXRZZ/FWY+9cbzzyNZWH0hbGf23KgTSUxQmvz4BpFes
8jY/CaQnLTHfD6KdVDjYbwLpV8Wb7X4BaY5Gg41Mx4Hue7bBYgaQfnTsz2sQ
/fnT+n8g+l79FaaZIPkUHjMQ/eXt3EAQLdJcfWMxkJ6jxvMeRCexJ34F0QFq
FTVrgHTFcW+vihNvHIO85hSD6O7fvU8XX3/jeORf+eMlIHq/9VcQ3bV9k/ZZ
IL0q92aN8M03jhverVUvAdKlC7h2lALpdU2dXOVA+sPUr2ogGgB+ONYs
  "],
 CellLabel->"Out[23]=",ExpressionUUID->"844b6b21-c09a-4767-9b51-770767205fb5"]
}, Open  ]],

Cell["Segment the data by year. Output: same as above.", "Text",
 CellChangeTimes->{{3.8435591122179403`*^9, 3.843559126173766*^9}, {
  3.872108950680869*^9, 
  3.872108955093803*^9}},ExpressionUUID->"b28474e0-c37b-43e3-9b28-\
595e759d0c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"batisDataByYear", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"batisDataByYear", "[", "year", "]"}], "=", 
   RowBox[{"Select", "[", 
    RowBox[{"batisData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "year"}], "&"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843504383986513*^9, 3.843504409172305*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"964818da-f1a9-408b-8391-9517617c46a6"],

Cell["\<\
For a given year, convert the dyadic data to a list of rules. Output: list of \
rules.\
\>", "Text",
 CellChangeTimes->{{3.8435591319440517`*^9, 3.8435591429240227`*^9}, {
  3.8721089446899633`*^9, 
  3.872108947494722*^9}},ExpressionUUID->"9aab6271-d1c9-48fd-a168-\
2cd5d9453027"],

Cell[BoxData[
 RowBox[{
  RowBox[{"batisYearRules", "[", "year_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "\[Rule]", 
      RowBox[{"N", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"batisDataByYear", "[", "year", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843552959045493*^9, 3.843552965551631*^9}, {
  3.8435530884783697`*^9, 3.843553095904674*^9}, {3.843553146223405*^9, 
  3.8435531490792837`*^9}, {3.8435587752680902`*^9, 3.843558850729877*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"63ff6fab-e609-4dc9-bbe5-68bbdd77a64a"],

Cell["Generate the BATIS matrix. Output: matrix.", "Text",
 CellChangeTimes->{{3.843559151633088*^9, 3.843559158772047*^9}, {
  3.8721089390894003`*^9, 
  3.872108942481742*^9}},ExpressionUUID->"29f437fa-fe25-44ce-90b7-\
2742989cfc7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"batisYear", "[", "year_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"batisYear", "[", "year", "]"}], "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"193", ",", "193"}], "}"}]}], "]"}], ",", 
     RowBox[{"batisYearRules", "[", "year", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84349455256398*^9, 3.843494575243742*^9}, {
  3.843496313969042*^9, 3.8434963264143057`*^9}, {3.843496440544118*^9, 
  3.843496482321148*^9}, {3.843496519985527*^9, 3.8434965330547943`*^9}, {
  3.8435003320423737`*^9, 3.843500337619338*^9}, {3.8435590559502087`*^9, 
  3.8435590623675003`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ef027bb1-314c-4af9-83b4-da364ab47e0c"]
}, Closed]],

Cell[CellGroupData[{

Cell["WTO Services Trade (2013-2020)", "Subsubsection",
 CellChangeTimes->{{3.842911704769508*^9, 
  3.8429117133672943`*^9}},ExpressionUUID->"d03625ed-00cd-4070-9a29-\
e971e35e99e1"],

Cell["Import the WTO services trade data. Output: see below.", "Text",
 CellChangeTimes->{{3.843559194074031*^9, 3.843559199695157*^9}, {
  3.872108967249669*^9, 
  3.872108972109417*^9}},ExpressionUUID->"86132393-5e12-41fa-a0f7-\
8a801813e20d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wtoData", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{
    "path", "<>", 
     "\"\<Edited/WTO Services Exports 2013-2020 (processed).csv\>\""}], ",", 
    "\"\<Data\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8435010406375303`*^9, 3.843501056106989*^9}, {
  3.8514380800820713`*^9, 3.851438081206389*^9}, {3.861915524173661*^9, 
  3.861915525753933*^9}, {3.8619157325274076`*^9, 3.861915736284737*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a13fe408-50bf-401c-8c4d-b490fc2172d5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"Exporter\"\>", ",", "\<\"Importer\"\>", ",", "2013", 
             ",", "2014", ",", "2015", ",", "2016", ",", "2017", ",", "2018", 
             ",", "2019", ",", "2020"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "10", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
             ",", "2", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "17", ",", "1", ",", "8", ",", "9", ",", "4", ",", "3", ",", "2", 
             ",", "6", ",", "7", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "23", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "27", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
             ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "43", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
             ",", "2", ",", "3", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "45", ",", "1", ",", "0", ",", "0", ",", "6", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           TemplateBox[{"6466"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "142", ",", "193", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "143", ",", "193", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "153", ",", "193", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "157", ",", "193", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "158", ",", "193", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "167", ",", "193", ",", "25", ",", "29", ",", "18", ",", "15", 
             ",", "8", ",", "2", ",", "7", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "185", ",", "193", ",", "103", ",", "146", ",", "84", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 31889987972705610022, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 31889987972705610022, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 31889987972705610022, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31889987972705610022 === $SessionID, 
   Out[27], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA+Ly9Rq3ny964/jSJVfKeskbxxLtg4nT171xfHtFKoZz
/RtHpuWr1Bg2vXFckRv7mQVIm21aN48DSMuvL+HgBNKLDssx9G5543hg2ulz
PlvfOHa45aXe3PbG8cih1KzC7W8cbexWif7dAdQve0Ht4M43jvqBahqau4Dq
Nz/P3wukef8Fc7Mee+N4++5fcRD9sdjDVh9Ii5zmsS4E0pWT5r4+AaQNFoea
nwTSblsc94Nop59C7DeBtE7jXrtfQHqxos1GpuNvHFUn7baYAaQrZrG/AdEf
7O8xzQTSF1vFzEC0TczKQBD991vNjcVAepG6+HsQHbEi+yuINlrRXLMGRLuH
eVWceOPot31ZMYhmsJrxdPH1N46XHjQ9XgKkCz+5fgXR1S/3aJ8F0qfan9YI
33zjqPVtl3oJkGZwEdtRCqTzr3VxlQNp6yQGdRANAJPOySQ=
  "],
 CellLabel->"Out[27]=",ExpressionUUID->"5f40d0e2-5e48-43d8-8b58-51772f3e1b56"]
}, Open  ]],

Cell["\<\
For a given year, convert the dyadic data to a list of rules. Output: list of \
rules.\
\>", "Text",
 CellChangeTimes->{
  3.843559189392975*^9, {3.872108975080514*^9, 
   3.87210897843784*^9}},ExpressionUUID->"8aeb5b20-f8a2-477f-b92b-\
bb3e6a388444"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wtoYearRules", "[", "year_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Rule]", 
      RowBox[{"N", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"year", "-", "2010"}], "]"}], "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"Rest", "[", "wtoData", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843552959045493*^9, 3.843552965551631*^9}, {
  3.8435530884783697`*^9, 3.843553095904674*^9}, {3.843553146223405*^9, 
  3.8435531490792837`*^9}, {3.8435586238047113`*^9, 3.843558646880916*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"1c62708a-d361-469b-a44b-f35a39fc74ff"],

Cell["Generate the trade matrix for a given year. Output: matrix.", "Text",
 CellChangeTimes->{{3.843559206466214*^9, 3.8435592142227087`*^9}, {
  3.872108980912554*^9, 
  3.8721089834965067`*^9}},ExpressionUUID->"ac202321-e215-49bb-b926-\
004f62d24605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wtoYear", "[", "year_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"wtoYear", "[", "year", "]"}], "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"193", ",", "193"}], "}"}]}], "]"}], ",", 
     RowBox[{"wtoYearRules", "[", "year", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84349455256398*^9, 3.843494575243742*^9}, {
  3.843496313969042*^9, 3.8434963264143057`*^9}, {3.843496440544118*^9, 
  3.843496482321148*^9}, {3.843496519985527*^9, 3.8434965330547943`*^9}, {
  3.843501250627282*^9, 3.843501256480425*^9}, {3.843558719635021*^9, 
  3.843558723541181*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ff39f7fd-8878-4488-b44a-6ecf4f6ffec9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Services Trade (1995-2020)", "Subsubsection",
 CellChangeTimes->{{3.843507279634777*^9, 
  3.843507287212347*^9}},ExpressionUUID->"c2eb3627-0f55-4393-b82f-\
23ffa30bcbcf"],

Cell["\<\
Select the appropriate dataset and multiply by 1000000 to get the result in \
current USD. Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.843507450857074*^9, 3.843507471654948*^9}, {
  3.8721089953788*^9, 
  3.8721090302970533`*^9}},ExpressionUUID->"45660ec0-3e16-4c7e-8a5b-\
8a21fa9615e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"year", "\[GreaterEqual]", " ", "2013"}], ",", 
     RowBox[{"wtoYear", "[", "year", "]"}], ",", 
     RowBox[{"batisYear", "[", "year", "]"}]}], "]"}], "*", 
   "1000000."}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843507288870619*^9, 3.84350733802597*^9}, {
   3.843507391753709*^9, 3.843507438614798*^9}, 3.843507573687716*^9, 
   3.843512801868815*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"1f1f6a8d-5900-42f3-a98e-cf4b547764a2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Major Interstate Conflicts (1995-2020)", "Subsubsection",
 CellChangeTimes->{{3.844113395673667*^9, 3.844113399265667*^9}, 
   3.844113644347642*^9, {3.8441140963156967`*^9, 
   3.844114108412807*^9}},ExpressionUUID->"bcbe4152-3197-4f04-aded-\
9a06b9e6ca65"],

Cell["Import the conflict data set.", "Text",
 CellChangeTimes->{{3.872109036620021*^9, 
  3.872109040728056*^9}},ExpressionUUID->"fbe0f288-73f8-4c4d-8e0e-\
8b4689ac8253"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conflicts", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "path", "<>", 
      "\"\<Edited/Interstate Wars 1995-2020 - DyadYears.csv\>\""}], ",", 
     "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844113404701539*^9, 3.844113431080868*^9}, 
   3.844119724443907*^9, {3.861915541594164*^9, 3.8619155448057747`*^9}, {
   3.8619157519859943`*^9, 3.86191575400045*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6ee72562-61d3-4632-8018-bba206867964"],

Cell["\<\
Import the data for the Syria counterfactual (in which there is no civil war).\
\>", "Text",
 CellChangeTimes->{{3.871156081219809*^9, 3.871156092113494*^9}, {
  3.872109047291626*^9, 
  3.87210906213074*^9}},ExpressionUUID->"b7e3f8e9-0813-4808-81ce-\
ca24c3a57b49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conflicts", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "path", "<>", 
      "\"\<Edited/Interstate Wars 1995-2020 - DyadYears (Syria \
counterfactual).csv\>\""}], ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844113404701539*^9, 3.844113431080868*^9}, 
   3.844119724443907*^9, {3.861915541594164*^9, 3.8619155448057747`*^9}, {
   3.8619157519859943`*^9, 3.86191575400045*^9}, {3.871155821456912*^9, 
   3.871155832627643*^9}, 3.871155949278195*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[32]:=",ExpressionUUID->"bae609e1-ddcf-4056-a17d-eb7946a94c70"],

Cell["Conflict data for a given year.", "Text",
 CellChangeTimes->{{3.872109068339621*^9, 
  3.87210907581732*^9}},ExpressionUUID->"9837158e-0d0f-481f-b2dd-\
bf4897531631"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conflictsInYear", "[", "year_", "]"}], ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"conflicts", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "year"}], "&"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84411349795718*^9, 3.8441135243153553`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"59c696a3-dcd3-41b7-9454-9dcd00ccba86"],

Cell["Conflict matrix for a given year. Output: matrix.", "Text",
 CellChangeTimes->{{3.872109083371036*^9, 
  3.872109092220351*^9}},ExpressionUUID->"9271a9b8-46ad-44f0-8f1a-\
b2c199a39bb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conflictYear", "[", "year_", "]"}], ":=", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.", ",", 
      RowBox[{"{", 
       RowBox[{"193", ",", "193"}], "}"}]}], "]"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "6", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "7", "]"}], "]"}]}], "&"}], ",", 
      RowBox[{"conflictsInYear", "[", "year", "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84411346266788*^9, 3.8441134773116627`*^9}, {
  3.844113562261138*^9, 3.8441136528249826`*^9}, {3.844113684410948*^9, 
  3.8441136907880917`*^9}, {3.844113785808412*^9, 3.844113788029262*^9}, {
  3.844113833270527*^9, 3.8441138354185038`*^9}, {3.844113931582582*^9, 
  3.8441139580866613`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"c4f9b87b-654f-4bd1-83af-94beaa0bc129"],

Cell["Matrix of dyadic conflict expenditures. Output: matrix.", "Text",
 CellChangeTimes->{{3.862431104941021*^9, 3.862431119699572*^9}, {
  3.872109098106604*^9, 
  3.87210910037141*^9}},ExpressionUUID->"4875e8c4-5cc7-4a10-9153-\
80856ab27c83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConflictMatrix", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"conflictYear", "[", "year", "]"}], "*", "1000000.", "*", 
   RowBox[{"conversionFactorToUSD2020", "[", "year", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862431093234812*^9, 3.8624310998995523`*^9}, 
   3.8624311361819963`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"09712d80-053a-4989-b52e-01aac9b52609"],

Cell["\<\
Estimated expenditure (in USD 2020) by each country in a given year. Output: \
list.\
\>", "Text",
 CellChangeTimes->{{3.847623727955221*^9, 3.84762376384864*^9}, {
  3.8721091030835247`*^9, 
  3.8721091051694117`*^9}},ExpressionUUID->"bd7e269e-b463-4686-a923-\
e6eefd672c02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConflictVector", "[", "year_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"ConflictMatrix", "[", "year", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844113969676598*^9, 3.84411399109179*^9}, {
  3.8441147623960667`*^9, 3.844114765613819*^9}, {3.844251156278714*^9, 
  3.844251159161772*^9}, {3.847623801840232*^9, 3.847623824680746*^9}, {
  3.847623966640294*^9, 3.8476239703912153`*^9}, {3.862431241688294*^9, 
  3.862431243520796*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5d487d7c-5130-4b72-81af-6d995fdd7b58"]
}, Closed]],

Cell[CellGroupData[{

Cell["Currency conversion", "Subsubsection",
 CellChangeTimes->{{3.843507684784747*^9, 
  3.843507688297268*^9}},ExpressionUUID->"932eb4a9-8580-4c27-9166-\
bfe34a67f9c1"],

Cell["Import currency conversion data. Output: see below.", "Text",
 CellChangeTimes->{{3.872109113598608*^9, 
  3.872109124427843*^9}},ExpressionUUID->"d16b46e9-1e62-4c4d-9ee8-\
0202e9f75315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conversionData", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"path", "<>", "\"\<Original/CurrencyConversions.csv\>\""}], ",", 
    "\"\<Data\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.843507713146513*^9, 3.8435077382014093`*^9}, {
  3.861915562836958*^9, 3.861915576268965*^9}, {3.8619157675691*^9, 
  3.861915769525176*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"bdeeb075-4486-4fe6-9524-adfc2202aa48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Year\"\>", ",", "\<\"Conversion Factor to USD 2020\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1995", ",", "1.6982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1996", ",", "1.6495`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1997", ",", "1.6125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1998", ",", "1.5878`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1999", ",", "1.5535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2000", ",", "1.503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2001", ",", "1.4614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2002", ",", "1.4386`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003", ",", "1.4066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2004", ",", "1.3701`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2005", ",", "1.3252`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2006", ",", "1.2838`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2007", ",", "1.2482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2008", ",", "1.2021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2009", ",", "1.2064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2010", ",", "1.1869`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2011", ",", "1.1506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2012", ",", "1.1273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "1.111`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "1.0933`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "1.092`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "1.0784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "1.0559`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "1.0302`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "1.0123`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2020", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBOIvvAomLxe9cXzalXdeYMkbxw69vjJbIG3AeCRx+ro3
jhE6sjGc6984xjquU2PY9MaR7Wj8ZxYgbbVw4zwOIH3/XRkHJ5CeYqTI0Lvl
jeMp7nPnfLa+cdzlU5h6cxtQv1lWVuH2N46b5q4V/bvjjeOe8MtqB3e+ccw4
r6GhueuNI1PUq/y9QPpYvjs/67E3jgL8DBIgmsXV21YfSJtp81sXAulZ0+e/
PgGkK3aEm58E0pxbnPeD6Lwjouw3gbTSsv12v4C023m7jUzH3zi+PrrPYgaQ
jirjegOip518wDQTSN/hkTQD0YovVweC6LKq+huLgfQ6Can3INohLu8riGY7
0VazBkgLOER6VZx44/hl/cpiEH3ee/bTxdffOPrFtj1eAqRDsz2+guhLDfu1
zwLpc7Nf1AjffOO4QWSfegmQZnKW3FEKpGO+93CVA+lXE8WFQPSayQ3iIPry
XiZ1EA0AMaPQFQ==
  "],
 CellLabel->"Out[36]=",ExpressionUUID->"b1744127-ddea-4258-8417-060b7c96df43"]
}, Open  ]],

Cell["\<\
Returns the currency conversion factor for a given year. Output: real.\
\>", "Text",
 CellChangeTimes->{{3.872109132319928*^9, 
  3.8721091532878923`*^9}},ExpressionUUID->"aac04211-8857-4ca1-9c1c-\
1adb7cf140da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conversionFactorToUSD2020", "[", "year_", "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"SelectFirst", "[", 
     RowBox[{"conversionData", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "year"}], "&"}]}], "]"}],
     "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8435076926441174`*^9, 3.8435077042568417`*^9}, {
  3.8435078048822813`*^9, 3.843507837510041*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"e4552f70-989d-48d7-9f96-1349d8edb418"]
}, Closed]],

Cell[CellGroupData[{

Cell["Trade Matrix and Vector", "Subsubsection",
 CellChangeTimes->{{3.846621674691018*^9, 3.846621678677189*^9}, {
  3.846622398269422*^9, 3.846622399802264*^9}, {3.856269031614923*^9, 
  3.856269034761302*^9}},ExpressionUUID->"0c2eba95-7c6e-4064-9811-\
30d157c16e75"],

Cell["\<\
Returns a matrix indicating bilateral trade volumes in USD 2020. Output: \
matrix.\
\>", "Text",
 CellChangeTimes->{{3.856268953616365*^9, 3.856268964352355*^9}, {
  3.856269014477335*^9, 3.85626902691608*^9}, {3.872109233168692*^9, 
  3.8721092354701147`*^9}},ExpressionUUID->"207bc56e-812b-4d5c-9a14-\
767317a147ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TradeMatrix", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TradeMatrix", "[", "year", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "[", "year", "]"}], "+", 
      RowBox[{"Transpose", "[", 
       RowBox[{"G", "[", "year", "]"}], "]"}], "+", 
      RowBox[{"S", "[", "year", "]"}], "+", 
      RowBox[{"Transpose", "[", 
       RowBox[{"S", "[", "year", "]"}], "]"}]}], ")"}], "*", 
    RowBox[{"conversionFactorToUSD2020", "[", "year", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.856268944526113*^9, 3.856268950221388*^9}, 
   3.856269051411964*^9, {3.856269146273732*^9, 3.856269150427847*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e6ba978c-9fa1-4a41-aaac-f4360066d3f2"],

Cell["\<\
Returns a vector representing each country\[CloseCurlyQuote]s total trade \
volume (imports and exports of goods and services) in USD 2020. Output: list.\
\
\>", "Text",
 CellChangeTimes->{{3.846621729597754*^9, 3.846621763955324*^9}, {
  3.872109238399068*^9, 
  3.872109254211206*^9}},ExpressionUUID->"c2ef92f8-8bbe-40f3-831f-\
ec2eef71efc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TradeVector", "[", "year_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"TradeMatrix", "[", "year", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.846621695922338*^9, 3.846621723573555*^9}, {
  3.8466217972823133`*^9, 3.8466218145110197`*^9}, {3.856269088289144*^9, 
  3.8562691014362593`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"5603211b-1afb-4ba3-93c4-9cc7e12ba0f5"],

Cell["\<\
A time series (1995-2020) of the trade volume of a given country. Output: \
list.\
\>", "Text",
 CellChangeTimes->{{3.86234662957032*^9, 3.8623466658570766`*^9}, {
  3.872109245056422*^9, 
  3.872109249706319*^9}},ExpressionUUID->"01c76738-b37b-4d6a-9bb7-\
710298da79a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountryTradeSeries", "[", "country_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"TradeMatrix", "[", "#", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"CountryID", "[", "country", "]"}], "]"}], "]"}], "]"}], 
     "&"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1995", ",", "2020"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.86234658837523*^9, 3.862346652875074*^9}, {
  3.862398853244787*^9, 3.862398856211845*^9}, {3.8623989354710827`*^9, 
  3.862398962292685*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"8a2d8470-9ec0-4965-8c3d-08067f21a1bf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data gaps", "Subsubsection",
 CellChangeTimes->{{3.8498661574873333`*^9, 3.8498661589385347`*^9}, {
   3.8498985383251553`*^9, 3.849898539695671*^9}, 
   3.8514302726637573`*^9},ExpressionUUID->"d47ba68e-5f9d-4375-9490-\
9c9ce67d20d7"],

Cell[CellGroupData[{

Cell["\<\
Venezuela was omitted because the national wealth figures were implausibly \
high.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.8514302929666843`*^9, 
  3.851430327292925*^9}},ExpressionUUID->"2cb2eead-571b-4efb-bac5-\
77c22d999693"],

Cell["Taiwan doesn\[CloseCurlyQuote]t have any trade data.", "ItemNumbered",
 CellChangeTimes->{{3.8514302929666843`*^9, 
  3.851430331020555*^9}},ExpressionUUID->"3d7f2d81-ca32-4ab9-abf1-\
a7681fb5e774"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tactic Matrix", "Subsection",
 CellChangeTimes->{{3.8435013493622227`*^9, 3.8435014014304113`*^9}, {
   3.843508329287415*^9, 3.843508346888082*^9}, 3.8476191170795183`*^9, {
   3.851430491400609*^9, 
   3.851430498451194*^9}},ExpressionUUID->"49aff420-c4a4-46f6-9573-\
4962822dd7bd"],

Cell[CellGroupData[{

Cell["NormalizeT", "Subsubsection",
 CellChangeTimes->{{3.844250209938654*^9, 
  3.844250211964954*^9}},ExpressionUUID->"e976860f-1034-4282-8bc7-\
3cc484ab332b"],

Cell["\<\
Normalize a component of the tactic matrix by scaling it to the size (wealth) \
vector. Output: list.\
\>", "Text",
 CellChangeTimes->{{3.844250991483757*^9, 3.844251014047002*^9}, {
  3.8721093261246367`*^9, 
  3.8721093300842543`*^9}},ExpressionUUID->"58fff410-2914-4c88-b752-\
20cfc57b0837"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalizeT", "[", 
   RowBox[{"s_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "T", "]"}], "/", "s"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844250483719075*^9, 3.844250489695303*^9}, {
  3.8442506136877613`*^9, 3.844250617102112*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"f8163046-9ba4-47a4-84cf-1c4f671f8bda"],

Cell["\<\
Generate the vector to be used for normalizing components of the tactic \
matrix. This vector is the elementwise maximum of the wealth vector (from the \
prior year) and the expenditure vector. Output: list.\
\>", "Text",
 CellChangeTimes->{{3.8624332834733686`*^9, 3.862433341773369*^9}, {
  3.872109342212021*^9, 
  3.872109344773305*^9}},ExpressionUUID->"288dda97-f458-4b91-b933-\
f90669bc9611"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalizationVector", "[", "year_", "]"}], ":=", 
  RowBox[{"ElementwiseMax", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"WealthVector", "[", 
      RowBox[{"year", "-", "1"}], "]"}], ",", 
     RowBox[{"ExpenditureVector", "[", "year", "]"}]}], "}"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862433228901869*^9, 3.86243327300413*^9}, {
  3.8624339052534037`*^9, 3.862433908584656*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4cbdaf6f-fb0d-450d-a260-aca88d9b78a1"],

Cell["Total power expended (vector). Output: list.", "Text",
 CellChangeTimes->{{3.862431695860133*^9, 3.862431729876243*^9}, {
  3.862432117920766*^9, 3.862432119454255*^9}, {3.872109351139071*^9, 
  3.8721093516395483`*^9}},ExpressionUUID->"61687601-d700-4891-a30c-\
64bb7ee47474"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpenditureVector", "[", "year_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"TradeMatrix", "[", "year", "]"}], "+", 
    RowBox[{"ConflictMatrix", "[", "year", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862431703425027*^9, 3.8624317136466827`*^9}, {
  3.862432121325768*^9, 3.862432125922377*^9}, {3.8624328416913013`*^9, 
  3.8624328670506897`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"f0340322-2c32-4e1f-8aec-ae3f9d98ccec"],

Cell["Undo the normalization of a tactic matrix. Output: list.", "Text",
 CellChangeTimes->{{3.844250991483757*^9, 3.844251014047002*^9}, {
  3.855513019944003*^9, 3.855513029543022*^9}, {3.8721093534841623`*^9, 
  3.8721093538776093`*^9}},ExpressionUUID->"7b2bb64e-571c-4c6e-8653-\
8220343ec7df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DenormalizeT", "[", 
   RowBox[{"s_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "T", "]"}], "*", "s"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844250483719075*^9, 3.844250489695303*^9}, {
   3.8442506136877613`*^9, 3.844250617102112*^9}, 3.8555130325817003`*^9, {
   3.855513132899393*^9, 3.855513133920928*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"f69650c3-8ade-4491-bbee-06dddeea82b8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tpos", "Subsubsection",
 CellChangeTimes->{{3.843494312252573*^9, 3.843494339599812*^9}, 
   3.843508004583666*^9},ExpressionUUID->"6fd28e0b-ac7b-4a35-855c-\
537c8dc049b8"],

Cell[TextData[{
 "For each year, a ",
 StyleBox["Tpos", "Input"],
 " matrix is assembled from the goods (G) and services (S) trade data: ",
 StyleBox["Tpos",
  FontWeight->"Bold"],
 " ",
 StyleBox["= G + Transpose[G] + S + Transpose[S]",
  FontWeight->"Bold"],
 ". The resulting matrix reflects the percentage of national wealth allocated \
towards dyadic trade. It is not symmetric due to the normalization step. \
Output: matrix."
}], "Text",
 CellChangeTimes->{{3.8435014326102867`*^9, 3.843501460707451*^9}, {
  3.843507021774925*^9, 3.8435070244450197`*^9}, {3.8435071508070803`*^9, 
  3.843507161461433*^9}, {3.843507225660283*^9, 3.843507226888054*^9}, {
  3.8435073476240177`*^9, 3.843507375353416*^9}, {3.843507580477084*^9, 
  3.843507595977859*^9}, {3.843507974193953*^9, 3.843507975190379*^9}, {
  3.847624465944016*^9, 3.847624497322236*^9}, {3.855486719497295*^9, 
  3.8554867293888483`*^9}, {3.8721093716260633`*^9, 3.872109417009057*^9}, {
  3.872109490626053*^9, 
  3.872109500122796*^9}},ExpressionUUID->"f2e76d68-3a0f-48cc-8055-\
5f115fbbb689"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tpos", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Tpos", "[", "year", "]"}], "=", 
   RowBox[{"NormalizeT", "[", 
    RowBox[{
     RowBox[{"NormalizationVector", "[", "year", "]"}], ",", 
     RowBox[{"TradeMatrix", "[", "year", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8434943272839613`*^9, 3.843494332471025*^9}, {
   3.843508007114545*^9, 3.843508043733452*^9}, {3.84350808072439*^9, 
   3.843508090299428*^9}, {3.843512410643618*^9, 3.843512417251636*^9}, {
   3.844251108368189*^9, 3.844251118411347*^9}, {3.855610907804089*^9, 
   3.855610910581686*^9}, 3.862431025098013*^9, 3.862433983673388*^9, {
   3.86243402268908*^9, 3.862434024462389*^9}, 3.862434379232952*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"55040f6d-4489-4efa-9093-0b9393cce99d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tneg", "Subsubsection",
 CellChangeTimes->{{3.843511797881061*^9, 
  3.8435117994064817`*^9}},ExpressionUUID->"552b7a1b-94ff-4ed3-9cb7-\
21c285562bb0"],

Cell["\<\
Construct the conflict matrix for a given year by importing the conflict \
data. Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.843512844118165*^9, 3.84351284439863*^9}, {
  3.844114007029657*^9, 3.8441140379521513`*^9}, {3.8721095129969873`*^9, 
  3.872109537502969*^9}},ExpressionUUID->"c8807a48-1496-4a9d-bbc4-\
8cf0dc285d42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tneg", "[", "year_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Tneg", "[", "year", "]"}], "=", 
   RowBox[{"NormalizeT", "[", 
    RowBox[{
     RowBox[{"NormalizationVector", "[", "year", "]"}], ",", 
     RowBox[{"ConflictMatrix", "[", "year", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844113969676598*^9, 3.84411399109179*^9}, {
   3.8441147623960667`*^9, 3.844114765613819*^9}, {3.844251156278714*^9, 
   3.844251159161772*^9}, {3.862424992123127*^9, 3.862424993637682*^9}, {
   3.86243130854817*^9, 3.8624313117307873`*^9}, 3.862433985920422*^9, 
   3.862434034915201*^9, 3.86243438701269*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"25e244ed-a692-44a0-b849-c93c637a6f5e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tzed", "Subsubsection",
 CellChangeTimes->{{3.843511802323413*^9, 
  3.843511803266273*^9}},ExpressionUUID->"91bed078-cb0e-4d88-aa1e-\
6a36c29f7234"],

Cell["\<\
A matrix representing the amount of wealth not allocated to other countries \
in a given year. Output: matrix.\
\>", "Text",
 CellChangeTimes->{{3.872109611802697*^9, 
  3.872109641699892*^9}},ExpressionUUID->"ca7e327b-da78-4a69-94f1-\
d3ecbec4b934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tzed", "[", "year_", "]"}], ":=", " ", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"1.", "-", 
    RowBox[{"Total", "[", 
     RowBox[{"Tpos", "[", "year", "]"}], "]"}], "-", 
    RowBox[{"Total", "[", 
     RowBox[{"Tneg", "[", "year", "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.84351181167976*^9, 3.843511819028275*^9}, {
   3.843511916663272*^9, 3.843511967950975*^9}, {3.844251166333478*^9, 
   3.844251168529654*^9}, {3.8476241167005577`*^9, 3.847624118571928*^9}, {
   3.8476241549392643`*^9, 3.847624159441937*^9}, 3.862418052117509*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"52c4ceb6-c2f3-4cd5-afac-19c1f6b2e54d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["World Power Structure", "Subsection",
 CellChangeTimes->{{3.872103853481181*^9, 
  3.872103856752119*^9}},ExpressionUUID->"cf58a631-03be-46cc-b05d-\
fb320c6875dc"],

Cell[CellGroupData[{

Cell["Extended Power Structures", "Subsubsection",
 CellChangeTimes->{{3.8719071730594254`*^9, 3.871907175162677*^9}, {
  3.8721039387279387`*^9, 
  3.8721039446773443`*^9}},ExpressionUUID->"2df4aebc-15a4-4735-9d17-\
9c6af30137af"],

Cell[TextData[{
 "Instead of a tactic matrix T, an extended power structure includes the \
component parts ",
 StyleBox["Tpos", "Input"],
 ", ",
 StyleBox["Tneg", "Input"],
 ", and ",
 StyleBox["Tzed", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.8719063052130003`*^9, 3.8719063299059973`*^9}, {
  3.872103963265093*^9, 
  3.872103967154296*^9}},ExpressionUUID->"3ceceb62-86d8-491f-b5b9-\
33061227ab39"],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<s\>\"", "\[Rule]", "s"}], ",", 
   RowBox[{"\"\<Tpos\>\"", "\[Rule]", "Tpos"}], ",", 
   RowBox[{"\"\<Tneg\>\"", "\[Rule]", "Tneg"}], ",", 
   RowBox[{"\"\<Tzed\>\"", "\[Rule]", "Tzed"}]}], "|>"}]], "Input",
 CellChangeTimes->{{3.871906251295842*^9, 3.871906299658819*^9}, {
  3.8721096636093197`*^9, 3.872109664371875*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b9385d43-46c7-49fc-a353-7fc43cef0cd3"],

Cell[TextData[{
 "An extended power structure is instantiated using ",
 StyleBox["Tpos", "Input"],
 " and ",
 StyleBox["Tneg", "Input"],
 "; ",
 StyleBox["Tzed", "Input"],
 " is inferred. Output: extended power structure."
}], "Text",
 CellChangeTimes->{{3.871907260367174*^9, 3.8719072883072*^9}, {
  3.872103946648987*^9, 3.872103976142646*^9}, {3.872104016155054*^9, 
  3.87210402297187*^9}, {3.872109677653368*^9, 
  3.8721096856135197`*^9}},ExpressionUUID->"6b636f66-1820-4b26-8204-\
9740748ce10d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PowerStructure", "[", 
   RowBox[{"s_List", ",", 
    RowBox[{"Tpos_List", "?", "MatrixQ"}], ",", 
    RowBox[{"Tneg_List", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<s\>\"", "\[Rule]", "s"}], ",", 
    RowBox[{"\"\<Tpos\>\"", "\[Rule]", "Tpos"}], ",", 
    RowBox[{"\"\<Tneg\>\"", "\[Rule]", "Tneg"}], ",", 
    RowBox[{"\"\<Tzed\>\"", "\[Rule]", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"1.", "-", 
       RowBox[{"Total", "[", "Tpos", "]"}], "-", 
       RowBox[{"Total", "[", "Tneg", "]"}]}], "]"}]}]}], "|>"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.871907177143306*^9, 3.87190719239093*^9}, {
  3.871907225720475*^9, 3.871907233166843*^9}, {3.871907319814024*^9, 
  3.871907350070321*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ac74852d-db39-47c6-9806-91de018f1369"],

Cell["\<\
Tests for whether a power structure is an extended one. Output: Boolean.\
\>", "Text",
 CellChangeTimes->{{3.872103995784789*^9, 
  3.872104013528368*^9}},ExpressionUUID->"96d67d0e-ad51-4541-87e8-\
fcff8d23c094"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtendedPowerStructureQ", "[", "ps_", "]"}], ":=", " ", 
  RowBox[{"KeyExistsQ", "[", 
   RowBox[{"ps", ",", "\"\<Tpos\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8719067327519836`*^9, 3.8719067472731533`*^9}, {
  3.871906793478035*^9, 3.87190680229313*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"aa928420-7f94-43e2-93df-5499f4e50344"]
}, Closed]],

Cell[CellGroupData[{

Cell["WorldPowerStructureSeries", "Subsubsection",
 CellChangeTimes->{{3.871906660521751*^9, 3.87190666429361*^9}, 
   3.87210386422488*^9},ExpressionUUID->"3d65f212-c850-49f5-890a-\
c24ddc9a8ec8"],

Cell["\<\
The world power structure, indexed by year (1996-2020). Note that this uses \
the wealth vector of the prior year because, in the WID data set, national \
wealth is measured on the last day of the calendar year (and thus it is the \
prior year\[CloseCurlyQuote]s wealth vector that is altered by the current \
year\[CloseCurlyQuote]s trade and military activity). Output: size \
vector.Output: list of extended power structures. Output: list of extended \
power structures.\
\>", "Text",
 CellChangeTimes->{{3.871906667978141*^9, 3.871906696781158*^9}, {
  3.871929354563078*^9, 3.8719293582661047`*^9}, {3.871929627734188*^9, 
  3.87192967757826*^9}, {3.87192998358565*^9, 3.871929995079241*^9}, {
  3.872108261765456*^9, 3.872108309970612*^9}, {3.872109699964342*^9, 
  3.8721097114732857`*^9}},ExpressionUUID->"f41630ae-b969-49a7-abcc-\
041372b0d1a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WorldPowerStructureSeries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"PowerStructure", "[", 
        RowBox[{
         RowBox[{"WealthVector", "[", 
          RowBox[{"i", "-", "1"}], "]"}], ",", 
         RowBox[{"Tpos", "[", "i", "]"}], ",", 
         RowBox[{"Tneg", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"<|", 
        RowBox[{"\"\<year\>\"", "\[Rule]", "i"}], "|>"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1996", ",", "2020"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.871928795075473*^9, 3.871928850733746*^9}, {
   3.871928886953891*^9, 3.871928912640806*^9}, 3.8719289454378223`*^9, {
   3.871928980362069*^9, 3.871929034373825*^9}, 3.871929068501019*^9, {
   3.871929218873238*^9, 3.871929220457036*^9}, {3.871929352068831*^9, 
   3.871929352310666*^9}, 3.871929890984057*^9, {3.871929929061488*^9, 
   3.871929967466549*^9}, {3.8719302298089027`*^9, 3.8719302314725313`*^9}, {
   3.872015542111396*^9, 3.872015563031348*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2eb67872-72a9-4f06-bbed-e015a75f499f"]
}, Closed]],

Cell[CellGroupData[{

Cell["WorldPowerStructure", "Subsubsection",
 CellChangeTimes->{
  3.872103869063354*^9},ExpressionUUID->"a42bdf56-358c-4625-a426-\
110109b198da"],

Cell["\<\
World power structure for a given year. Output: extended power structure.\
\>", "Text",
 CellChangeTimes->{{3.8719295556752462`*^9, 3.871929570029323*^9}, 
   3.871929756562829*^9},ExpressionUUID->"372021f2-bc17-4022-8a35-\
5f0c119aac26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WorldPowerStructure", "[", "year_", "]"}], ":=", 
  RowBox[{"WorldPowerStructureSeries", "[", 
   RowBox[{"[", 
    RowBox[{"year", "-", "1995"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8719294927769957`*^9, 3.871929495563491*^9}, {
  3.8719295468415318`*^9, 3.87192955037856*^9}, {3.8719300668931303`*^9, 
  3.871930077272929*^9}, {3.8720155717581*^9, 3.872015572585785*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"dbbb8a16-8c7f-4fb3-b53d-4ee7014d27f0"],

Cell["\<\
World power structure for a sequence of years. Output: list of extended power \
structures.\
\>", "Text",
 CellChangeTimes->{{3.871929724530239*^9, 
  3.871929744366067*^9}},ExpressionUUID->"bada8dad-2e96-4e92-b65e-\
4b1de98e4487"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WorldPowerStructure", "[", 
   RowBox[{"start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"WorldPowerStructureSeries", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"start", "-", "1995"}], ";;", 
     RowBox[{"end", "-", "1995"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8719297498664207`*^9, 3.871929753700872*^9}, {
  3.871930198554592*^9, 3.871930202621716*^9}, {3.87201558052841*^9, 
  3.8720155812682056`*^9}, {3.872015617714821*^9, 3.872015647071788*^9}, {
  3.87201574507867*^9, 3.872015787904604*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"8f4c1012-f452-46e7-a1e4-a887462cf6e3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.846624524206375*^9, 
  3.846624525669284*^9}},ExpressionUUID->"2eb52d11-d03b-42e8-9064-\
8eca77f4140a"],

Cell[CellGroupData[{

Cell["General", "Subsubsection",
 CellChangeTimes->{{3.853963008578339*^9, 
  3.853963014039858*^9}},ExpressionUUID->"9e7925bc-3b9b-4de2-8ac4-\
d67cd97654e0"],

Cell["\<\
The parameters \[Beta] and \[Lambda] are assumed to be scalars in this \
implementation. \
\>", "Text",
 CellChangeTimes->{{3.84662617582845*^9, 3.846626188139141*^9}, {
   3.8466263161047897`*^9, 3.8466263298753138`*^9}, {3.846626523095646*^9, 
   3.846626558388733*^9}, 3.854910458224464*^9, {3.8549104930334463`*^9, 
   3.854910495145224*^9}, {3.862427724023973*^9, 
   3.862427735769018*^9}},ExpressionUUID->"ed750ea5-0a08-4732-9ce8-\
96ba067b3474"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", "1.025"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", "1.392"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.85491045084348*^9, 3.854910513695559*^9}, 
   3.855084302797944*^9, 3.86231851084877*^9, 3.862740720423151*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"24e0763d-f338-4a12-ac2e-0ca5439cfd39"]
}, Closed]],

Cell[CellGroupData[{

Cell["Relationship between trade and growth", "Subsubsection",
 CellChangeTimes->{{3.854630969199212*^9, 3.8546309751601267`*^9}, {
   3.854695377211376*^9, 3.854695382328415*^9}, 
   3.8548777773084993`*^9},ExpressionUUID->"44957b6e-82c0-403e-a264-\
5bee54779b74"],

Cell["\<\
What is the relationship between one year\[CloseCurlyQuote]s trade volume and \
the next year\[CloseCurlyQuote]s growth (in wealth)? Want to plot growth % as \
a function of  trade % and see what the distribution of points looks like.\
\>", "Text",
 CellChangeTimes->{{3.854630978733408*^9, 3.8546310111586847`*^9}, {
   3.854631041265304*^9, 3.854631113053421*^9}, 
   3.854631592115362*^9},ExpressionUUID->"e58e4863-ab3f-4f9c-b9eb-\
0ef84cab1306"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"growthPct", "=", 
   RowBox[{
    RowBox[{"WealthSeriesInterval", "[", 
     RowBox[{"1996", ",", "2020"}], "]"}], "/", 
    RowBox[{"WealthSeriesInterval", "[", 
     RowBox[{"1995", ",", "2019"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tradePct", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"TradeVector", "[", "#", "]"}], "/", 
       RowBox[{"WealthVector", "[", 
        RowBox[{"#", "-", "1"}], "]"}]}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1996", ",", "2020"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "tradePct", "]"}], ",", 
      RowBox[{"Flatten", "[", "growthPct", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "tradePercentage"}], "}"}], ",", "tradePercentage"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"eq", ",", 
     RowBox[{"{", 
      RowBox[{"tradePercentage", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.854631117494021*^9, 3.854631119719952*^9}, 
   3.854631200528489*^9, 3.854631231430049*^9, {3.854631477361856*^9, 
   3.854631481384369*^9}, {3.854632084483317*^9, 3.854632110528553*^9}, {
   3.854632150446452*^9, 3.854632161788969*^9}, {3.855087556354619*^9, 
   3.855087586478286*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[825]:=",ExpressionUUID->"3cbaf16d-07c7-447d-836a-971bd739c7cf"],

Cell[BoxData[
 RowBox[{"1.025320284154823`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.20123671751570427`", " ", "tradePercentage"}]}]], "Output",
 CellChangeTimes->{3.854631493515307*^9, 3.854632112103036*^9, 
  3.8546321628748817`*^9, 3.854878196187932*^9, 3.855087520742284*^9, 
  3.855087587272068*^9},
 CellLabel->
  "Out[828]=",ExpressionUUID->"40a3cebe-d3aa-4b37-9892-af6175b85025"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
W9JPkD7vzg+1czSG9/kUPeL1g2XowNvlu2ic4fGJ2K+ciQuNPbVsuwax+HM1
o3B8HCjxkckfEFS7bTVy3NHEHNnrlvQOcNO40rV27MiDMvxQEQ64zkfjvd6X
G1udPcFjU2GWLk6Dc1qQw5wXBZjPuJBxih7EDam2lx9bGhBB0PtzOIVQ45G7
4yYleOZ64ycr0c+jvX3MmKpSaFnoPPGPpJHIeYrh9DgLGWKCiR2cNPamzhy6
GBiNrUI3AxI1mAinY4bSREtRzHG/iOM+BVXj21fLcuKxcjKBUkh3L7i5sjkN
9vxCZNE4Js1wXmNSiaJJI/j1s66Xdo6FQeb0H4+IPlGWckmIVk1Ap1rM7Ksd
FBZW0VZzjKIxoS48Xw3hfCBHkE59CkISDso/W8BEV9yFm9nrfdG4IJEsCilv
fm9u6shGseD3RJGdNHhKi5unjb6DamkEvWOIhouKecoNxUIo/sWjYJeCtSoh
NThzSzXIaTeNxhsHQpOjvODgarajzomGxVFbiRnbU7FrMt/S8LhifN61zhPB
x62rTpdTWMb8uU/v2yNM0iVtJm6l2LLbXX2DlWffre+tZGKBc+GbIa1S9N27
7BtD4vOJZHJ0zplcBFe7e5lVUHitr3aQbW8+zFiWkkX0ddiZlS42ibjDLzH+
kJeC7xvPQIW72VP8pkM8H2wNEXDtUfUf2kVB0tGfK2hXKNSFNrU8vEGhWfuc
9ZVFGQi09t9798DoVH7LdpHxevmAxCdnxuJXxWnY6Tq/KvI6iT/pdUJBK+Mw
w00n/BcHDZu86Wd2B3nj9vJRLT3CZ/2TovR/WmZDoWe2lcZbwndSJdrXCEdg
ptV2j5iZA2CE23w/9NEf5Tr9ZTr9g7j0Rs9Uw0tILX7ShNWETrxOjsoqwKsX
vTdddzCRPae5RkajALP+4oFJ0tyarVItmOFkuqlXgMavlTn015slWD1JMCg8
DBJv+eQUgtX73KJkl5F4iWT8emyQDF+d0je1y2lUGhVZunO1oCL9evQ2wh8T
5Rwlh15XI0lkp2dDLo2S0OaHeSWh4DK6zCqXQ+GU1KiOLRfhb017Ei+v+5f/
W43+GEpUMXGxIF5qu18Cyjo2Jt4sHcT+MqfxTPYqqITfPq9B8vPvaeoNcoJF
6H4/Yf+ef/3lwcGix4Mk3zNajIKInnc09+/ZQoGx7a3snSBfJEe/fK33iDH1
9bdln9g27iHnYaodK7o9ZQqfYq6HMd2Ox0F90phYuKFztapiOFLmKJFFzqcw
1zDdPhQcUtdc59VTmH1KPui7cgH2mo2zX1YYAKdOtPf6XUG4ob7KcGc3wbuV
nt6ujEZw2UfzGZP41SqaftiVLsQrme5G7XHi/0vnSbpuScWV5TGXl8cwccls
/tffw8Gw5DvBzk/wvimHS3Z5behUPC6tlcrkW5WGp08mjAK/clh4UcQrbP+r
Fx6yWbweS0zB+evLnk8j+Y7//B7OWBMfvH7JUatC9H741ujx8unGqifu1Bve
IZ+fb3q687w1l7HQS1dGieD/4lCnQ5vUCjD723I/KYL3brm7RzRVnkH7kbC1
Hyvhm+qZ7qczYqb2636vWMt8uygY4fgJEP6V39j9tDUgc4ofeF8x3slvk4ND
K+fdKzeicVxGePmTpAJMF7UsSiU/v6y/arYyIwFBt2wMT91lov6NnGaWcgD2
SD+5ekntC3bdvPFnxcxofHd9Oub6lMKSd4/qE9/Fgme1fHbbOyZMB7D1J08T
LptPGA2qK6c1v7kM/RkeW7qqGOCrlVK6HN+AS+/1T0qoEH77ZYddpnMZmmd+
SOq/8o/P19z0ilo/nZyPcepnC6LXBM4NHX27rR93U0tNoovD8OJe6uJiO3Ie
gg9Zfd2SER3+QS/4wb/n48TWM+u7mKB8bnEpa3QgYTL+mNhgMDivWDcc0XoT
gn8AiemmbWnUG/T7Ks1iFaah2PLyavO5AhRMyHdrCntdu7/X+VfgwKSR/Y/M
CDQ4XwVTnrBHmo0MDJdcZN73jUG8fcFJU0MGtlp9veqTHwOnScCnkJqWqtFg
kIsiZtOZ5URP1Zg+H5hem4k1n7l+3Cb4R/VYTV9wPQ4RlctdzpD9yni3PrrS
3QrrAo3rTvkSPtkrcZuSTcbmv/q1fIvz6QD7NpgtKr458xuNOdO12ZOCatA6
O7rq7Buir8r8vHvuBkDc5Hm3+bF/+9GkHDZvjTQNljdznU4mPsOdi9vjNSbq
WfanBb1HA8FYG20j6kOhgt167mHzQqwUP75ku9vA1PORZiqcrREUTKe/UK7u
SselNVtV+9iGoPh84c+Bo4Wwuj5hFC4nPF584e5zNFYMuzqO0ZCPb7F7JlSG
nUE/VLLKyOfdE0mrOkZim+2+x1fdaNhbcclo745DSuatRdcayfleP7Z9z1EH
iCvWtX5tJ89v9z4TmB+CuFkVR9oJnzDK6BQ1MonGSPTGgi+7GNjtefv+tdqn
SNhTFuY1SmPdkZHVJhfLsWii3ChG9Pjc0IOex9Nw9cXW+ceu0lhopq/PfT0V
GbS76asQwud011Xxm8bB5e06smgw/JIkznxuwryXh3aelaNxjbd1LqMhGgc1
A78tI3z33rl17vxJwTA7HaJhepuGxOrFQfJa8Xg278DPqooR/LwbufB5SApY
8lRerb1KQftN1MELC7yxwnC4dqH1ILi1FFo/iEThmKdyOyOC8CWhihwrw3DI
P5pgiIRPzK4X7ZpTiB22KT3zd/TiROHCLU/FG2GZbhXS/ZDGjHS9a76yYcgX
yFixJ4/C52DnaXlnYvDNuyWvp5gC+67uHcdNa7HtvpCcURmFXE7dRXYKmXgd
FXy/i3z+kIxclveR5bi9tTjccA/Jv/d0VyYmxmCfQIt9VTuFw/K2i5zZn2O4
fdmdgSQK6rcELwyR/Fn1YBFsiT7/eXnJPKOTj9B/9p73exEayTpM23kn3k/V
7x7mnQ7w2lMEvcl4GYDAp3a+5aPVEOvP6hAKGARvTja1caAZe6NnJMgQf6t/
2p5SnvkY/Dt/8e38RaHz8/bjyjM/YrJcKsNAgf7lorFuuyl8c4i8Kce8EIGR
jZ8tk4IozFsipuYclYqNfep3N2IUK9ayXZH65Y6ZGqlb15+lkRvGO/rOJQws
PRLSg+sotHypsq/2jJnSM6K7dL/yvQzHLLaZBz/6UZhT+/SX4cwg4ELY9B03
CD9PrfvoYukJxuCEUZjJfYrjml0JFKKs6KUCTEgvj/6k6BYKjUQZtwc7Kch/
zRdzVkjCraJFFPtPkn+FFVXmczXgiODXGUlbaVTk6+xX+JEwxbeU+5tRlRmC
yXaHGeFb0+6fKjZKwVZNDc6Lf8h+y1jz6zKDsHjSSDysxfqlRmHoFTWLNHZm
wGrjpkN1b/3gcZzH//JJCgVcebTltxLESrKMG1bR2BH04Eu7fQ7ov/2nwI4W
ru6PKZjuUMk0uEDDQJk9t0kuFXMN51VcU2egq/G4pvaVh/h4k24eEqVwT2fo
Q7rYKxzaPaDo/4yJdl7mj8/74/FE3ilaqY2BA1Lf+XWJf/4045K5/5VCUOS7
XGHORhw/azfCp0nh91PWWY5Jz3GwawnjqQPhu81CXUpPciA2Uc7YTGOtboJT
MLcv9lzI2S7c0os+Ruby/m+JqN6ul/rQm8KBmzLfjFN9kLVI4Po4ef+WfX2r
Ojhypvxh2OP2kbXp7di0f6Uxz9w+RNwx2zfDxABMDaGele0MzNrqcdwwqwyy
mTO7ekm+ehd5fBpj7cOp59E8KismWwDzBVT1+7WEr/P2+Qo6NYDv0AC7A/Hv
50ss5eW9SxCc2XzrCeHzfvca2ktE83HxcvpDP7Kf+bNFOt9czIWW1KfT/CGE
fxxK1hqoi4b8+CWnQ2kMSK6TK1q1pRQ9648nnL1LIct1YEnbeDye2kicufKF
wvVsT4/VJ1Ixtu9DVCCJV9/Ui9V8KjU4LbXiUPV2Jhp8j7xXfxsPgbVf5c+z
ED1kXT17t1AczpnP6b2WQcF6dPBgz7sIcGxxsp77vBsfUl6mL+5NwuXjdxRf
hFGQWVczsNvYD1GP9m5fRvT4gt+7Ffx9c6A0SaAIP5A/1iil0In2Cfn9mMSH
TyhX/PZi/OQYlMwm+dQ8TE7JvKoWMn7RSzL9aIjsKjpkrPIQpafk5qQTvs61
p0ecIzABLfQ0/rV3BmCR/aHBtOweJum0PYU35a3N+y2D/quH9I6iTCSu8mjG
a7jca19uLjeEyNv5inKXS9C+5qX2JYI/X8OvNp+5ngPtRKd7i0ooNH5l1K9d
mY9NkdJCl04z0BD37N2PkdipeobsScPTuu0Z4J008j5Lnl1Q6QtDzhPp0jzC
17nvLePayBOK7TJc20R6iF7/c1H7VEgSJuGc6KWpetmCNCWT6wPQG+beJNH9
FA/mckgOHKQR3vR5VsHcOEyoV/OgAZTNfq7L9jAAxwMU7re8YmDn3Qib6bFZ
U/FVepr5vSo9ErYzJzrAFLZru8z8dt0X9RcnCM8AND6XyLKqDP/lEyOwlnq1
kF04A7Ut01MvW1BwD52vLnQ2DwP3Yl+1z6dx9eg7AT6zlqn6FN+JE28+sBZD
+7rNc7aSQVxzv9ktm/oY1VUTRoFl03L5572J4FwbaOp2jIG4A2+C3V81wFBy
2ZDhagZ8NT1GX5ysxYPi70JBRP8c9fmlvMo/dKrerKlzSe7o+yYM17TZaj79
xx+GePfUuyRQqEyeV1q0Ox6tIm/ZWwwp6K7zduU0q8Dv5Tpa1WkU9rgq2vHr
FuKAlmvGtKX/9MCo/A+NxURv5EUfTdwVmoSb5RMF3n4IFDF9bc/4wPXARenl
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
wlCTnOybt9i1V3LzwGkKrvbS764GT5LvOzPx1vlXfeg/ZvN4TUA86qYvTH0/
1A+vW3q/R/ijmP2oPDDbNzg/Fy3S/R2XeVkQOmzWPt09FhsvsrTNJfpRfDFd
kepMY87v0I/m4XyFSKZ/8fFO0aBNxP/lpYil59kTPLdxbTT/pzRUFnF/bhci
f1aaosVjEIsSwk7a9xF8Th2MtAt2QgZdJHItg8bwYQXeVZMz8WuMX+8ssrzy
fBOF6ysrhIWmDIL+8mx2hZ0b1DwEF08k78PNU27Jt/pWnJh0RuzWE8LXDJ7K
rXBMwx16ylWJyn6oS7bN/2MRy+hnfJLtXm6zwRsXntAzfvjRiLGcXJ76MwzV
ogaO+ux66M6VyR4Sefg+hX0hz8Kekk3tB3QamfrK4gYrcafqPPw9diPBguCF
RZcS8362uqOrfIJSFomHhWnbz9vapTB6ypukn+WcdQ/HK8Glpme1aRgMjPyZ
eCkDa5xHz5WuYUHl+MaBq065zPxR663Dd4O5Yph/32LdE7HUNgZGsgttij/Q
0Dh4vWJ5WhxMnis+1VxA45iG7QkR9QooP224N4WtN+QhnDbndwY46V9B8ueu
kqPaWa9xe07dyYO6NKyvGJX7h6WN6Q9QqNitpuPBikW2GuuFeDY7n3Tr/U5h
fzyaEenwd5BGXwTtsWiwFhOd93x4Q+Jv0+xE15En+cw8GC/hkHTVkEo4lVf1
7DzVj5nfwhWX3slHqQ53lZJOPybzyExpGogCR/6Uqx9cL1NSNXoymP4yzUYd
3diEOBQLHLa9t4q8H8M6gxVbk5l490DG6nF1aymecgTMv6Byt/KuxXM+4+Lx
+q0Pyfl46UJfL3sViJuT1uauIHx/fYX9tUX27Uy9TGGC+DOx8c0Q8co+KHKf
xvpmwddlD2uxOKx+/+n1FDxeK1rcP1mNXenfjrkR/5L3ZmHERttIpn5x42z/
SL5Pmcx8GzND8ZG4dVmMPxlekzQkfTPhX39Nw7hZoisCGPzytmig+VCGNZ6O
6cNV5WXtktePguevwAM/+WjcNaPcQhTrQY/pvZ/09ixxV6iD83O1FecIH8kt
rUquOJQBN/7HxpoN//qJ1f3mdfelUpi1bFutWXwqmr5IhFWcZc+fv95jIhLE
nGcex/yLB7gLEDKGB0aSNTze7vaDZeWJH/tWDuAbFfXzpXg+ImO22F58QmPP
+okeqePy8PtI3fQNvymoX3k14YNQ9X+/l52/jLHQC9lZwNQ78y1ctEexMwbD
m9soidXEfrXCP//+lAQvtprgTRY6twcZdbSl4z95QRY+75L/H1HXHU/194eb
FGW2tEQlqYxCkjwVKiltKaGhaNFUikQakiKJ7L333nvvEQmhtJB7P1cUJf3O
vV+/Tx/nHy91x+dzzvv9POe838+TcaUrAFoyH9Q/nSXx49jPttviSXQ9rNnz
6wlLDqTT+qKrBxHz6W8B7Dn9xQxoOMrZDa+Iw0/zA3yVNd+QVjS99M/6f/7y
c1c3hQRmRKJGZF/rAksWOldqNSRnd4F7ck3anOkD6Km4x+00lArlokMhd0co
HPnkmXNrbzhEj2/XzCV4WlrjgPG7vET6vPi3v65dKMErvNdvc2vv78WH2dzW
qV+CCLb1upKZ+x3vAqbL/d6bAM5xywaCx5+rL8jiDUcO9su+ukdBlNv3ncCZ
Kng9cmMrROJqmpJZ2fJGtC1NaV2a0gvxk8kPC7k8IK2ibb18LgO2SWIVMvUB
OMbzR7MkoBem653fX62rG9frInjoMl+6ilUy5hon3W75xYDU4h+CTb2VyJfs
qrOMIflOuC1ym1T8eL/CAJ7E9M7rSq3CZdkPsbpPGZCfvFf/5CSSD6W6dz16
wYBpwjvju3Pdkcm2nyH54/fJJlvFPx3g2BnZ9GPJtjNfkrizxvUbvsIspiD6
+rFmOr9a3ZRXWxTbgmzf2bGVH8l6MJx2ytjan8aDvV0ON1Re/YaTB1twlwGG
xO3GN58DED5r0zdHwpdtlqYlnDQMpv0aZvHZ6H7dm4wfvU2Rh2MZUJmptPDh
1Djwj/vxtkx4Mz8gOwSJ154aOxJ8XbY2ZRffzXjwjfujLVjB8y7gdTqWPvBd
p7qPwp32mZt7JvvDdby+w/1hyN/IYXf6vOPWL4dnKfk5+HXNKkNVn4maO1u3
WmiFk9eVnC3RwURO/IfLQu3BqDFhT1C2PvT0xYzCYpTEfchd50/hzzyto3lz
/SDSKbrSvYoFWx2PsVcz4rF/yobHS7azoDmoV7CrNhUGveXD/fuZ0Jae+Eme
8CHebZKpZi6EjyYd2q5Q5wfPwxFfOnYTfnvljd3vm0F0fWVvoNCmkzb1SFxd
mbC6cgAXa6UZZ1VzwM05AGPi4ssb/XN2xWGQXc5dS0FGdOcKizX5UGkxS5aT
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
X639ahaduTwJM7jruzPJ8ym4JjFqpZGH3B9OlY/J/To4sbLQc2EAnW8Mnm1m
3JnsDgdBP/kugo/2RvU0XL6XiJUDR9a7ixN+tvVKZk1RIhTzdLZmkPkw6Mjv
lnwyBKb8+9+8/0HBrj3yINeOEljwypLBwp7AWu6YF26wDt4cbbiSQsw7hbLn
S4Lo/fQZ1zxDI4QzwNneJfFN4nzyYPmuQNr/8lB2hdfmsSC8bWFfFBSF7VvP
yLkhkbtqsextwq8320j9Uaul9bxbPyrMPMlfgIcXP3kcIPOjVjyXa/jIv/OI
yhW7Da59KUD+4zSddXMIX9t4Z2Dt/bu0n26pYNObyT01tL5+gtLJ2raUEsxw
XRQincrEzUfPR+rH6sb97Mh6+Hxe1943DiUVlKMk+b49F988fP46EzxDL7IL
PMjzefnhYr9OKNQT+BlMRRZuS/vIGsVng138NT1oAB0h2YkrB+LR5MZz1Irk
Y6OrHstiZ7zEX6V3kxc6UCg8+etk+a5S7B2W2/jXjgmPCxKDKjV1UGt+9uF4
ERMrZCYaO20PRXLgunDzaz/wYKlEr69KPc2/q/76ZcjueUHrZWic5/n6XT0N
nk5yhcobCD/mLrQtfVMBo/H61svb7F2fEXyxufcFegn/meOwknEoNZ/2g30e
YXT01og/XE0Nj2RrMbCP0jq8kDsJP12bMj/mU3DkK1+x2L8Kds83avAaE/wr
5nfDgiscPHrraqBK4Zsopci7LB9O58XJoHDm4JNNXNtScY1rFRkUlOVypF2c
I9AYlsSVGkfhptiQlGJWBD77bNNlkPU03eyrsLR8IL1/GVm2JeBBfSQ8vvrM
XEPyp3WbuXt2xlNkHpoWq3efxBNKbM36uamwmsKuOCP8IM8iUUbqNVIeHtOZ
8YLwx3rPyyLJjVBrOTJtI4mPzi9/Wf/JKQf7bsmR+b9ijcgz1woPjP7OWClv
w8LZowJaItbB//Stojyu7jZ1AZdJ+Z+brwleCpOLmWITD+t5qxe+Eib3c/HL
1IP+3Rj+eEmEKmehv2ai0vV3GXR/waHnU6l7ounwoIwLfKczoT17WcEuRjQ4
xy9iJN/XRKuF6CVg5y/vreIkfnV7We9w7k1FY4GeuTbh7wb7DCdYXIvDENve
nOTDsXmVEiqy3vR+pMmTyFcTWWk4yGlwHYBD97P3mfzB8JVyfFQqQz7v8iHn
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
efivwH/1L4058/P0POj6ps5sPfEN7cnYZdl+Q8ufiQ3xe/fkxPihTbZanyLz
c+KTDIORIF9UcB43+byvf5Yxmlzxf31wc8NT1yScyrHg9E8y+hAbuPnE2+4k
nDo9vG2WO8m3u2s61ZXDMJrD/J3DZOFAJ3+r+pl8eF9jN9hRmCBgYCPVY4O3
437MB4fOrxQ7W03XP0bCMFXkdRGtJ1m0+ZTfWfUq/Gd/QeGTpEMQ1+F42F9Q
VxQneNlHonxmt3gGZnM23JlQnrzL4JNvMD4Mii5zf8yCqKGkqXVOCuzH91Mc
mZ3L9v4OB7tav47k/5+KzxbFur/A/fgje/tJvM780bzh76Iy5Eb9rLyVS8HZ
d7Gtll8Buh+vikn70IvNhWorJBp8scfu8quP6l8RaLLSZfNoOd1vX/M1/uzL
pS9pP4XvnwSPmCjEg6PGd5PgqZ3H5h0aLAanXX45hYHPKUst+zPBkX92YWKa
mdyM1JkpOMk5ACPfv3fGsyG/QPo8dI+Lo7sdfxw49jeBJP4F7bxw5XUZ7U/l
PTBS5WwfgqZ72zpGyP1bKyfe4zwjE4z/LmyIzeg48DYFO2e3RPgeZOvh3Vq8
b2E4rmYznz7NpJDrueCzV0oQOiUzySD8bKcWZdkQQNfv8bsPa21JCEZx0oq1
Th1M3BAtCWkwdoQ5Wz56PYW6V6l/ZlWnQIFtf7qaBYZp5PZG5yaaz33Z42jm
GVyHpqNOplYCBB/WS53X1i2Ftt9sp54ukj8/Nb439XTFWIfAn0Zy/xw3q7wQ
1vHH3vF+569jVvwWOvaQvLchxJrglX1aTw+99wij9a8emttcny71AZPsDbWF
NpP7F3F2adNQKr1foCb83UExMQX17OWzhYlVPibpDPEocNoVRhjQc18xQf9a
LL7zKe2XJ/wvJv/PemuLJHTL6uhZEz5cUC26S8UjmMbH1lsL1lg896DPA6T0
A7aIe2WAcxzz9DssP5X9OT07AJ+MZgX8cibxOGjeqjX7gxD3lL1hOoCkfc1r
H/RHwO93uu/vdCYYtsIxo5fCab3zuYfJOttRhKN3pqpVxlKolBn+8UDED6H+
Vyp7p1A45nHqdOpgKr2/vP/R7yjtwCR8PPxc5s7yHog1rZQU0QlCWvHCNoWm
fjiJv/i106Mcy8b7+ZeWxrqtWP+Jfr4JvZZ2qTcjx+NjLxRXOycU9xP84BAp
eu0ghaNbv8baFgbhV8yaRmHCR8sK58UwpxWiJZtxPfY2C2ec9MPW+iVAiG33
XU9hcuml13F9/pjs+cNleRwLgm9PFcnnVOGPX+Akw2Pk37fYwmb7lM23197J
fO3CwtLr8719OxJx81qkqjnBu4VPpIaEfgeP78cysF5ORGa1eSY6/edVTXvO
wCXTjbcyUxJgc+CF4KXHA7DZOve96Moo8Pf68fX6MVC/8FWi1OxwlLeLXX1Y
1Q+D2wYO4ZvIfGGXExI+qdA3a+zushjs5ggWsGD3ijH7mksiTtyQCCxexYS4
kbK76jdPul+XJ8br41qfdBofDpTNVzXdV0Lr8zsJiL1LbnfGCgvrRU+OsPC7
7vYBxdXN9Ho+cW943ZOCtPF4we6v/hT7Qzoe4U8qwp5UkPXzq72Ur9IHH8f9
iH9ldb1y0XGh+3mabaa3jqqn477kmLixLsnHe7fELqHycIr9uMwHIJD7Wk5U
IQ0WZ05fC1jEQtoTEaWFT5wwZLJHYQnhw15pE8sO6aaDbfZnMsbWI5A09n0T
RPun/e0K7G0ICqX9tacsr+dKeJZF+40z3qwcWCYVjKcezlkHbzERG1kj1+of
Qs+/EP3LcZ8fh+CcR8hZjxAWHuoL7C/hL0cc5/pfUdcdV+P7hklbhdA3ISqS
kGwSV7TMhiJ7lhCirCKESkt7au+0995TIZpKpBRpnPOeiozk95zz7fv+3t5/
+lCd857nue/rup/7vi4K2497tDjx5EDA7gq/HcEXaYJB93//zUPnQss7/4gM
Ycul+2/StuYgnA3PCf9vlytpTDweg+QJPY+O4IXXBsf88PAB+xrCItY6MdX3
eVCr2XT37w4Sz82GZje+T6P7G18KnzQXWFwM6xni5GaBFTP+XUs1HzXi8SvH
NFmo2KrflxmdDkl7ZfMPZH82HLOwNG1IAv+f8He+ZP81BYUpex6NxAmOYBGJ
vz+CTJg+cZBm26WUsrDUx8gt8vE0lTrvvouxr6KQKcsr9iv2xb/7h/A56fdq
e++9CkKy97tsXv0+1Ax/zGtZ1UDXDxLvcTHaBxow8Ju7pJDgt+78LFsQPvGf
Xtx6lC2yvlyKwMITviIaFBxT9/NO6cuh/Ru+BrpNUzdJg9WxlDevCR+yaHSa
E7ooiz4v7F+l9Mp7cxr9+jeIGbh6LvUDJzyPEn6o8Wvuzak3UeWz+uxNwu/C
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
ueKd73LcG0KXrO64k/26+NLTuov8zfT+7jPaFsKVkUn3P1hPtZk6yyCJ3r8R
e148H1jqAYbOe5EmEs+7HbbkBE93wSFrxfonsymcuWUYcZc3f2IeiPCnGcvf
s+dv+7x5Tmir9yFV0brp6Is0zHn+bdroCsJvdy0Ujl3lhmv8kcoPxgker5p9
TTH2v3jJQnvixnsZeuEoSSz1mXuaxPv3Yt26hpHIb83Rn7ua4OfgZLSXZ9Hn
cxFfDvo/fxlF8xU145be6/OjwZ6W27GXAtPfSv+LehS2st7P7NjCQop3wO2s
hBr6fGRyS/utng+59PwYX/wjS2HbdHycyJ8eotFcpnx5tJ95kvbli4rKcTT/
KnvzIlGs2gtfOYbOFIKFNNpkCrJxu1J9liMfhUlbNw6f4UqFxUT/9bqGBrVo
9yJ0JBQaP2b7eb2NWabdng1v4RD1xm4mSkPl+Gz70+B3dNueRIIHTBw/Fl7V
fg7JCb25kuCs9hU+oRP+Mkz4uGY9azaMRf+WWbEfVFloMHp/SUhrpcq/9Yhf
iH5SUHOI5w0M9y7f3viOfD6l9vNrvwXgrvSRj2UET4Vuvinlp9RIz9/basf+
3PWhESFfb5ObQo0n80ViYz3G7rR4fyXxhrk6MqxJsAyzv5VlGCuxcDruXJiS
ay6CN4mV8RA+Ozg0v+f74jRseH1+SuB6ClUDH2yfmGZiSYOBwBnC9y8tr/MO
y06HNtfV0M8k/nuMfrwkFeGPhWz7NYKvp60UCf+jeIPe/2W9s+oObYkDe1qt
eC0DLpFBvK4bKxDX/fJVJNn/AtHfN4gsfg2vpw6fBTIoiH190cr/+z4kOQvq
/3zgP/x3MkReQ7w/FP5+7IusJ+PmCENtfziz7c3qKBTza8avW1GIJbYuRdcJ
fhwXsx71NPZD8oLCa/lkP2uJf6qbW5wJnvhzZjUEbzu6i/W0DJTiX/t6Cj9e
XGuLFS0m++joR65/yOtzGt1h3ZsKt20xq2TIepTRF/hdxwyj53FMpU2tf0wK
QO3c9FUF0iw4FM5KNQ0rxomGL+6m+SSftSXkfsvzwaKx7u2NLylkrOP9EO0c
Ba3T0w9uIvHBR/dds4RQEsR52BmfrEejHlvJSSWQ6HI54nOTwtnkin3ae5Kw
5Xhi3TyCZ8JE/ShfzXi4d+gvOUbwhivjp9n6H54wqBOxnkvwgqUrU3GhXjl4
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
J55BbXPT5A5dBiaNfuRxknNFYt3ZO/dIvl26z2ZQa28OOOPj2n3YvKfiZM2V
IfQ+OSa8e+UQGgoFfvOrvYHLhJ7i7ad1u2K6ciGqJXYtTaQf0kE2W1eWuyOw
4ppYA8kXqUu8dVtSXkLu5D2u7+R51hjvvDntRSzYZNm4lIm6ivRPH8aC8M7C
UFnXdxC/Jx1TC5JOhv2/BrEQdUksEX8fN+HvPYAE7ailljUhKGKPzxJ+tdx/
SE+/PBYxlbs32BM+VxXRKS7un4vdEuLez0m8zxiJ7+SbFor8rRdkTi1kn+/o
nXbp8sWhFaZOJ8PIfr7+c/3aHdFQ4DRg9YMycxi8tSobe7dtOR1WwUCDX1XD
RXtvpAYyoyt3M2G1WCk55XgWPe/iejrbYuNUHzxjy/FNp1BdpW3wSMSdxj+t
qst36RumYm3Xy8cbyPvpPqBuU6znQ+tpzDFpC/nQ74F1h8PJPYjNkYsXuuu6
w2XCH2avnn6IwtJiqGrxjJWSz/dqZtOv2cXJOLt8nU2wCwPrCmv3dyuHYF1k
10CZMYXS4m/aU7YWwCPx+pcptQMosU3o/KhnhksT/ebGlm9CJf6WYCWngMuA
hZ/lUoZrOcbc2IaMg+il/DXNrcrhRWnofWkhv3+1rFvEwDNw7P3imdjXXDec
vjEFokuW/VLPHkDcafGlRZnB+Gf6012qrwYhHN2rq78jDSrHzC7sZfsdx327
YHIwEotu84bVuw3C//BOhX/MHLD+4gH3BMJ/WjWcG/sV/u8/Lll654T94Ryc
YcvbKzFx4LSPXNuTIPp5Ku2xU/YsrAT/hJ7F90Xzk9b+tkVFt+BpMx4WNgoE
zr1wIxw7lz8veHDjK4IWNLWZSlTQfpgDI9weYgYZE/2Xg/DbbPbgqmcMlCLY
gJfsp8Ti4851IfTfc7ZbOqvC5hlqt9o1cn8axIdpWrvvvyqFmmWI2Y2p5PNJ
f8ewHg6CkUY9X+kmCoFfH28WFM4CR+5o1SA8Qt6uDDuXjJkxvSsCbfvRHnFn
+irCNz49Vi/Y4s6EdGn3w2LyPP/rb/6w/wN/h78PeKdqfuZWZsI17p/mmTUJ
aFYassnVGIXIJiGLt/5OuBs+QG4GeD/qcH0RT8ShBeyJikFkDhfv/HSsFvdG
r4b1/BpEpPzRQL26Grht6Ba2UGVgka6FzI2kdFyJOPcYlwfxYP+iiK4MJzgv
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

      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVz3s0lAkYBnBkl43cShrtlBHZXKKitts+adK0pDJydFE5IpdUkpPsyanp
mDaVTJK0yGWsLk6GMGlpqaiTXGKIyqXG0GiM7/vmczlxMvvtH+95zu+f5zwv
J+QEP0xPR0fHl7n/0ztM2VY3HPDblL0NpOEk9LnWMf0sd0g7xRMTjFflZmaX
s7YgVuhQsiaChE9z16Mc1m6oFMvZTxgHhk4+TWOF4qN443R1JIle1z+5Kaw4
1HD2P352lESe5c6Ll1lJSGRnuDafICEwLHdIZqVDx9LYRhFPYs/efAlJFSJQ
dSzseDIJI60giLdIAlVBg3XrbRL2fqPKF1cq0LDxxvXe+yTiW9Yic+wJiNp3
0duqSVhVmPfp6tZizxKzquQ3JKRyblPrhuewOF4b7tBL4nlUzsK9I/Uwy1Z0
x46SGF+60fThsVfYXqx9kj5DQu9bsdlC+0Z8yBdpLcworNYGS/1LmlCUYFUZ
bkOhKcm95aVjK6Tu85yj3CgsFqm+3R99C6uuiwavPSmoJvv7Ot3aId1H8Gf8
KBR+rW40uSbD3YZmPdFhCibsu4RC0YGeubZxrXEUrkZWHsmze4ed3OiAwSQK
E5uKFRHnujBvn3NWYAaFuJX1FfNfdGM+X74rr4hCf0n9lTbOB0StMDnqVUVh
Oqoja9kfH6E3Jtma+ZqCk6fBzJHqHnTf4qU9e0+BV8AJL7Pqg9Y2YDNPRSGe
fcj2c1A/wlL3hIinKTiPBBh1+X6CaX8b96GRBnNNScP6qU+YPf9Z8ly2Bvq1
WZIl2Z/BXV6EXS4aHHWvfv+TjxwtLrr7hn/ToPj3kLx/J+TINmv3cNulwbjK
2mwoYwAPOjIFvsEaVPrzZqVvUcDwfOeKVyc1OLdNmFsxpEChsSHf6oIGnF7v
brFwEMKzpass0zRYtyYpnbVyCI9lLQknxBoELWr9pisbgoPxgGteOdPfmCKP
EXyB0umYt0uDBpn6B+P4dkp8cVZ3iDqZ/X2VBXr1SjiZD9gUDGrwQ6Jg99qT
w6jr2dFmOqmBzv2DErnFV9xILqX8DWjE/iVJsXj+FY/Zl06PLaDx1OmSoflx
FWxudtZsdqRh7h3rfMFkBK/UC06Fr6PR4/JWllAzglqX9hSlD43SO7BTHFRj
fIdgwaYgGgckq83ZM2rE+BeFekXTOC/MF/Q8GMV6eFreTaTxUMnOMtlOwMu4
3aM/hcalHGFw3w4CiutD+Q7XaITy1fYlfgSSrKbnxDD+uaam1DeQwAtbuyGd
VBqXU/e/vBpCwHPt6QxbEY2I1bep2QkENhyxngxLo2GbNG+bQRGBVXUhVSMZ
NGZ+PTun6x4BmVe8ncctGu/VA+1FxQRi31wRJTIWBZYf2FpGoOxdRYRJJg2t
I/+UsIaAq/pHlttt5t+21DuzZAQcrYsTTmXRqLo4eVjWSaAxt3awmnH6+kPL
xN0EIu07/PSzafj8vbxicx+Be27fl91k/M+Z5teCYQJLeTs/SHNoZLh4pPqN
EGhoOrxVy/ikPHs3hyAQxj/ziHeHxi/bo/vrxggUHsi/3M1YX7ejUDRJgDtQ
OWGTS+NT5fqo4CkC8ojGkEjGNVFiV7fvBC6M9rWUMb612GhcqyXAiaPXTTH+
DzEbfso=
        "]]},
      Annotation[#, "Charting`Private`Tag$75069#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8313030080302001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.43226704250504167`}, {0.8313030080302001, 
    1.23576892766452}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.854631493515307*^9, 3.854632112103036*^9, 
  3.8546321628748817`*^9, 3.854878196187932*^9, 3.855087520742284*^9, 
  3.855087587401321*^9},
 CellLabel->
  "Out[829]=",ExpressionUUID->"dc223941-e6a9-4491-8892-7b0e6fd6381d"]
}, Open  ]],

Cell["\<\
The linear equation above suggests that on average national wealth increases \
annually by 2.5% due to factors unrelated to trade and at a rate of 4.0% due \
to trade. \
\>", "Text",
 CellChangeTimes->{{3.854633263055584*^9, 3.8546333418646393`*^9}, {
  3.85463355837838*^9, 3.8546335719924393`*^9}, {3.854877860288938*^9, 
  3.854877872800853*^9}, {3.854878228828505*^9, 
  3.8548782302912197`*^9}},ExpressionUUID->"50390711-9e36-4755-ad3a-\
cbf7daf92609"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.201237", "*", 
  RowBox[{"Mean", "[", 
   RowBox[{"Flatten", "[", "tradePct", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854633230876588*^9, 3.85463325103128*^9}, 
   3.854633422091518*^9},
 CellLabel->
  "In[324]:=",ExpressionUUID->"aadb2942-5d36-4b94-a518-b464b8c292e0"],

Cell[BoxData["0.03982621342183029`"], "Output",
 CellChangeTimes->{{3.8546332375521812`*^9, 3.854633252067903*^9}, 
   3.854633422861475*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"dd3b0f85-4b95-45e7-bc1b-3d92e0e46061"]
}, Open  ]],

Cell["The average annual growth in wealth is 6.5% (\[TildeTilde]2.5+4.0%).", \
"Text",
 CellChangeTimes->{{3.854878278673761*^9, 3.854878312274846*^9}, 
   3.8548784816681957`*^9},ExpressionUUID->"115d170a-7e90-4809-8c63-\
e5f955fe3e58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"Flatten", "[", "growthPct", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.854878247801613*^9, 3.8548782660295143`*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"3b4dd578-19b0-4116-8b23-240295ef9feb"],

Cell[BoxData["1.0651464416710232`"], "Output",
 CellChangeTimes->{{3.854878251505137*^9, 3.854878266394884*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"76ee6777-3b2b-4f74-966b-ef26d6802e00"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Estimating \[Beta] (scalar)", "Subsubsection",
 CellChangeTimes->{{3.85315819786243*^9, 3.853158203157241*^9}, {
   3.853963025468699*^9, 3.85396302803052*^9}, {3.854300465131894*^9, 
   3.8543004702996063`*^9}, {3.8543867740089197`*^9, 
   3.8543868037039022`*^9}, {3.854877893951461*^9, 3.854877900006179*^9}, 
   3.854878675403788*^9, {3.854879548557534*^9, 
   3.854879553997961*^9}},ExpressionUUID->"0b000926-db98-4098-9272-\
b353a73dbf49"],

Cell[TextData[{
 "Finding parameters that minimize the average error (Euclidean distance) \
between the actual and predicted wealth vectors, for each year from \
1996-2020. Assuming \[Beta] is a scalar and \[Lambda] = 1.0253. This is a \
sliding simulation. With this method, ",
 StyleBox["\[Beta] = 1.392",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.8531550663037367`*^9, 3.853155090718952*^9}, {
   3.853155204114417*^9, 3.853155225479433*^9}, {3.854387146447974*^9, 
   3.85438722890532*^9}, {3.854879404834283*^9, 3.854879415804062*^9}, {
   3.854882587439782*^9, 3.85488258817904*^9}, {3.8548826559598417`*^9, 
   3.8548826613493843`*^9}, 3.8549073163924627`*^9, {3.862607826675826*^9, 
   3.862607831005512*^9}, {3.862607874600568*^9, 3.8626078970868998`*^9}, {
   3.86260794737687*^9, 3.862607951283098*^9}, {3.862608055102536*^9, 
   3.8626080554605837`*^9}, {3.862608102842896*^9, 3.862608103212878*^9}, 
   3.862608176162014*^9, 3.862609960562956*^9, {3.862740666349427*^9, 
   3.862740709857771*^9}, {3.872110205656543*^9, 
   3.8721102061494007`*^9}},ExpressionUUID->"53bbff46-2a33-42dc-b37b-\
81428a558e19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", "[", "beta_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Mu]", "=", "30"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", "1.0253"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", " ", "=", "beta"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Mean", "[", 
      RowBox[{"MapThread", "[", 
       RowBox[{"EuclideanDistance", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"UpdateS", ",", "WorldPowerStructureSeries"}], "]"}], ",", 
          
          RowBox[{"Rest", "[", "WealthSeries", "]"}]}], "}"}]}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.853156605824419*^9, 3.8531566065183268`*^9}, {
   3.853156770591604*^9, 3.85315681890265*^9}, {3.853156862163261*^9, 
   3.853156864359209*^9}, {3.854298287125718*^9, 3.854298305163485*^9}, {
   3.854386817639271*^9, 3.85438683896185*^9}, {3.854387285168932*^9, 
   3.854387287960475*^9}, {3.854878565691552*^9, 3.854878581330099*^9}, {
   3.8548797257440557`*^9, 3.854879732814324*^9}, {3.854881766937296*^9, 
   3.854881768131386*^9}, {3.854881871450061*^9, 3.854881878452681*^9}, {
   3.854881956572112*^9, 3.854881958330318*^9}, 3.8548820342336693`*^9, {
   3.854882571692431*^9, 3.854882573084167*^9}, 3.862427683916832*^9, 
   3.87211015442161*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"0effe31e-b628-480d-9eb0-7a62f97826da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"error", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1.3", ",", "1.5", ",", ".001"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "results", "]"}]}], "Input",
 CellChangeTimes->{{3.854878799016447*^9, 3.854878804620235*^9}, {
  3.854881776012882*^9, 3.854881777159449*^9}, {3.854882690179147*^9, 
  3.854882703054295*^9}, {3.8624357708637123`*^9, 3.86243577884914*^9}, {
  3.862608085677278*^9, 3.862608093173595*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[149]:=",ExpressionUUID->"8b653706-1647-444d-a582-efdf1b381177"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
hcLnOG8F679uKBI+fwcBTgUdGcWy9D9eqE5Q
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.2958333333333336`, 6.7174295989723955`*^12},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.2958333333333336`, 1.5}, {6.7174295989723955`*^12, 
   6.766246651347608*^12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.854878804980482*^9, 3.854878832755848*^9}, 
   3.8548788722208776`*^9, 3.854879004807616*^9, 3.8548818231937933`*^9, 
   3.854882627089625*^9, 3.8548827412820263`*^9, 3.85508377352137*^9, 
   3.8550842795165043`*^9, 3.8550863787677298`*^9, 3.8556109844452972`*^9, 
   3.862435369811503*^9, {3.862608070782982*^9, 3.8626080962271757`*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"65e07f8c-34de-48ec-9e54-cc6edc7cbd6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{"Map", "[", 
     RowBox[{"Reverse", ",", "results"}], "]"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[151]:=",ExpressionUUID->"e4f89efa-f724-4102-bcab-bd4070a7339a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6.719998917518459`*^12", ",", "1.3920000000000001`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6.720002168698465`*^12", ",", "1.393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.720003550377646`*^12", ",", "1.391`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.72001330619884`*^12", ",", "1.3940000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.720016064971277`*^12", ",", "1.3900000000000001`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6.720032332277129`*^12", ",", "1.395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.720036458971071`*^12", ",", "1.389`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.720059249167185`*^12", ",", "1.3960000000000001`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6.720064730025233`*^12", ",", "1.3880000000000001`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6.72009405907915`*^12", ",", "1.397`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.86260807257484*^9, 3.8626080963449507`*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"40cb8d04-7c0a-4396-948b-82ea6003735b"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Law of Motion", "Subsection",
 CellChangeTimes->{{3.843494346276679*^9, 
  3.8434943479937162`*^9}},ExpressionUUID->"b40ba676-ecb9-40c5-9f74-\
ac23a246cd07"],

Cell[CellGroupData[{

Cell["UpdateS", "Subsubsection",
 CellChangeTimes->{{3.8434943513538857`*^9, 3.84349435336238*^9}, {
   3.8466262637575693`*^9, 3.846626273912547*^9}, 
   3.846679792056094*^9},ExpressionUUID->"2e3df3f0-a768-4a81-963e-\
394bb34e0e8c"],

Cell["\<\
Apply the law of motion to a size vector and components of a tactic matrix. \
These functions can accept \[Beta] and \[Lambda] as either scalars or \
vectors. Output: size vector.\
\>", "Text",
 CellChangeTimes->{{3.8442513394179287`*^9, 3.844251353416744*^9}, {
  3.846679624438307*^9, 3.846679650875029*^9}, {3.8508438204561033`*^9, 
  3.850843824182407*^9}, {3.871915128589532*^9, 
  3.8719151300752783`*^9}},ExpressionUUID->"24bc8c8b-617d-4e70-9d28-\
15b1eaa12698"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdateS", "[", 
   RowBox[{"s_List", ",", 
    RowBox[{"Tpos_List", "?", "MatrixQ"}], ",", 
    RowBox[{"Tneg_List", "?", "MatrixQ"}], ",", 
    RowBox[{"Tzed_List", "?", "MatrixQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Ramp", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Beta]", " ", "Tpos"}], "-", 
      RowBox[{"\[Mu]", " ", "Tneg"}], "+", 
      RowBox[{"\[Lambda]", " ", "Tzed"}]}], ")"}], ".", "s"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8434943593151627`*^9, 3.84349437439544*^9}, {
   3.8435120430616426`*^9, 3.843512114008322*^9}, {3.8435121473472424`*^9, 
   3.843512163006193*^9}, {3.84351222530765*^9, 3.843512238402034*^9}, {
   3.846679521354888*^9, 3.8466795314399357`*^9}, 3.862349822596446*^9, {
   3.872016950190502*^9, 3.8720169712380733`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0addd814-a3e7-4065-b1aa-28e3ae6e47c9"],

Cell["\<\
Apply the law of motion to a size vector and the tactic matrix components \
from an extended power structure. Output: size vector.\
\>", "Text",
 CellChangeTimes->{{3.872017391078377*^9, 3.872017410272423*^9}, {
  3.8720633018249187`*^9, 
  3.872063311644034*^9}},ExpressionUUID->"734a9d59-0a90-4bb4-b177-\
236269dad795"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdateS", "[", 
   RowBox[{"s_List", ",", 
    RowBox[{"ps_Association", "?", "ExtendedPowerStructureQ"}]}], "]"}], ":=", 
  RowBox[{"UpdateS", "[", 
   RowBox[{"s", ",", 
    RowBox[{"ps", "[", "\"\<Tpos\>\"", "]"}], ",", 
    RowBox[{"ps", "[", "\"\<Tneg\>\"", "]"}], ",", 
    RowBox[{"ps", "[", "\"\<Tzed\>\"", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8720168774813213`*^9, 3.8720169249488697`*^9}, {
  3.872063317313056*^9, 3.872063324530508*^9}, {3.8720649087369213`*^9, 
  3.872064909679165*^9}, {3.872064986516099*^9, 3.872064987868108*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"b07ce124-9243-40b7-b291-f3f98523ada3"],

Cell["\<\
Apply the law of motion to an extended power structure. Output: size vector.\
\>", "Text",
 CellChangeTimes->{{3.872017391078377*^9, 3.872017410272423*^9}, {
   3.8720633018249187`*^9, 3.872063311644034*^9}, 
   3.8721100705114326`*^9},ExpressionUUID->"f8bacd7b-d1c4-485f-a351-\
7bdef010434e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdateS", "[", 
   RowBox[{"ps_Association", "?", "ExtendedPowerStructureQ"}], "]"}], ":=", 
  RowBox[{"UpdateS", "[", 
   RowBox[{
    RowBox[{"ps", "[", "\"\<s\>\"", "]"}], ",", 
    RowBox[{"ps", "[", "\"\<Tpos\>\"", "]"}], ",", 
    RowBox[{"ps", "[", "\"\<Tneg\>\"", "]"}], ",", 
    RowBox[{"ps", "[", "\"\<Tzed\>\"", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8720168774813213`*^9, 3.8720169249488697`*^9}, {
  3.872063317313056*^9, 3.872063324530508*^9}, {3.8720649087369213`*^9, 
  3.872064909679165*^9}, {3.872064986516099*^9, 3.872064987868108*^9}, {
  3.872110074333768*^9, 3.872110082859177*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"433b2ffe-efd8-4c33-8913-ecaf8eeba1b3"],

Cell["\<\
Apply the law of motion to a size vector and the tactic matrix components \
from an extended power structure, repeatedly to a given depth. Output: size \
vector.\
\>", "Text",
 CellChangeTimes->{{3.872017391078377*^9, 3.872017410272423*^9}, {
  3.8720633018249187`*^9, 3.872063311644034*^9}, {3.872103009313137*^9, 
  3.8721030130996447`*^9}},ExpressionUUID->"ccf587b3-97e8-4207-b476-\
f524ce2f6473"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdateS", "[", 
   RowBox[{"s_List", ",", 
    RowBox[{"ps_Association", "?", "ExtendedPowerStructureQ"}], ",", 
    "depth_Integer"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateS", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "s", ",", 
    RowBox[{"Table", "[", 
     RowBox[{"ps", ",", "depth"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.791056014192029*^9, 3.7910560162621183`*^9}, 
   3.791056046959507*^9, {3.791056186741088*^9, 3.7910562487692747`*^9}, {
   3.79105638399893*^9, 3.791056474324587*^9}, {3.791057002194611*^9, 
   3.791057005239126*^9}, {3.791060426456596*^9, 3.791060434154483*^9}, {
   3.7915411013740807`*^9, 3.791541139380555*^9}, {3.791543706053969*^9, 
   3.791543706606966*^9}, {3.791547314441863*^9, 3.7915473181350822`*^9}, {
   3.7915474430980387`*^9, 3.791547444831214*^9}, {3.79214869465679*^9, 
   3.792148732060438*^9}, {3.792148770806653*^9, 3.7921487768084297`*^9}, {
   3.7944884680552607`*^9, 3.7944884904908733`*^9}, {3.801122167375999*^9, 
   3.801122171905632*^9}, 3.8023738383704557`*^9, {3.802374042205924*^9, 
   3.8023740460732603`*^9}, {3.808436832976232*^9, 3.808436833293194*^9}, {
   3.87207140553573*^9, 3.872071422414741*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1f7e4bab-fe6a-4a71-acb0-3564fb4f8f58"]
}, Closed]],

Cell[CellGroupData[{

Cell["SimulateLawOfMotion", "Subsubsection",
 CellChangeTimes->{{3.8442521703873367`*^9, 3.8442521716372023`*^9}, 
   3.8721037899765463`*^9},ExpressionUUID->"449ae723-b253-4c8e-b89f-\
08a26f40c2ca"],

Cell["\<\
Simulate the law of motion over several steps. Output: list of size vectors.\
\>", "Text",
 CellChangeTimes->{{3.8442521731709843`*^9, 3.844252179285508*^9}, {
  3.872015949335669*^9, 
  3.872015953766103*^9}},ExpressionUUID->"f7d56b14-4b63-4068-bf26-\
49f4bea8f5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateLawOfMotionS", "[", 
   RowBox[{"s_List", ",", 
    RowBox[{"ps_Association", "?", "ExtendedPowerStructureQ"}], ",", 
    "depth_Integer"}], "]"}], ":=", 
  RowBox[{"FoldList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateS", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "s", ",", 
    RowBox[{"Table", "[", 
     RowBox[{"ps", ",", "depth"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.791056014192029*^9, 3.7910560162621183`*^9}, 
   3.791056046959507*^9, {3.791056186741088*^9, 3.7910562487692747`*^9}, {
   3.79105638399893*^9, 3.791056474324587*^9}, {3.791057002194611*^9, 
   3.791057005239126*^9}, {3.791060426456596*^9, 3.791060434154483*^9}, {
   3.7915411013740807`*^9, 3.791541139380555*^9}, {3.791543706053969*^9, 
   3.791543706606966*^9}, {3.791547314441863*^9, 3.7915473181350822`*^9}, {
   3.7915474430980387`*^9, 3.791547444831214*^9}, {3.79214869465679*^9, 
   3.792148732060438*^9}, {3.792148770806653*^9, 3.7921487768084297`*^9}, {
   3.7944884680552607`*^9, 3.7944884904908733`*^9}, {3.801122167375999*^9, 
   3.801122171905632*^9}, 3.8023738383704557`*^9, {3.802374042205924*^9, 
   3.8023740460732603`*^9}, {3.808436832976232*^9, 3.808436833293194*^9}, {
   3.87207140553573*^9, 3.872071422414741*^9}, {3.872103756333008*^9, 
   3.872103765042584*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"500bf8e7-af1e-4401-8ba2-6746b826ea57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateLawOfMotionS", "[", 
   RowBox[{
    RowBox[{"ps_Association", "?", "ExtendedPowerStructureQ"}], ",", 
    "depth_Integer"}], "]"}], ":=", 
  RowBox[{"SimulateLawOfMotionS", "[", 
   RowBox[{
    RowBox[{"ps", "[", "\"\<s\>\"", "]"}], ",", "ps", ",", "depth"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.791056014192029*^9, 3.7910560162621183`*^9}, 
   3.791056046959507*^9, {3.791056186741088*^9, 3.7910562487692747`*^9}, {
   3.79105638399893*^9, 3.791056474324587*^9}, {3.791057002194611*^9, 
   3.791057005239126*^9}, {3.791060426456596*^9, 3.791060434154483*^9}, {
   3.7915411013740807`*^9, 3.791541139380555*^9}, {3.791543706053969*^9, 
   3.791543706606966*^9}, {3.791547314441863*^9, 3.7915473181350822`*^9}, {
   3.7915474430980387`*^9, 3.791547444831214*^9}, {3.79214869465679*^9, 
   3.792148732060438*^9}, {3.792148770806653*^9, 3.7921487768084297`*^9}, {
   3.7944884680552607`*^9, 3.7944884904908733`*^9}, {3.801122167375999*^9, 
   3.801122171905632*^9}, 3.8023738383704557`*^9, {3.802374042205924*^9, 
   3.8023740460732603`*^9}, {3.808436832976232*^9, 3.808436833293194*^9}, {
   3.87207140553573*^9, 3.872071422414741*^9}, {3.872103756333008*^9, 
   3.872103765042584*^9}, {3.872106901031581*^9, 3.872106921409647*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"c4702c2e-0a42-4142-a532-cb8ce2b2907a"],

Cell["\<\
Given a list of (extended) power structures, simulate the law of motion over \
a given time period. The initial size vector comes from the first power \
structure in the list, and the tactic matrix varies every year based on the \
other power structures. Output: list of size vectors.\
\>", "Text",
 CellChangeTimes->{{3.862314183888165*^9, 3.862314228973014*^9}, {
   3.8720159599719152`*^9, 3.8720159603373413`*^9}, 3.872017082164257*^9, 
   3.872017142753294*^9, {3.872063696539483*^9, 3.8720637654794493`*^9}, {
   3.8720638339997177`*^9, 
   3.87206383952356*^9}},ExpressionUUID->"48bb0454-77e0-456f-88d3-\
9c7e3d6c5e8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimulateLawOfMotionDynamicT", "[", "pss_", "]"}], ":=", 
   RowBox[{"FoldList", "[", 
    RowBox[{"UpdateS", ",", 
     RowBox[{
      RowBox[{"First", "[", "pss", "]"}], "[", "\"\<s\>\"", "]"}], ",", 
     "pss"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862312093538268*^9, 3.8623120987030983`*^9}, 
   3.862312151290943*^9, {3.8623126205541487`*^9, 3.862312624377252*^9}, {
   3.862312741578364*^9, 3.862312752428936*^9}, {3.862314047580708*^9, 
   3.862314076812333*^9}, {3.8623141586380043`*^9, 3.862314163088766*^9}, {
   3.872017059133177*^9, 3.8720170920624247`*^9}, {3.8720171536256437`*^9, 
   3.872017156392625*^9}, {3.87201753235858*^9, 3.8720175396508007`*^9}, {
   3.872017645845553*^9, 3.872017654284541*^9}, {3.8720177687709713`*^9, 
   3.872017770200548*^9}, {3.87206343893406*^9, 3.8720634390720253`*^9}, {
   3.872063632896227*^9, 3.872063638852215*^9}, 3.8720637984017076`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"747cc45b-599f-41fa-97ed-69dfde1cf856"],

Cell["\<\
Extract simulation data for selected countries (by country ID). Output: list \
of size vectors.\
\>", "Text",
 CellChangeTimes->{{3.844336761572901*^9, 3.844336771817149*^9}, {
  3.871915142736006*^9, 
  3.871915143117042*^9}},ExpressionUUID->"6a3946ec-5d16-486d-ba84-\
5b235dbf01a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulationSubset", "[", 
   RowBox[{"sim_", ",", "countryIDs_List"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "countryIDs", "]"}], "]"}], "&"}], ",", "sim"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844336774402691*^9, 3.8443367976450453`*^9}, {
  3.850843899870401*^9, 3.850843900293028*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"172b05be-9638-4ce6-b916-343548a5a77b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot Generation, etc.", "Subsection",
 CellChangeTimes->{{3.8721102821640387`*^9, 3.872110320925186*^9}, {
  3.872110541614379*^9, 
  3.872110542787902*^9}},ExpressionUUID->"094d05ae-3dfc-4a99-8bb4-\
6e2cc7250685"],

Cell[CellGroupData[{

Cell["SizeSeriesSubsetPlot", "Subsubsection",
 CellChangeTimes->{{3.844336882568685*^9, 3.844336886797028*^9}, {
  3.844343049675346*^9, 
  3.844343057457161*^9}},ExpressionUUID->"92f6bc7d-8d7a-45b3-bdd9-\
ed526a754aa4"],

Cell["\<\
Given a time series of wealth vectors from all countries, extract specified \
countries and plot them.\
\>", "Text",
 CellChangeTimes->{{3.844331042518792*^9, 
  3.844331070058323*^9}},ExpressionUUID->"46b5f208-d020-497c-bf4a-\
ffccb4f3908c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SizeSeriesSubsetPlot", "[", 
   RowBox[{"sim_", ",", "countryIDs_", ",", "startYear_", ",", "title_"}], 
   "]"}], ":=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"startYear", ",", 
            RowBox[{"startYear", "+", 
             RowBox[{"Length", "[", "sim", "]"}], "-", "1"}]}], "]"}], ",", 
          "#"}], "}"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"SimulationSubset", "[", 
        RowBox[{"sim", ",", "countryIDs"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Map", "[", 
      RowBox[{"CountryName", ",", "countryIDs"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "title"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844336898502017*^9, 3.844336900120195*^9}, {
   3.844336994563796*^9, 3.8443370086647243`*^9}, {3.844337192844688*^9, 
   3.844337209551021*^9}, {3.8443426717514963`*^9, 3.8443426739581947`*^9}, {
   3.844342737053437*^9, 3.844342756756084*^9}, {3.84434280611271*^9, 
   3.844342806207539*^9}, {3.844342848375155*^9, 3.844342850726111*^9}, {
   3.844342904059451*^9, 3.844342914576438*^9}, {3.8443429712410183`*^9, 
   3.844342998186673*^9}, 3.8443430682314043`*^9, {3.844373023037672*^9, 
   3.8443730251463623`*^9}, {3.8443730583915043`*^9, 3.844373059176111*^9}, {
   3.844373091906719*^9, 3.844373093000593*^9}, {3.84747630788706*^9, 
   3.847476321303089*^9}, {3.8474763956113653`*^9, 3.847476515802841*^9}, {
   3.847476548814739*^9, 3.8474765499026737`*^9}, {3.851430972893722*^9, 
   3.8514309734058533`*^9}, {3.8514311053918133`*^9, 3.8514311086194353`*^9}, 
   3.8514311473882*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"94126216-435e-49b3-92e2-1aed31249a2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SizeSeriesSubsetPlot", "[", 
  RowBox[{"SmoothedWealthSeries", ",", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"Range", "[", "193", "]"}], ",", "10"}], "]"}], ",", "1995", 
   ",", "\"\<Rando\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.862000199293062*^9, 3.862000220730595*^9}, {
  3.862000313374366*^9, 3.862000314396039*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"5027a1af-0fa6-4b9a-834b-d9877a8ee090"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGBqUZHpSnMB8g/kOq1ZlnXn2Dco3Acvf
2/MxFcK3mO8QGipqvr4oHcK3AfGnPpohlgHhO4DlAxW6MyF8F5D+Ax99T2dD
+B4g81+xM7zOg/B9wHyv11cKIPwAsHm9HklFEH4I2D1LqjlKIPwIML+x62MZ
hB8DVm+ZE1cJ4SeA+bIVm6oh/BSw/Y+Dv9ZA+BlgecYWtjoIPwds/2zTpHoI
vwAkfzW91rgBwi8B6V8gUGHXCOFXgPgOT+cYNEH4NSC+QgWTRzOE3wD2/5/z
16D8FpD8g01HtkP5HWDzXXpkoPweEL9Ub4U/1LwJIPUJ3lbrGp0AwAZ30w==

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2AZHSsm4ETmG8w32HVqlXxy+4bQvgmYHnB
zazGEL4FWP7thA1Qvs18h9DQ0P+K0VC+AxrfBax+QtEhKN8DbJ6XnoQphO8D
ljeXeW4G4QeA5R3+hFhC+CFg/oa+D9YQfgRY/bqex3YQfgzYvif/ah0g/ASw
+uzdS6H8FDT5DDB/3cydUH4OWH3swfOOEH4BmP/q520nCL8EzBdKPeUM4VeA
9besNneB8GvAfD+3Yii/Aey+6P2HoPwWML9Za6MrhN8BVp+4S8Edwu8Bmy9+
fyGUPwHMl7vD4+4EABb1buw=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2ApGSSabETmG8A4jtcWPoeyjeZ77BqldZ9
24oSCN9ivkNo6FX9qbehfBuQ/Csh5tpSCN8BxM/qaI8pg/BdwPr3+CSWQ/ge
YPtu1RRVQPg+IPlVMrf+V0L4ASDzQyOslGog/BCw+YuMztZB+BEg+amL7Bc3
QPgxIL5pecrURgg/AWy+egx3E4SfAuIfSJSrhvIzwPYVbGNuhvBzQPxTJyJX
Q/kFYPU+6lYtEH4JiL/gWeceKL8CrD/kUHgrhF8D4nsZPNkC5TeA9Zsb/ITy
W0Du+9pgLdEG4XeA+KIPbmtB+T1g97tVroCqnwDSn6DhOb3FCQCa9HeJ
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2A5KcV3MpOYL4BmB9QuQ/KNwHzE67LqkD4
FmC+kWInlG8z3yE0NHT3oQNQvgNY/s/uI1C+C1hecnKxKoTvMd9h1apVU6yu
qkH4PmD1r25d1IDwA8B8q43rtCD8ELD+4tj/ehB+BFg+JzfLEMKPAfPdJU4Z
QfgJYPOf6O+B8lPA+nVvvIfyM8Dyx663GUP4OWC+iNctKL8AbF79Q3ETCL8E
zLeU+wKVrwDz++3LofI1YP2qUf+g/AawfX37PphC+C0w/5pB+B1gvocOtwWE
3wM2b4n4Oih/Apift+mlhRMAsrdp/A==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2AZOn6kAgnMN9gvkNoaOicmXuiIHwTsPyN
n/diIHwLkPzVqO+8cRC+DUi+YW7I7HgI3wHEdziitzYBwneZ77Bq1auisMOJ
EL4H2PzvRdrJEL4PSD7LYmN9CoQfAJIXFXN8nwrhh4D4U/2S56dD+BEg9Vo8
ynaZEH4M2D0S0uzZEH4CWH21R2oOhJ8CNq+VaU8uhJ8B1p9Y/CkPws8Bq19p
w1cA4ReAzUtoOAHll4D5kc2xhRB+Bdi9O4s8iyD8GhB/VcE25mIIvwHs/wtL
30P5LWD1c+vmlkD4HeDwanhjVwrh94DDY42YGpQ/ARze3BnxJU4Ae/B0EA==

      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGBr4V9wLdALzDeY7rFq1ivvl0yAI3wQs
/2vD3GAI3wLEZ3A8qxwC4duA+SzZX6B8B5B+LX2R0DAI32W+Q2ho6P6uy+EQ
vgeIf/W849QICN8HbP4rY5NICD8AbN402RtQfghYfv51vWgIPwJsvsSshhgI
PwZsXvCvRXEQfgJIPsvKRDgBwk8B6T9QJroHys8AqRd9Ga2ZCOHngO3r0dRM
gvALwP7P3DkjGcIvAZs3t25uCoRfAeK/EmKuTYXwa8DuWxGumwbhN4D1258W
S4fwW0DyDtyt3VB+B9i9TpydUH4P2PzGro9Q/RPA5lW+v5zqBAAKpHGi
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2ApN91BT0nMN8AzD+glWIA4ZuA+ZNKzkP5
FvMdQkND183cCeXbgOWzdy+F8h3mO6xatepj+Vko3wWsPlLrN5TvAeYn3tQy
hPB9wPp33d8L5QeA9T/R32ME4YeA+X/f8ZtA+BFg/ovv50wh/BgwX+GgjDmE
nwDmJ1jOsoDwU8D25RomW0H4GWD+5xwWGwg/B8x/WqRnC+EXgPnrebOg/BKw
+9oW5NlD+BVgeafzBo4Qfg3YvoJtzM4QfgNYveNZZRcIvwXMt7qwA8rvAKsP
ORTuCuH3gM27XVcP5U8Aq5+xINvVCQC4RXCH
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2AZMPxtsmOYL4BmF9Sx/MewjcB82e8Wcbg
BOZbgPkFYsVcEL7NfIfQ0FBH2RwBCN8BLD+nvUMIwneZ77Bq1aoo3n/CEL4H
mB/3RUoQwvcB63+4ShpqXgBY/5vYVBYIPwSs/lmJNVQ+Aizf4cQjCuHHwOxX
gPATwHxWv+/qEH4KWL0uo4gyhJ8Blvdf80cSws8By4sY3uWD8AvAfA6Rv7IQ
fglY/d1HHFDzKsD8am1LTQi/Bqz+wXEJqHwD2L0Oc54qQvgtYPkX4XZQ8zrA
8u+Us6Ug/B6weSsfnpWA8CfAzBN3AgA4FmL1
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGByuL4pKdgLzDUD8BhGlbakQvsl8h1Wr
Vp1hVs6A8C1A/FeG73KyIXyb+Q6hoaJ1rIF5EL4DWP3k5VIFEL4LyLwDtULq
UL4HSP3URfaLoXwfMH+K69lCCD8AzK8IVCyB8EPA9rFwLi+D8CPA7gv7t6cC
wo8Bqb/6fU1zJYSfAJJnONpqWAXhp4D527ujqyH8DDB/5cTWGgg/B+z/hKv2
tRB+Adj9r98J1UH4JWD3rLTha4DwK0DqH5zbkdwI4deA5EvVVz9pgvAbwO4x
m+TWAuG3gNQnKProtEL4HSC+QqigYRuE3wPzH5Q/AayeJ/R1mxMA5r1xhw==

      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x2A5I5qEwMnMN9gvsOqVas0+sMMIXwTMH9e
zgwjCN8CrP7Of1YTCN8GLL/SUMwUwneY7xAaGlqQttsMwncBq1e3ZbSA8D3A
/C9vu6wgfB+wfjNvCRsIPwAsP2WWix2EHwLmF+0QcIDwI8DmL5/j5wjhx4Dl
d09scoLwE8B8j1N9zhB+Ctj8bx+XuED4GWB+s9ZGVwg/B8x/+CvZDcIvAOvf
yfceyi8By8+dfdIdwq8Ay59pmuMJ4deA+c8+b/GG8BvA7qtcsdQXwm8B8/8/
dvOH8DtA6huC2SsDIPwesHyFyVcofwJY3oeLL9AJAKb1beA=
      
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.43*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.43*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.43*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.43*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.43*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.43*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.43*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.43*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.43*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.43*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.43*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.43*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.43*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.43*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.43*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.43*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.43*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.43*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{44., 6.50000000000001}, {2022.5733506944446`, 2.43*^12}], 
            Offset[{44., -6.49999999999999}, {2022.5733506944446`, 2.43*^12}],
             Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             2.43*^12}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             2.43*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Sudan\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{27., 5.995204332975845*^-15}, \
{2022.5733506944446, 2.43*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.98*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.98*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.98*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.98*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.98*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.0440061613409271`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.98*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.98*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.98*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.98*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.98*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.0440061613409271`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0440061613409271`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{51., 7.5000000000000115`}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{51., -7.4999999999999885`}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., -7.499999999999997}, {2022.5733506944446`, 
             1.0440061613409271`*^12}], 
            Offset[{10., 7.500000000000003}, {2022.5733506944446`, 
             1.0440061613409271`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Georgia\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30.5, 6.772360450213455*^-15}, \
{2022.5733506944446, 1.0440061613409271*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.83*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.83*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.83*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.83*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.83*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.83*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.83*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.83*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.83*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.83*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.83*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.83*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.83*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.83*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{70., 6.500000000000016}, {2022.5733506944446`, 2.83*^12}], 
            Offset[{70., -6.499999999999984}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., -6.499999999999998}, {2022.5733506944446`, 
             2.83*^12}], 
            Offset[{10., 6.500000000000002}, {2022.5733506944446`, 
             2.83*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"South Africa\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{40., 8.881784197001252*^-15}, \
{2022.5733506944446, 2.83*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.07*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.07*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.07*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.07*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.07*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 3.8107167438567596`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.07*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.07*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.07*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.07*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.07*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 3.8107167438567596`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.8107167438567596`*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{62., 6.500000000000013}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{62., -6.499999999999987}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             3.8107167438567596`*^11}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             3.8107167438567596`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Mauritania\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{36., 7.993605777301127*^-15}, \
{2022.5733506944446, 3.8107167438567596*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.4*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.4*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.4*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.4*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.4*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.9667605778629634`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.4*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.4*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.4*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.4*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.4*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.9667605778629634`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.9667605778629634`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{54., 6.500000000000012}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{54., -6.499999999999988}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., -6.499999999999998}, {2022.5733506944446`, 
             1.9667605778629634`*^12}], 
            Offset[{10., 6.500000000000002}, {2022.5733506944446`, 
             1.9667605778629634`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Morocco\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{32., 7.105427357601002*^-15}, \
{2022.5733506944446, 1.9667605778629634*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 7.5*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 7.5*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 7.5*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 7.5*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 7.5*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.6659993260614124`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 7.5*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 7.5*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 7.5*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 7.5*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 7.5*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.6659993260614124`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.6659993260614124`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{43., -6.49999999999999}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             1.6659993260614124`*^12}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             1.6659993260614124`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Oman\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2022.5733506944446, 1.6659993260614124*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.84*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.84*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.84*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.84*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.84*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 7.0230358730461*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.84*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.84*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.84*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.84*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.84*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 7.0230358730461*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             7.0230358730461*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{102., 7.500000000000023}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{102., -7.499999999999977}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., -7.499999999999998}, {2022.5733506944446`, 
             7.0230358730461*^11}], 
            Offset[{10., 7.500000000000002}, {2022.5733506944446`, 
             7.0230358730461*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Papua New Guinea\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{56., 1.2434497875801753*^-14}, \
{2022.5733506944446, 7.0230358730461*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.48*^10}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.48*^10}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.48*^10}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.48*^10}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.48*^10}], 
            Offset[{0, 0}, {2022.5733506944446`, 8.031042338722925*^10}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.48*^10}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.48*^10}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.48*^10}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.48*^10}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.48*^10}], 
            Offset[{0, 0}, {2022.5733506944446`, 8.031042338722925*^10}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.031042338722925*^10}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{46., 6.50000000000001}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{46., -6.49999999999999}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             8.031042338722925*^10}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             8.031042338722925*^10}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Liberia\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{28., 6.217248937900877*^-15}, \
{2022.5733506944446, 8.031042338722925*^10}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 3.15*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 3.15*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 3.15*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 3.15*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 3.15*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 3.15*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.15*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 3.15*^12}], 
            Offset[{0, 0}, {2020.5316840277778`, 3.15*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 3.15*^12}], 
            Offset[{0., 0.}, {2020.7868923611113`, 3.15*^12}], 
            Offset[{0., 0.}, {2021.0421006944446`, 3.15*^12}], 
            Offset[{0, 0}, {2022.5733506944446`, 3.15*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             3.15*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{52., 6.5000000000000115`}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{52., -6.4999999999999885`}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             3.15*^12}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             3.15*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Sweden\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{31., 6.8833827526759706*^-15}, \
{2022.5733506944446, 3.15*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.93*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.93*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.93*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.93*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.93*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.3652380742598613`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.93*^11}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.93*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.93*^11}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.93*^11}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.93*^11}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.3652380742598613`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.3652380742598613`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{34., 6.500000000000007}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{34., -6.499999999999993}, {2022.5733506944446`, 
             1.3652380742598613`*^12}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             2022.5733506944446`, 1.3652380742598613`*^12}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             2022.5733506944446`, 1.3652380742598613`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Mali\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{22., 4.884981308350689*^-15}, \
{2022.5733506944446, 1.3652380742598613*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1994.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 134.8}, {All, All}},
  ImageSize->{528.9997253417969, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Rando\"", TraditionalForm],
  PlotRange->{{1994.4791666666665`, 2020.}, {0, 3.15*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.862000222206547*^9, 3.86200024024129*^9}, {
  3.862000289442778*^9, 3.8620003758863792`*^9}},
 CellLabel->
  "Out[278]=",ExpressionUUID->"60e287a8-74be-489c-9b60-6bc123418b48"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsubsection",
 CellChangeTimes->{{3.851436188769464*^9, 3.8514361971124573`*^9}, {
  3.86231606512255*^9, 
  3.862316066160067*^9}},ExpressionUUID->"615df1f8-9986-4760-90df-\
500b943ce2e5"],

Cell["Base function that generates the comparison plot.", "Text",
 CellChangeTimes->{{3.862315517616219*^9, 
  3.862315528674924*^9}},ExpressionUUID->"b84b683f-e31a-4fde-9c86-\
02986a586995"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComparisonPlot", "[", 
   RowBox[{
   "sim_", ",", "actual_", ",", "countryName_", ",", "startYear_", ",", 
    "endYear_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"startYear", ",", 
              RowBox[{"startYear", "+", 
               RowBox[{"Length", "[", "sim", "]"}], "-", "1"}]}], "]"}], ",", 
            "#"}], "}"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"sim", ",", "actual"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Model\>\"", ",", "\"\<Actual\>\""}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"countryName", "<>", "\"\< (\>\"", "<>", 
        RowBox[{"ToString", "[", "startYear", "]"}], "<>", "\"\<-\>\"", "<>", 
        
        RowBox[{"ToString", "[", "endYear", "]"}], "<>", "\"\<)\>\""}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"Range", "[", 
        RowBox[{"startYear", ",", "endYear"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.851436243297859*^9, 3.851436328338436*^9}, {
   3.851436418423759*^9, 3.851436473048306*^9}, {3.851436673070277*^9, 
   3.851436710827903*^9}, {3.851436757764399*^9, 3.851436767773569*^9}, {
   3.851436838479533*^9, 3.851436850220153*^9}, 3.8514369396715403`*^9, {
   3.851438294882948*^9, 3.851438340788409*^9}, {3.851438706971613*^9, 
   3.851438712172668*^9}, {3.8514389773909197`*^9, 3.851438998482037*^9}, {
   3.852757163290131*^9, 3.852757178300765*^9}, {3.854968905595159*^9, 
   3.8549689134019833`*^9}, {3.862314481737125*^9, 3.86231454849586*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"6bb879ae-6656-4d19-b1e4-eb81d9604815"],

Cell["\<\
Compares the actual wealth series to the model, assuming that the initial \
size vector is iteratively updated based on a tactic matrix that varies every \
year.\
\>", "Text",
 CellChangeTimes->{{3.86231581962652*^9, 
  3.862315864881727*^9}},ExpressionUUID->"ab75402b-ee7b-419c-82f9-\
961d2f5c7c0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComparisonPlotDynamicT", "[", 
   RowBox[{"countryName_", ",", "start_", ",", "end_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sim", ",", "actual", ",", 
      RowBox[{"c", "=", 
       RowBox[{"CountryID", "[", "countryName", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sim", "=", 
      RowBox[{
       RowBox[{"SimulateLawOfMotionDynamicT", "[", 
        RowBox[{"WorldPowerStructure", "[", 
         RowBox[{
          RowBox[{"start", "+", "1"}], ",", "end"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "c"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"actual", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"WealthSeriesInterval", "[", 
         RowBox[{"start", ",", "end"}], "]"}], "]"}], "[", 
       RowBox[{"[", "c", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"ComparisonPlot", "[", 
      RowBox[{
      "sim", ",", "actual", ",", "countryName", ",", "start", ",", "end"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.851436243297859*^9, 3.851436328338436*^9}, {
   3.851436418423759*^9, 3.851436473048306*^9}, {3.851436673070277*^9, 
   3.851436710827903*^9}, {3.851436757764399*^9, 3.851436767773569*^9}, {
   3.851436838479533*^9, 3.851436850220153*^9}, 3.8514369396715403`*^9, {
   3.851438294882948*^9, 3.851438340788409*^9}, {3.851438706971613*^9, 
   3.851438712172668*^9}, {3.8514389773909197`*^9, 3.851438998482037*^9}, {
   3.852757163290131*^9, 3.852757178300765*^9}, {3.854968905595159*^9, 
   3.8549689134019833`*^9}, {3.862315406980743*^9, 3.8623154576198606`*^9}, {
   3.862315694538171*^9, 3.862315785836052*^9}, {3.872104717439698*^9, 
   3.87210474684369*^9}, {3.872104935478891*^9, 3.872104965496519*^9}, {
   3.8721053936582937`*^9, 3.872105393993617*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"b716ff80-bfa2-4c62-91a5-49014f7d493c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<United States\>\"", ",", "2010", ",", "2018"}], "]"}]], "Input",\

 CellChangeTimes->{{3.86231579585867*^9, 3.86231580537031*^9}, {
  3.862315884141197*^9, 3.862315885135549*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"957c8aef-9d54-4a1c-afa1-29fb7bc25c86"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{2010., 6.48*^13}, {2011., 6.83836150223997*^13}, {2012., 
      7.215080889917653*^13}, {2013., 7.596431389112164*^13}, {2014., 
      8.039969150862223*^13}, {2015., 8.521660463124455*^13}, {2016., 
      9.03014887478922*^13}, {2017., 9.576693678458645*^13}, {2018., 
      1.0184697679167956`*^14}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{2010., 6.48*^13}, {2011., 6.47*^13}, {2012., 6.59*^13}, {2013.,
       7.2*^13}, {2014., 7.81*^13}, {2015., 8.23*^13}, {2016., 8.53*^13}, {
      2017., 9.13*^13}, {2018., 9.38*^13}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2018.170138888889, 1.0184697679167956`*^14}], 
            Offset[{0, 0}, {2018.170138888889, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.2518055555556`, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.2518055555556`, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.3334722222223`, 1.0184697679167956`*^14}], 
            Offset[{0, 0}, {2018.4968055555555`, 1.0184697679167956`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2018.170138888889, 1.0184697679167956`*^14}], 
            Offset[{0, 0}, {2018.170138888889, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.2518055555556`, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.2518055555556`, 1.0184697679167956`*^14}], 
            Offset[{0., 0.}, {2018.3334722222223`, 1.0184697679167956`*^14}], 
            Offset[{0, 0}, {2018.4968055555555`, 1.0184697679167956`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             1.0184697679167956`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{43., -6.49999999999999}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., -6.499999999999997}, {2018.4968055555555`, 
             1.0184697679167956`*^14}], 
            Offset[{10., 6.500000000000003}, {2018.4968055555555`, 
             1.0184697679167956`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2018.4968055555555, 1.0184697679167956*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2018.170138888889, 9.38*^13}], 
            Offset[{0, 0}, {2018.170138888889, 9.38*^13}], 
            Offset[{0., 0.}, {2018.2518055555556`, 9.38*^13}], 
            Offset[{0., 0.}, {2018.2518055555556`, 9.38*^13}], 
            Offset[{0., 0.}, {2018.3334722222223`, 9.38*^13}], 
            Offset[{0, 0}, {2018.4968055555555`, 9.38*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2018.4968055555555`, 
             9.38*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             9.38*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             9.38*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2018.170138888889, 9.38*^13}], 
            Offset[{0, 0}, {2018.170138888889, 9.38*^13}], 
            Offset[{0., 0.}, {2018.2518055555556`, 9.38*^13}], 
            Offset[{0., 0.}, {2018.2518055555556`, 9.38*^13}], 
            Offset[{0., 0.}, {2018.3334722222223`, 9.38*^13}], 
            Offset[{0, 0}, {2018.4968055555555`, 9.38*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2018.4968055555555`, 
             9.38*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             9.38*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2018.4968055555555`, 
             9.38*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2018.4968055555555`, 9.38*^13}], 
            Offset[{43., -6.49999999999999}, {2018.4968055555555`, 9.38*^13}],
             Offset[{10., -6.499999999999997}, {2018.4968055555555`, 
             9.38*^13}], 
            Offset[{10., 6.500000000000003}, {2018.4968055555555`, 
             9.38*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2018.4968055555555, 9.38*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2009.8333333333335`, 6.2636279067128914`*^13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"United States (2010-2018)\"", TraditionalForm],
  PlotRange->{{2009.8333333333335`, 2018.}, {6.2636279067128914`*^13, 
   1.0184697679167956`*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862315806206091*^9, 3.862315885700954*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"a7f8a4da-9eb2-4d8f-b720-02b5f986f777"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ReallocateTrade", "Subsubsection",
 CellChangeTimes->{{3.8554853687948637`*^9, 3.855485371498497*^9}, {
  3.855486791676711*^9, 
  3.855486792408029*^9}},ExpressionUUID->"a2d37f5b-09ab-4215-8b19-\
45a3ee8d7e22"],

Cell["\<\
Reallocate a percentage of a state\[CloseCurlyQuote]s power (trade volume) \
away from its opponents and towards its allies. The input matrix is assumed \
to be a trade matrix. Output: trade matrix.\
\>", "Text",
 CellChangeTimes->{{3.855486353551014*^9, 3.8554863966729183`*^9}, {
  3.855486428130682*^9, 3.855486441711211*^9}, {3.855513432807637*^9, 
  3.855513452931987*^9}, {3.8628673153500147`*^9, 
  3.8628673247924623`*^9}},ExpressionUUID->"6d673aa1-842f-4bb6-820f-\
f050e848b769"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReallocateTrade", "[", 
   RowBox[{
   "i_Integer", ",", "T_", ",", "allies_List", ",", "opponents_List", ",", 
    "pct_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "T", "]"}]}], ",", 
      RowBox[{"dT", "=", "T"}], ",", "reducedT", ",", "diff", ",", "add", ",",
       "addT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Reduce", " ", 
      RowBox[{"i", "'"}], "s", " ", "trade", " ", "with", " ", "opponents", 
      " ", "by", " ", "pct"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"reducedT", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"dT", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "i"}], "}"}], "\[Rule]", 
               RowBox[{
                RowBox[{"dT", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "i"}], "]"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"1.", "-", "pct"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "#"}], "}"}], "\[Rule]", 
               RowBox[{
                RowBox[{"dT", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"1.", "-", "pct"}], ")"}]}]}]}], "}"}], "&"}], ",", 
           "opponents"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Total", " ", "amount", " ", "of", " ", "trade", " ", "reduction", " ", 
       "with", " ", "opponents"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dT", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "#"}], "]"}], "]"}], "*", "pct"}], "&"}], ",", 
         "opponents"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Reallocation", " ", "of", " ", "that", " ", "trade", " ", "to", " ", 
       "allies"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"add", "=", 
      RowBox[{
       RowBox[{"allocationPct", "[", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "len"}], "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", " ", 
              RowBox[{"dT", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", "i"}], "]"}], "]"}]}], "&"}], ",", 
            "allies"}], "]"}]}], "]"}], "]"}], "*", "diff"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"addT", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{
        RowBox[{"ReplaceColumn", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", 
            RowBox[{"{", 
             RowBox[{"len", ",", "len"}], "}"}]}], "]"}], ",", "i", ",", 
          "add"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", "\[Rule]", "add"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"reducedT", "+", "addT"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8554853731933413`*^9, 3.855485420473731*^9}, {
   3.855485453831813*^9, 3.855485454046421*^9}, {3.85548611238791*^9, 
   3.855486115780015*^9}, {3.855486346645774*^9, 3.855486347891799*^9}, {
   3.855486789651101*^9, 3.8554867904128942`*^9}, {3.855513850132333*^9, 
   3.85551389680319*^9}, {3.855513933839541*^9, 3.855514010127556*^9}, {
   3.8555140494750223`*^9, 3.85551404983118*^9}, {3.855514183631853*^9, 
   3.855514227327899*^9}, {3.8555142900292387`*^9, 3.855514290771619*^9}, {
   3.8555149826494913`*^9, 3.855515031287582*^9}, 3.855515071231207*^9, {
   3.855515219319057*^9, 3.855515241226293*^9}, {3.855515330829041*^9, 
   3.8555153440848618`*^9}, {3.8555154422674103`*^9, 
   3.8555154702496967`*^9}, {3.855515516996365*^9, 3.855515566204344*^9}, {
   3.855515756288742*^9, 3.855515789995273*^9}, {3.855515824127586*^9, 
   3.855515828039856*^9}, {3.855516127793758*^9, 3.85551614841973*^9}, {
   3.855516353577273*^9, 3.85551644781817*^9}, {3.85561109931958*^9, 
   3.855611113868075*^9}, {3.85561122103902*^9, 3.8556112304045353`*^9}, 
   3.855611282242364*^9, 3.855611374113668*^9, {3.855611404629333*^9, 
   3.855611415997007*^9}, 3.855611608185206*^9, {3.85561187005056*^9, 
   3.855611884126431*^9}, {3.855833894160323*^9, 3.855833897263835*^9}, {
   3.855909762873451*^9, 3.8559097668439837`*^9}, 3.8628658010094223`*^9, {
   3.8628658836252747`*^9, 3.8628659346594973`*^9}, {3.862865996746863*^9, 
   3.8628660018711348`*^9}, {3.862866069515779*^9, 3.86286607006566*^9}, {
   3.8628662307882767`*^9, 3.8628662776377172`*^9}, {3.862866372196331*^9, 
   3.862866384344246*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"87901ce1-f0ae-4c77-981f-762f434805cc"],

Cell[TextData[{
 "A version that references global variables, used in a ",
 StyleBox["Fold", "Input"],
 ", e.g. ",
 StyleBox["Fold[ReallocateTrade,T,allies]", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.862867020491185*^9, 
  3.862867052131468*^9}},ExpressionUUID->"eb77a4f1-c80c-4682-adc8-\
527b589d7c59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReallocateTrade", "[", 
   RowBox[{"T_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"ReallocateTrade", "[", 
   RowBox[{"i", ",", "T", ",", "allies", ",", "opps", ",", "pct"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.862866864092341*^9, 3.862866899564068*^9}, {
  3.862866963517119*^9, 3.862866964907291*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b60367d8-34d8-467d-957d-da104bfde1a8"],

Cell["\<\
Normalize the vector of trade allocated to an country\[CloseCurlyQuote]s \
allies, such that the vector total equals 1.\
\>", "Text",
 CellChangeTimes->{{3.8555148644127607`*^9, 
  3.8555149408582497`*^9}},ExpressionUUID->"780a8d92-67b2-4f96-8886-\
ddb70e6f5dc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allocationPct", "[", "s_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", "s", "]"}], "\[Equal]", "0."}], ",", "s", ",", 
    RowBox[{"s", "/", 
     RowBox[{"Total", "[", "s", "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.855514691697567*^9, 3.8555147398561773`*^9}, {
  3.855514836747423*^9, 3.8555148482495613`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"714f910e-8d8f-4684-8d6c-6857d8b36888"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Figures", "Subsection",
 CellChangeTimes->{{3.843512711937565*^9, 3.8435127156591063`*^9}, {
  3.844375565891223*^9, 3.844375566642878*^9}, {3.851435770861108*^9, 
  3.851435771654183*^9}},ExpressionUUID->"9bf70f31-f20d-4803-8098-\
382859b3160d"],

Cell[CellGroupData[{

Cell["Largest Countries by National Wealth (1995-2020) ", "Subsubsection",
 CellChangeTimes->{{3.8443360938701344`*^9, 3.844336096932976*^9}, 
   3.845232126835497*^9, {3.851429919141553*^9, 
   3.851429928064652*^9}},ExpressionUUID->"8a8ed3b5-48d9-45e6-84f2-\
7fd588330599"],

Cell["\<\
A combined list of the biggest N countries in each year from 1995-2020.\
\>", "Text",
 CellChangeTimes->{{3.844372452707612*^9, 
  3.8443724746650877`*^9}},ExpressionUUID->"4765ebd2-5041-480f-89f7-\
f4c519b19268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SizeSeriesSubsetPlot", "[", 
  RowBox[{"WealthSeries", ",", 
   RowBox[{"Map", "[", 
    RowBox[{"CountryID", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<China\>\"", ",", "\"\<United States\>\"", ",", "\"\<India\>\"", 
       ",", " ", "\"\<Japan\>\"", ",", "\"\<Germany\>\"", ",", 
       "\"\<South Korea\>\"", ",", " ", "\"\<France\>\"", ",", " ", 
       "\"\<Russia\>\""}], "}"}]}], "]"}], ",", "1995", ",", "\"\<\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.84437196687097*^9, 3.84437197664472*^9}, {
   3.8443721046168957`*^9, 3.844372105189933*^9}, {3.844372415182103*^9, 
   3.844372428737825*^9}, {3.844372731400901*^9, 3.84437273260325*^9}, {
   3.8443728730652857`*^9, 3.844372904657319*^9}, {3.844373127998176*^9, 
   3.844373143152149*^9}, {3.844374617717477*^9, 3.8443746191920424`*^9}, 
   3.849971919367446*^9, 3.851429092790317*^9, {3.8514292041507483`*^9, 
   3.851429216931278*^9}, 3.8514292818081417`*^9, 3.851429867917347*^9, {
   3.851431176291369*^9, 3.851431186637911*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"ee8bbad7-9682-409e-9ebf-333be4add327"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGDRinrpvcgLzDUD8CY5bL2+G8E1AfIlC
PcPtEL4FiJ9x1u3KDgjfBsTf4FpTvhvCdwDxf+zdKLUPwncB8Rv2X2Q8AOF7
gPg7JhntOQjh+4D4ChVMHoch/AAQP+RmYdNRCD8ExN9yK47vBIQfAXbvZ0Hm
0xB+DIj/5Vcp7wUIPwHEl3v0ax6UnwLi59kJO12C8DNA/CiWmENXIPwcEH/d
pdSnVyH8ArD5YsxSNyD8EhB/jt42vtsQfgWIf0bW5ORdCL8GxL9TuE/lAYTf
AOKXZP5tfAjht4D4aovftD+C8DtA/H2ztJ8+hvB7QPxZu+fXPIXwJ4D4Snxc
H586AQDXQ26V
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGByezjE45ATmG4D4KQvNmw5D+CYgvsAG
G4+jEL4FiF+wUfPKcQjfBsTXSWVuPgXhO4D4FjOevT4N4buA+Ar8+sxnIHwP
EP9L3saNUHkfEP9N17mNUPkAMD/97qzzEH4IiN+3eq3WRQg/AsTXiHnqfgnC
jwHxbYpXb4DyE0D8FW9jL1+A8FNAfJGdUc1nIfwMEH9B7bZyKD8H7H4noRwo
vwDEn8N99DuUXwJ2/+zPcVDzKkD8og0sh6DuqQHxv02o3Qa1vwHEP8Qjm3oZ
wm8B8aNYYg5dgfA7QPyW1w+Cr0L4PSA+m3BixzUIfwKIr3KcaeNVJwDlCG/T

      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGC4skema7QTmG4D4B65Gys+D8E1A/BmO
PfULIHwLEP9HeIHPQgjfBsR/cGBf7yII3wHEZ+DOiF8C4buA+A6HVksuhfA9
QHyFUEHDZRC+D4hfsFHzynIIPwDEX7Bged8qCD8E7L5+Vc+1EH4EiB+wNslg
A4QfA1bPWX15I4SfAOJ7LOuT3ALhp4DNvyL1GsrPAPEnyB3Zsw3CzwHxb0z7
Gb8Twi8A8U+cM07YDeGXgPgS2j7MeyH8CrD5Uqf27ofwa0B8A4cT7gch/AZw
eKnOuHwIwm8B8a9kveI9AuF3gPhP+Pd/g/J7QPyMD+avj0L4ExDqAWqAbZk=

      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGDqsHu7Z7gTmG4D4ERpFr6F8ExDfYf4u
ph0QvgUa3wbE/8E8xQPKdwDxH1TdiYfyXUB8DTFmKSjfA8RfcHjGUqj5PiD+
havs5VB+ABo/BE1/BIivYKQgtRPCjwHxV7R09UH5CSB+xlm3K1D1KWj+ywDx
CzZqXoHyc9DcU4CmvgTEP/FRpRxqXgWIH+DS/xrKrwHxG8L+7YHyG0D8Gfe3
LoXyW0D8D/IbPaDu6wDxD/A6lUP5PSB+RZH0Xih/AiL8AFG4bxc=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGAquSL1e4gTmG4D4AhtsPJZC+CYgfkB6
A9MyCN8CxJ8gd2QPlG8D4hv8eiq5HMJ3AJu3UfMKlO+CxvcA8RccnrEUyvdB
4weA+A7zdzGtgPBDQPwNGbl9UH4EiP9BfqPHSgg/Bmz/9S9MqyD8BLB9fRZ7
ofwUsPkLlvdB+Rlg/2VFSa2G8HPA5rvWlEP5BSC+Ar8+8xoIvwRs/hbmN1B+
Bdj8bPdlayH8GnD4/Fuzdx2E3wDiN+y/yLgBwm8B8Q+Uie6B8jtA/BdLFvZu
hPB7QHyNmKfumyD8CSD+jklGezY6AQAuVGzw
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGB7c2WQ5wQnMNwDxN+zxnDQRwjcB8R2e
zjGYBOFbgPgF37mZoHwbEL9hzoNXUL4DiP8hbhr3FAjfBcQ3ELt1FMr3APEV
QgUNp0H4PmD1uqvlZkD4AWDzp5pqzILwQ0D8C/2qnnMh/AiwfTuuTFsA4ceA
+AKXdeMXQfgJIH5AV6HkYgg/BWx+6uQyKD8D7B7Z6wZLIPwcsP8OrZZcCuEX
gM2vfH8Zyi8B63daFL8Mwq8A8RlelHksh/BrwPrn72JaAeE3gO136X8N5beA
7bv+hWkVhN8BDl/XmvLVEH4PiL+gdlv5Wgh/Atj8RVOk1joBANhSalY=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGAJsJzXMdALzDUD8D4Lbi2ZB+CYg/oUl
Ml2zIXwLEL+g0rFmDoRvA+aHBaTOh/AdQPyEIHPJhRC+C4jv8GbmbCjfA8Sf
ELZGZBGE7wO2L3Vy2WIIPwDE39Adt3QphB8C4gv0ehuugPAjwObVnHy9CsKP
Adt3rGjvGgg/AewfxXlXVkP4KSD+ggXL+6DqM8Dmu9aUQ+VzQPwDrwISoPoL
QHwFfn1mKL8EzbwKNP01YPdlRUlB+Q1o6ltAfIMtzG+g5nWA3R9548paCL8H
bN8b2zfrIPwJ4PD4s99wjRMA0apq3g==
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQY68x0YGBr6nolMcQLzDUD8BJ7Q19MgfBMQf4LA
qWfTIXwLEF9gisccKN8GxL9wlb0cyncAm5fyYxKU7wKWXy35dRaE7wHiK7yx
fTMPwvcB8W/8P7NkAYQfAOJ3tB8IXQjhh4D4K+4n/4XyI0D8gPQGpmUQfgyI
/yD8tcdqCD8B7N4bD/vWQPgpIL7BFuY3UH4G2P1ZUVJQ9TkgfsFGzSvLIfwC
EN9h/i6mFRB+Cdg+l/7XUH4FiH+A16l8JYRfA/aPkYIUlN8A4m/IyO2Dqm9B
M78D7J5fTyWh/B4Qf8HhGUuh/Amw8F/mBACrY24U
      
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.93*^14}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.93*^14}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.93*^14}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.93*^14}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.93*^14}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.93*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.93*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.93*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.93*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.93*^14}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.93*^14}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.93*^14}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.93*^14}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.93*^14}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.93*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.93*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.93*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.93*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{42., 6.500000000000009}, {2022.5733506944446`, 1.93*^14}], 
            Offset[{42., -6.499999999999991}, {2022.5733506944446`, 
             1.93*^14}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             2022.5733506944446`, 1.93*^14}], 
            Offset[{10., 6.500000000000002}, {2022.5733506944446`, 
             1.93*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26., 5.773159728050814*^-15}, \
{2022.5733506944446, 1.93*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 9.54*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 9.54*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 9.54*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 9.54*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 9.54*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.2050310842144506`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 9.54*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 9.54*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 9.54*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 9.54*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 9.54*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.2050310842144506`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.2050310842144506`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{76., 6.500000000000017}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{76., -6.499999999999983}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             1.2050310842144506`*^14}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             1.2050310842144506`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"United States\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{43., 9.547918011776346*^-15}, \
{2022.5733506944446, 1.2050310842144506*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 4.41*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 4.41*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 4.41*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 4.41*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 4.41*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.0207551426344527`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 4.41*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 4.41*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 4.41*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 4.41*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 4.41*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 1.0207551426344527`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             1.0207551426344527`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{37., 6.500000000000008}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{37., -6.499999999999992}, {2022.5733506944446`, 
             1.0207551426344527`*^14}], 
            Offset[{10.000000000000002`, -6.499999999999997}, {
             2022.5733506944446`, 1.0207551426344527`*^14}], 
            Offset[{9.999999999999998, 6.500000000000003}, {
             2022.5733506944446`, 1.0207551426344527`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"India\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{23.5, 5.218048215738236*^-15}, \
{2022.5733506944446, 1.0207551426344527*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.68*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.68*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.68*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.68*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.68*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 8.23936859480947*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 2.68*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 2.68*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.68*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 2.68*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 2.68*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 8.23936859480947*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             8.23936859480947*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 7.50000000000001}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{43., -7.49999999999999}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., -7.499999999999997}, {2022.5733506944446`, 
             8.23936859480947*^13}], 
            Offset[{10., 7.500000000000003}, {2022.5733506944446`, 
             8.23936859480947*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Japan\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2022.5733506944446, 8.23936859480947*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.95*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.95*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.95*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.95*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.95*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 6.145762347539337*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.95*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.95*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.95*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.95*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.95*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 6.145762347539337*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             6.145762347539337*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{57., 7.500000000000012}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{57., -7.499999999999988}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., -7.499999999999998}, {2022.5733506944446`, 
             6.145762347539337*^13}], 
            Offset[{10., 7.500000000000002}, {2022.5733506944446`, 
             6.145762347539337*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Germany\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{33.5, 7.438494264988549*^-15}, \
{2022.5733506944446, 6.145762347539337*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.6*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.6*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.6*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.6*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.6*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 4.1775795160042805`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.6*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.6*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.6*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.6*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.6*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 4.1775795160042805`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.1775795160042805`*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{71., 6.500000000000016}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{71., -6.499999999999984}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., -6.499999999999998}, {2022.5733506944446`, 
             4.1775795160042805`*^13}], 
            Offset[{10., 6.500000000000002}, {2022.5733506944446`, 
             4.1775795160042805`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"South Korea\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{40.5, 8.992806499463768*^-15}, \
{2022.5733506944446, 4.1775795160042805*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.55*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.55*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.55*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.55*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.55*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.3348201002043008`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.55*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.55*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.55*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.55*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.55*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 2.3348201002043008`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             2.3348201002043008`*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{47., 6.500000000000011}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{47., -6.499999999999989}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., -6.499999999999998}, {2022.5733506944446`, 
             2.3348201002043008`*^13}], 
            Offset[{10., 6.500000000000002}, {2022.5733506944446`, 
             2.3348201002043008`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"France\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{28.5, 6.328271240363392*^-15}, \
{2022.5733506944446, 2.3348201002043008*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.26*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.26*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.26*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.26*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.26*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 4.920606893249286*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5316840277778`, 1.26*^13}], 
            Offset[{0, 0}, {2020.5316840277778`, 1.26*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.26*^13}], 
            Offset[{0., 0.}, {2020.7868923611113`, 1.26*^13}], 
            Offset[{0., 0.}, {2021.0421006944446`, 1.26*^13}], 
            Offset[{0, 0}, {2022.5733506944446`, 4.920606893249286*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2022.5733506944446`, 
             4.920606893249286*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{46., 6.50000000000001}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{46., -6.49999999999999}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., -6.499999999999997}, {2022.5733506944446`, 
             4.920606893249286*^12}], 
            Offset[{10., 6.500000000000003}, {2022.5733506944446`, 
             4.920606893249286*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Russia\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{28., 6.217248937900877*^-15}, \
{2022.5733506944446, 4.920606893249286*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1994.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 108.80000000000001`}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\"", TraditionalForm],
  PlotRange->{{1994.4791666666665`, 2020.}, {0, 1.93*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.844372882334238*^9, 3.844372905268012*^9}, 
   3.8443730641548567`*^9, 3.844373097175713*^9, {3.8443731290758553`*^9, 
   3.844373143938534*^9}, 3.8443746200293818`*^9, 3.8499719214852867`*^9, 
   3.851429218883025*^9, 3.851429282725677*^9, {3.851429855737495*^9, 
   3.851429869400805*^9}, 3.851430590897778*^9, 3.85143080025351*^9, 
   3.851430977058963*^9, 3.85143111427596*^9, {3.851431167533601*^9, 
   3.851431187632544*^9}, 3.8621371710368433`*^9, 3.862138499732841*^9, 
   3.87210812022795*^9, 3.8721109454188957`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"ce37346d-8e79-4469-b07a-f2d4eb0a01a3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic Comparison Plots", "Subsubsection",
 CellChangeTimes->{{3.862740769729745*^9, 3.862740771085203*^9}, {
  3.862765193870121*^9, 
  3.862765196579729*^9}},ExpressionUUID->"0bd5e2df-0ce3-45ef-af83-\
33233c5136dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Azerbaijan\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellChangeTimes->{{3.8627408640050087`*^9, 3.8627408700623713`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"2520a95f-e435-4444-b093-1ed28670890d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5MoN/WZOYL7JfIegqfMe3m02h/At5jtY
5t30DyqxgPBt5js8En3J8qXOEsJ3mO/wM+rDrpu7rSB8l/kOHimv7+6QsYHw
PeY7WE29yf50ty2E7zPfgcko2/7jRXsIP2C+g5ZX4Px8K0cIP2S+w9+mhROW
PHCC8CPmOywMjxLI6nCF8GPmO5jxv1n5v8MTwk+Y72Bb2jHhZrs/hJ8y36En
5orHjNQgCD9jvsNeRvZ/fndDIfyc+Q6nzpw05FsRBeEXzHcIOdGq26UUD+GX
zHfYrZUqoHU4EcKvmO/AfmHHusVfkiH8mvkOq0KLYj8dToXwG4DyvPrxFeHp
EH7LfAc+119KXWKZEH7HfAcb+QTdc9rZEH7PfIcXW3XzdlrmQvgT5jtMbv+d
qPs8zwkA1vd5Eg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5MoN/WZOYL4JmD8p9CiUbwHmu7n/Nofw
bcD8M01zLCF8BzB/Q98HawjfBczXuLDbDsL3APMvdBx2gPB9wPxWnX1OEH4A
mH/nP6sLhB8C5v9+9dUTwo8A8/2P/wyC8GPA/Mv17JEQfgLMvjgIPwXEP2C0
TTEJws8A8R0uLH2fDOHngPgNmpLfofwCsLx6pXkqhF8C1n8kgzUdwq8Aq/+h
y5UB4deA5f+7L8yC8BvA9lv4qmZC+C1geTZXHqh8B9h8uZ8WUH4PWP7koztQ
/gQw//qdTZlOAPsKXyk=
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.0618202398362367`*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.0618202398362367`*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.0618202398362367`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.0618202398362367`*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.0618202398362367`*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.0618202398362367`*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.0618202398362367`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.0618202398362367`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             1.0618202398362367`*^12}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.0618202398362367`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 1.0618202398362367*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 8.83*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 8.83*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 8.83*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 8.83*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 8.83*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 8.83*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             8.83*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             8.83*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             8.83*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 8.83*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 8.83*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 8.83*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 8.83*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 8.83*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 8.83*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             8.83*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             8.83*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             8.83*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 8.83*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 8.83*^11}],
             Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             8.83*^11}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             8.83*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 8.83*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Azerbaijan (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 1.0618202398362367`*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862740870699317*^9, 3.8627653709693823`*^9, 
  3.8627655588183117`*^9, 3.872108128508733*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"be981adc-fa27-4cbe-835d-968a4cd8198f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Canada\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellChangeTimes->{{3.862744122199647*^9, 3.862744123425477*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"69a50087-b7fa-4ecd-aa4f-ad4478eccd22"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x0YGBx2r1vX6gTmm8x3uGIvF7ksrAPCt5jv
sN1UxsL4UBeEbzPfoazsfMyZjz0QvsN8B6/Z6+TvMvZD+C7zHdZZ7eBd1zEB
wveY76DpfPEm64KJEL7PfAeJj7KXpU5MgvAD5jtE/dxuY/t5MoQfMt8hP74k
1kFgKoQfMd/h8c2EGXddp0H4MfMduC4cUJQ9NB3CT5jvwOZt84W9fCaEnzLf
gb/V6Kys+mwIP2O+Q5P6yw+G9+dC+DnzHbpe//NdX7YAwi+Y7/Dw2YzfP/8s
hPBLgPafjnbv6FkM4VfMd7iT+jjchXkphF8z30Fw7c0HdZHLIPyG+Q6K23YG
aR1aDuG3zHfQmL6xtC1kJYTfMd8hlUsyNefDKgi/Z75DhPGp/xu610D4E4D+
v5V8xfbZWicAIXSAwA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x0YGBx2r1vX6gTmm4D4DxpvnmqH8C1AfAVt
5fWdEL4NiJ9wJWdyN4TvAOIvqN1W3gvhu4D4B65GyvdB+B4gfoO45C+ovA9Y
ff6ehVD5ABA/YG2SwQQIPwRsX+/PjokQfgSIf4Htc/JkCD8GbL6r1vkpEH4C
iF9wWzwMyk8Bq//4W2kqhJ8B4n9wWhQ/DcLPAevXNFOeDuEXgPgCvd6GMyD8
ErD7li/5ORPCrwCb32D3fDaEXwNW757JPA/CbwCHlzzzx/kQfguIf8Ln39MF
EH4H2P8br2svhPB7QHwOFqcFUP4EsPyOK9MWOAEAQpVoaw==
      
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.6437358506477176`*^13}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.6437358506477176`*^13}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.6437358506477176`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.6437358506477176`*^13}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.6437358506477176`*^13}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.6437358506477176`*^13}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.6437358506477176`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.6437358506477176`*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             1.6437358506477176`*^13}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.6437358506477176`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], Offset[{26.5, 5.88418203051333*^-15}, 
          {2021.4904166666668, 1.6437358506477176*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 9.12*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 9.12*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 9.12*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 9.12*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 9.12*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 9.12*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             9.12*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             9.12*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             9.12*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 9.12*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 9.12*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 9.12*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 9.12*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 9.12*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 9.12*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             9.12*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             9.12*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             9.12*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 9.12*^12}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 9.12*^12}],
             Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             9.12*^12}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             9.12*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 9.12*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Canada (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 1.6437358506477176`*^13}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862744123823004*^9, 3.872108130923993*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"c5400d50-3627-42e3-aa98-68276ddfee35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Cote d'Ivoire\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",\

 CellChangeTimes->{{3.862741374603899*^9, 3.8627413780814238`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"0f3c1774-6ecc-4262-aeec-311a8a728b3c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5Py511ycwHyT+Q5fdMVXSL1xhfAt5jvs
MKs8cSHCHcK3me9gf3Zy/PUzHhC+w3wHzqRvllu0vCB8l/kOEzelL00r9obw
PeY7tDMzKy1dDuX7zHcw0/E4w/oDyg+Y71D6ss7geo0PhB8y3+FqqJN0b5Ef
hB8x3+GejvfOP9oBEH7MfIevq6qDnugHQvgJ8x3+Xfxw6XdIEISfMt+h6V3A
9+rOYAg/Y75D4hfzGrWvIRB+DtC+9/yc05jDIPwCoPvdfzDwTwqH8EvmO9jp
yT3XbIyE8CvmO1TUG0n6tEdD+DXzHTZsiHnotSoWwm8A+q+05u/Pn/EQfst8
B6mvkfLGTokQfsd8hxXd9TdNJyVB+D3zHQ6cTdBJfJUM4U+Y7/C0hHGVpF+q
EwBHVHkX
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5Py511ycwHwTMJ/z6WkPCN8CzO9QZvKG
8G3A/Geft0D5DmC+aAyfD4TvAuabnZroC+F7gPn6Z9X8IHwfMF/jwm4oPwDE
b9h/kTEAwg8By///IBMI4UeA5flX3IPyY8D83IqJQRB+Ali9x6m+YAg/BSyv
JNMTAuFngOX/5naGQvg5YP5VptlQ+QIwv2bN/nAIvwTM39dxLArCrwDzc/TD
YiH8GhDf4dfkwgQIvwFs36pbBxIh/Bawev/jP5Mg/A4Q/4DYodIUCL8HrL7y
/eVUCH8C2DzJ+sQ0JwAGOVwB
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 7.32036943883653*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 7.32036943883653*^11}], 
            Offset[{0, 0}, {2021.684021259231, 7.13806503269542*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.13806503269542*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 7.32036943883653*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.32036943883653*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 7.32036943883653*^11}], 
            Offset[{0, 0}, {2021.684021259231, 7.13806503269542*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.13806503269542*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{43., -6.49999999999999}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., -6.499999999999997}, {2021.684021259231, 
             7.13806503269542*^11}], 
            Offset[{10., 6.500000000000003}, {2021.684021259231, 
             7.13806503269542*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.684021259231, 7.13806503269542*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 7.69*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 7.69*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.69*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.69*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 7.69*^11}], 
            Offset[{0, 0}, {2021.684021259231, 7.87230440614111*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.87230440614111*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 7.69*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 7.69*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.69*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 7.69*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 7.69*^11}], 
            Offset[{0, 0}, {2021.684021259231, 7.87230440614111*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.684021259231, 
             7.87230440614111*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{43., -6.49999999999999}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., -6.499999999999997}, {2021.684021259231, 
             7.87230440614111*^11}], 
            Offset[{10., 6.500000000000003}, {2021.684021259231, 
             7.87230440614111*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.684021259231, 7.87230440614111*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 64.24480217645424}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Cote d'Ivoire (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 7.69*^11}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8627413784201527`*^9, 3.872108132414357*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"bd1fc08d-5c1b-4e08-bd45-2c5db08e75da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Nauru\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellChangeTimes->{{3.86274157941457*^9, 3.862741580057149*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"fb2aec6c-775d-49e9-8b6d-c1d0d8fc3da8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2ApIPR4V2OYL7JfIdDJw2El/XugfAt5jts
vBJX9GzfXgjfZr7DrBuqe35w7YfwHeY7XLhTMPGUJJTvMt9h/9SNkY8VoXyP
+Q7vDlQl/VE7COH7zHfYF+x45Xj4AQg/YL7D3mZxGb87UPUh8x1UOEu2uW3f
B+FHzHcIetr8te0g1P6Y+Q4HT2ScPsSzG8JPmO/w1/TAEjPRrRB+ynyHVXMu
PTx8fhuEnzHfoeNmUeeeDqj/cuY7ZLouZP8RA7WvYL7DJ4Vrf+bpHYLwS+Y7
6Ide6WH/dgLCr5jvsNolPrjx2jkIvwYoz9Qx9+WzixB+w3yHBs1Zus4GlyH8
lvkObteyvPdUXIHwO+Y7bHPeNWuK3jUIv2e+Q+zCZR5WM69D+BPmOxSEcSvM
3HvTEQDNmIef
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2ApIPR4V2OYL4JmN8gVbADwreA8C+1b4Pw
bcD8A89Tt0L4DhD99sFbIHwXiHrvL5sgfA+I/PcsKN8HjR8A5jN0aG2E8EMg
/DVyUPkIiHm/zm2A8GMg+tc3QfkJEPecWQe1PwXCT90DdX8GxDzu7N0Qfg5E
f4/qXgi/AKK+5dghCL8Ewi83OwnhV0D4ko1nIfwaCF8r5QKE3wDmJwR0Qfkt
EPMP/oHyO8B8BaP8ixB+D0R97W4ofwKYv+AE+yVHACQfXZ0=
      
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.7274236161771507`*^9}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.7274236161771507`*^9}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.7274236161771507`*^9}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.7274236161771507`*^9}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7274236161771507`*^9}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.7274236161771507`*^9}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.7274236161771507`*^9}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7274236161771507`*^9}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             1.7274236161771507`*^9}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.7274236161771507`*^9}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 1.7274236161771507*^9}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.21*^9}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.21*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.21*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.21*^9}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.21*^9}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.21*^9}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.21*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.21*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.21*^9}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.21*^9}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.21*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.21*^9}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.21*^9}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.21*^9}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.21*^9}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.21*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.21*^9}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.21*^9}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 1.21*^9}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 1.21*^9}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 1.21*^9}],
             Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.21*^9}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 1.21*^9}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Nauru (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 1.7274236161771507`*^9}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8627415858766403`*^9, 3.87210813378369*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"a997c526-432f-46a9-8912-3d5e5ab2bd08"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Conflict Comparison Plots", "Subsubsection",
 CellChangeTimes->{{3.8627407731541653`*^9, 3.862740774717535*^9}, {
  3.862744423309664*^9, 3.862744426528982*^9}, {3.862765202339224*^9, 
  3.862765206359132*^9}},ExpressionUUID->"bd6eb126-a85d-41fe-a0ae-\
0a4cc579fa6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Syrian Arab Republic\>\"", ",", "1996", ",", "2020"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.862741635095579*^9, 3.862741639086753*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"5c6d751b-5684-4abf-8d79-8ce11cbfbd68"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5GGmeXFOYL7JfIdF4Vt3lq6Jh/At5jto
v7VrfB+XAOHbzHc4cb/YYskXKN9hvoP7sbcyhacTIXyX+Q6rmRewc29KgvA9
gPzO6vTsDckQvs98h81nhXfa7U6B8APmOyjv26YUdjgVwg+Z72Bv5L316pw0
CD9ivkPYfgkj3wnpEH7MfIeXSyc53pfPhPAT5jtIqAe+ZD2RBeGnzHdYsu7N
Dj33HAg/Y77D7Oobbxs78iD8nPkOBUbTpl/uzoXwC+Y77Nn+68pHhmwIv2S+
w4qjl7cemwS1r2K+wxfO4szjB6Dur5nvMOOs0Jnzb6Hh0wB0r12ycZNiJITf
Mt/hxv2CXl63YAi/Y77DY4lmN9GXPhB+z3yHgGRLsdrVLhD+hPkOk07vvtve
5uAEANU1fjA=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5GGmeXFOYL4JmK94OSAewrcA8R0iUlQS
IXwbMD8+sT8BwncA8z9PY4PKu4D4BxLlqpMgfA+wfPaNi8kQvg+I3xDRGJAC
4QeA+UWfMtIg/BCw/bdqijIg/AiweaZrU7Mg/Bgw31+uLgfCTwDrF5f8lQvh
p4D5+y8yFkD4GWD7f00uhPJzwObrRZYVQvgFYPWPzU5mQvglYPk6/WCoeyvA
/OzdS6H+rQHzA6xXQcOnAczvnXsTGn4tYPMEZPqh/A4wP++NI1R9D8x9UPMm
gPWbhj1McAIA9E1cAA==
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.419530556075904*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.419530556075904*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.419530556075904*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.419530556075904*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.419530556075904*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.419530556075904*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.419530556075904*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.419530556075904*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             1.419530556075904*^11}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.419530556075904*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 1.419530556075904*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 5.8*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 5.8*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 5.8*^11}],
             Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 5.8*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Syrian Arab Republic (1996-2020)\"", TraditionalForm],
  
  PlotRange->{{1995.5, 2020.}, {0, 1.2*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862741641238446*^9, 3.8721081388306913`*^9, 
  3.87211095258348*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"5cda83f9-dcfd-44d1-9285-60144d62e259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Yemen\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellChangeTimes->{{3.8627416747213497`*^9, 3.8627416752973967`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"b64aa03d-f9f4-4b8c-8b55-767734237e12"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2AZO/cm35OYL7JfAdJBy/hB1/9IXyL+Q6h
C25N/tEXAOHbzHe4/LLgyDurQAjfYb7DjGt8Wd+/Qfku8x2Yjl9krNwVBOF7
zHfoNZ8uf6orGML3me/Aa8QQ6FYSAuEHzHeQu795xcbMUAg/ZL4Dqya7RldW
GIQfMd9Blyn0zqOucAg/Zr7Dnfzb84RORkD4CfMdIvOVtbjUoyD8lPkOfZfW
qUzKiYbwM+Y76Hi89Aq6HQPh58x3cJiW9YhjRhyEXzDf4UHHQydv3gQIv2S+
w0LNhks5d6D8ivkO7/uFVv1uhaqvme/QvfiE/J3jUPsa5jvkaKnqbimBurdl
vsPyZzwXd5pA/dsx32GJY7px5XtoePbMdxDL65H7sM0Twp8w36E10VzTvs/F
CQCS5Xcd
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2AZO/cm35OYL4JmG8a9jAAwrcA87dMEQ+G
8G3AfI9TfVC+A4jfcG/Px1AI3wUsL35/YTiE7wGWD/u3JwLC9wHzJef0RkL4
AWD+2ossURB+CFh/laZODIQfAZZ/uNk0DsKPAcsrXg6Ih/ATwPJn9nyB8lPA
/Oc2HxIg/AywevUY7iQIPwfMf53bA1VfAFYfzF4JVV8Clj/ZHZEI4VeA5cWW
ekL5NWC+P2MQ1P0NYPVyd3ig/m1BC48OMJ9X1TsMwu8B8216l0D5E8D89SEz
Qp0AeOtcmA==
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.7657169982276187`*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.7657169982276187`*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.7657169982276187`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.7657169982276187`*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.7657169982276187`*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.7657169982276187`*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.7657169982276187`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.7657169982276187`*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             1.7657169982276187`*^11}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             1.7657169982276187`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 1.7657169982276187*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.71*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.71*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.71*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.71*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.71*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 3.71*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             3.71*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             3.71*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             3.71*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.71*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.71*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.71*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.71*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.71*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 3.71*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             3.71*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             3.71*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             3.71*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 3.71*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 3.71*^11}],
             Offset[{10., -6.499999999999997}, {2021.4904166666668`, 
             3.71*^11}], 
            Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             3.71*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 3.71*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Yemen (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 6.2*^11}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862741675821108*^9, 3.862743114345355*^9, 
  3.872108140435761*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"858bb795-3997-4259-9753-144e23fb686e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Libya\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellChangeTimes->{{3.862741549741241*^9, 3.8627415503224154`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"f154937e-8295-4966-b57d-a8ecc1b967d2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2ApMuRdB8nMN9kvoOTq+Bsn2A/CN9ivkNo
Q+CHeeoBEL7NfAf53gptMY1ACN9hvkPI9bLoH61BEL7LfIeSncZ3v18OhvA9
5juI92zYeF43FML3me8wd9PE3y9ehUH4AfMd4kofiO8Kj4TwQ+Y7fFuy7NH2
4hgIP2K+Q+qPLpMwtQQIP2a+g3FEbgy3VxKEnzDf4ZShuo6NQSqEnzLfYVPL
eY1+t3QIP2O+w97Pr2SFC7Mg/Jz5DlmrHDit3KDqC+Y7XGP5lHovAKq+ZL7D
ffYbcy+0QtVXzHfozXEW+/Uaal/NfIcdNto+tpfDIfyG+Q5rXB677dGDhlfL
fAfntlc8y764QfgdQP1p6hekbbwg/J75DpcMc3x4y3wh/AnzHW4vN/WadCTQ
CQBTrHcH
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2ApMuRdB8nMN8ExG/ozLENgPAtwHzZRVug
fBswv++ZSAiE7wDWP2NBdiiE7wLmH+COCoPwPcDqw/7tiYDwfcDyGhd2x0H4
ASC+Q3xifwKEHwLmr7BiTIbwI0D8A4ynTdIg/Biw/t+vvmZC+Alg9XI/LbIg
/BSw/Ozp63Mh/Ayw/QIy/XkQfg5Yfg+rcTyEXwA2//qdTVDzSsDyvi5p6RB+
BVj/581GKRB+DVj9hLYrSRB+A5h/5WleIoTfAuanzQiCurcD7D6dz3xQ83vA
5knO6YXyJ4D58XW7g50ADb9fJw==
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.0524946248662274`*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.0524946248662274`*^11}], 
            Offset[{0, 0}, {2021.7490402731166`, 2.7199785594305286`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.0524946248662274`*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.0524946248662274`*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.0524946248662274`*^11}], 
            Offset[{0, 0}, {2021.7490402731166`, 2.7199785594305286`*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             2.7199785594305286`*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{43., -6.49999999999999}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., -6.499999999999997}, {2021.7490402731166`, 
             2.7199785594305286`*^11}], 
            Offset[{10., 6.500000000000003}, {2021.7490402731166`, 
             2.7199785594305286`*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.7490402731166, 2.7199785594305286*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.39*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.39*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.39*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.39*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.39*^11}], 
            Offset[{0, 0}, {2021.7490402731166`, 3.722516065435699*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 3.39*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 3.39*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.39*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 3.39*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 3.39*^11}], 
            Offset[{0, 0}, {2021.7490402731166`, 3.722516065435699*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.7490402731166`, 
             3.722516065435699*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{43., -6.49999999999999}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., -6.499999999999997}, {2021.7490402731166`, 
             3.722516065435699*^11}], 
            Offset[{10., 6.500000000000003}, {2021.7490402731166`, 
             3.722516065435699*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.7490402731166, 3.722516065435699*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 65.20018360497942}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Libya (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 1.05*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862741550823491*^9, 3.8721081419681673`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"c3e8a32e-e633-4d52-ae52-9a3d616b3d17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Iraq\>\"", ",", "1996", ",", "2020"}], "]"}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"4776bc67-4f3e-4ed1-90fe-6b6b2c4ac292"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5K2aoggnMN9kvoMzr2XaF9tICN9ivoPs
gRDBf3ZREL7NfIdJ/xXdIk9HQ/gO8x1uFj9M//ErFsJ3me+wYkvI1gjGBAjf
Y77DMkb3SYlfoXyf+Q4/HqRv5MlzhfAD5jusOj3d+G67F4QfMt/BQoPv4my+
AAg/Yr6Di0XfRc2SYAg/Zr6Defu+l047wiH8hPkOTV9//tIrjYPwU+Y7/LrQ
LV1sngThZ8x3uK5Zmb72bSqEnzPfoSW0XW9bTRaEXzDfgXvyzJy9d/Mh/JL5
DqEz+ApDGosg/Aqg/+unBFxmL4Xwa+Y7qG2cdtHqQxmE3zDf4f8KTb7T6yog
/Jb5DiK6qeZST6og/I75DllNK7wjkmoh/B6geaEPT2ReqofwJ8x3WNSi+/j1
1QYnAOsKe1U=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5K2aoggnMN8EzN/Q9yEawrcA8Q809fxL
hvBtwHzn5daZEL4DmD+rqjkLwncB8RvKcxygfA8Q32HZ9tx0CN8HbL7Utafx
EH4AWH1d5mqoeSFg9Tqf+aD8CLD6KbNc8iD8GLB9tULqBRB+Alh/3zOREgg/
BSxvp5tSCuFngPkGxn1lEH4OWH3sb/UKCL8AbF/eedEaCL8EzA+6nVkH4VeA
1QvI9EP5NWD+/ouMDRB+A5i/+G5oE4TfAuIrtP2RhfI70OR7wOZfXxTVDOFP
AMtvvK7d6AQAtMliEw==
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 2.313871451568579*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 2.313871451568579*^12}], 
            Offset[{0, 0}, {2021.8094809952404`, 2.2099476416903013`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 2.313871451568579*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.313871451568579*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 2.313871451568579*^12}], 
            Offset[{0, 0}, {2021.8094809952404`, 2.2099476416903013`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.2099476416903013`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{43., -6.49999999999999}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., -6.499999999999997}, {2021.8094809952404`, 
             2.2099476416903013`*^12}], 
            Offset[{10., 6.500000000000003}, {2021.8094809952404`, 
             2.2099476416903013`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.8094809952404, 2.2099476416903013*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 2.36*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 2.36*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.36*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.36*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 2.36*^12}], 
            Offset[{0, 0}, {2021.8094809952404`, 2.463923809878278*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 2.36*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 2.36*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.36*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 2.36*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 2.36*^12}], 
            Offset[{0, 0}, {2021.8094809952404`, 2.463923809878278*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.8094809952404`, 
             2.463923809878278*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{43., -6.49999999999999}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., -6.499999999999997}, {2021.8094809952404`, 
             2.463923809878278*^12}], 
            Offset[{10., 6.500000000000003}, {2021.8094809952404`, 
             2.463923809878278*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.8094809952404, 2.463923809878278*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 66.0882921749599}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Iraq (1996-2020)\"", TraditionalForm],
  PlotRange->{{1995.5, 2020.}, {0, 2.66*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862741806577138*^9, 3.862743489617049*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"04481d0f-175c-475e-880f-f02238145fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComparisonPlotDynamicT", "[", 
  RowBox[{"\"\<Afghanistan\>\"", ",", "1999", ",", "2003"}], "]"}]], "Input",
 CellChangeTimes->{{3.85143648590373*^9, 3.851436500311276*^9}, 
   3.85143821186992*^9, 3.851438535797575*^9, {3.851443763793828*^9, 
   3.851443765139888*^9}, 3.8623155642482557`*^9, {3.862428038127507*^9, 
   3.862428038524725*^9}, 3.862765245653561*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"8393abe4-c2a4-49e7-b0c9-acf97ac3bbf9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1999., 9.*^10}, {2000., 8.420884488354073*^10}, {2001., 
      6.037104733469523*^10}, {2002., 6.329462095481983*^10}, {2003., 
      6.748602328013136*^10}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1999., 9.*^10}, {2000., 8.33*^10}, {2001., 7.69*^10}, {2002., 
      1.02*^11}, {2003., 1.1*^11}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2003.0850694444443`, 6.748602328013136*^10}], 
            Offset[{0, 0}, {2003.0850694444443`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.1259027777778`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.1259027777778`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.166736111111, 6.748602328013136*^10}], 
            Offset[{0, 0}, {2003.2484027777778`, 6.748602328013136*^10}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2003.0850694444443`, 6.748602328013136*^10}], 
            Offset[{0, 0}, {2003.0850694444443`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.1259027777778`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.1259027777778`, 6.748602328013136*^10}], 
            Offset[{0., 0.}, {2003.166736111111, 6.748602328013136*^10}], 
            Offset[{0, 0}, {2003.2484027777778`, 6.748602328013136*^10}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             6.748602328013136*^10}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{43., -6.49999999999999}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., -6.499999999999997}, {2003.2484027777778`, 
             6.748602328013136*^10}], 
            Offset[{10., 6.500000000000003}, {2003.2484027777778`, 
             6.748602328013136*^10}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Model\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2003.2484027777778, 6.748602328013136*^10}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2003.0850694444443`, 1.1*^11}], 
            Offset[{0, 0}, {2003.0850694444443`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.1259027777778`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.1259027777778`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.166736111111, 1.1*^11}], 
            Offset[{0, 0}, {2003.2484027777778`, 1.1*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2003.2484027777778`, 
             1.1*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             1.1*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             1.1*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2003.0850694444443`, 1.1*^11}], 
            Offset[{0, 0}, {2003.0850694444443`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.1259027777778`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.1259027777778`, 1.1*^11}], 
            Offset[{0., 0.}, {2003.166736111111, 1.1*^11}], 
            Offset[{0, 0}, {2003.2484027777778`, 1.1*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2003.2484027777778`, 
             1.1*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             1.1*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2003.2484027777778`, 
             1.1*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2003.2484027777778`, 1.1*^11}], 
            Offset[{43., -6.49999999999999}, {2003.2484027777778`, 1.1*^11}], 
            Offset[{10., -6.499999999999997}, {2003.2484027777778`, 1.1*^11}],
             Offset[{10., 6.500000000000003}, {2003.2484027777778`, 
             1.1*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2003.2484027777778, 1.1*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1998.9166666666667`, 5.761388329773385*^10},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 61.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Afghanistan (1999-2003)\"", TraditionalForm],
  PlotRange->{{1998.9166666666667`, 2003.}, {5.761388329773385*^10, 1.1*^11}},
  
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.851436772046669*^9, 3.851436853944923*^9, 3.851438212884286*^9, 
   3.851438356741226*^9, 3.85143853629813*^9, 3.851438717717561*^9, 
   3.851438762337789*^9, 3.851443765782556*^9, 3.8623155649373293`*^9, {
   3.862765304698162*^9, 3.862765324672991*^9}, 3.862765445073575*^9, 
   3.8627655328246803`*^9, 3.8721081437967253`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"223e6a81-4a2c-4070-8dfe-5aa5a2296280"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Syria Counterfactual", "Subsubsection",
 CellChangeTimes->{{3.871155313504388*^9, 
  3.8711553176920233`*^9}},ExpressionUUID->"041d7cc2-6d27-4298-9091-\
ca701adbc11c"],

Cell["Actual wealth series (Syria)", "Text",
 CellChangeTimes->{{3.8711555163139477`*^9, 
  3.871155521182433*^9}},ExpressionUUID->"8f95c04f-6398-4a4a-bb7f-\
0fca93dfe221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"WealthSeriesInterval", "[", 
    RowBox[{"1996", ",", "2020"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"CountryID", "[", "\"\<Syrian Arab Republic\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87115543640707*^9, 3.87115544849543*^9}, {
  3.871155482879346*^9, 3.8711554840970697`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"f36e50a0-6eef-4c0e-a063-86a985866566"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.26`*^11", ",", "5.38`*^11", ",", "5.89`*^11", ",", "5.69`*^11", ",", 
   "5.85`*^11", ",", "6.35`*^11", ",", "6.81`*^11", ",", "6.98`*^11", ",", 
   "7.7`*^11", ",", "8.4`*^11", ",", "9.07`*^11", ",", "9.79`*^11", ",", 
   "1.03`*^12", ",", "1.1`*^12", ",", "1.13`*^12", ",", "1.2`*^12", ",", 
   "8.86`*^11", ",", "6.64`*^11", ",", "5.72`*^11", ",", "5.44`*^11", ",", 
   "5.3`*^11", ",", "5.25`*^11", ",", "5.37`*^11", ",", "5.5`*^11", ",", 
   "5.8`*^11"}], "}"}]], "Output",
 CellChangeTimes->{3.871155448906529*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"8843ea0b-5278-4d0f-bf3d-b66a68381cad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"{", 
    RowBox[{
    "5.26`*^11", ",", "5.38`*^11", ",", "5.89`*^11", ",", "5.69`*^11", ",", 
     "5.85`*^11", ",", "6.35`*^11", ",", "6.81`*^11", ",", "6.98`*^11", ",", 
     "7.7`*^11", ",", "8.4`*^11", ",", "9.07`*^11", ",", "9.79`*^11", ",", 
     "1.03`*^12", ",", "1.1`*^12", ",", "1.13`*^12", ",", "1.2`*^12", ",", 
     "8.86`*^11", ",", "6.64`*^11", ",", "5.72`*^11", ",", "5.44`*^11", ",", 
     "5.3`*^11", ",", "5.25`*^11", ",", "5.37`*^11", ",", "5.5`*^11", ",", 
     "5.8`*^11"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.871156228507495*^9, 3.87115623104633*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"9e0b304a-1f0c-45f7-b9d6-1929d09ad5f5"],

Cell[TextData[{
 "Counterfactual prediction, assuming no civil war. Note, this requires \
modifying the ",
 StyleBox["Interstate Wars 1995-2020 - DyadYears.csv",
  FontWeight->"Bold"],
 " file."
}], "Text",
 CellChangeTimes->{{3.871155525750411*^9, 3.871155538597362*^9}, {
   3.8711555802574043`*^9, 3.871155585783251*^9}, {3.87115577597386*^9, 
   3.871155789622169*^9}, 
   3.871156066366222*^9},ExpressionUUID->"252507c1-e00b-476f-a8cc-\
f242cc0e59c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateLawOfMotionDynamicT", "[", 
   RowBox[{"WorldPowerStructure", "[", 
    RowBox[{"1997", ",", "2020"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", 
    RowBox[{"CountryID", "[", "\"\<Syrian Arab Republic\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.871155387313596*^9, 3.871155404441462*^9}, 
   3.872106307522307*^9},ExpressionUUID->"9197afbe-d1cb-4aa4-a2f4-\
666bfc46646e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.26`*^11", ",", "5.4414953032536926`*^11", ",", "5.624978498474115`*^11", 
   ",", "5.825910383669932`*^11", ",", "6.114210548301962`*^11", ",", 
   "6.423718289921146`*^11", ",", "6.765136598683021`*^11", ",", 
   "7.123263673904281`*^11", ",", "7.477721225499418`*^11", ",", 
   "7.769642542975702`*^11", ",", "8.096418080699792`*^11", ",", 
   "8.632712592851847`*^11", ",", "9.201998424412217`*^11", ",", 
   "9.716266289654575`*^11", ",", "1.0491138823078627`*^12", ",", 
   "1.0990491881822632`*^12", ",", "1.139925267033488`*^12", ",", 
   "1.1700085899803325`*^12", ",", "1.1976989890162507`*^12", ",", 
   "1.225628885912731`*^12", ",", "1.2539226517444268`*^12", ",", 
   "1.282329436046333`*^12", ",", "1.3116367170049688`*^12", ",", 
   "1.342000723028785`*^12", ",", "1.3734263251199226`*^12"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.871156030971961*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"00a0a1f8-bf09-40f5-95e6-08a9daa2230a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"counterfactual", "=", 
   RowBox[{"{", 
    RowBox[{
    "5.26`*^11", ",", "5.4414953032536926`*^11", ",", 
     "5.624978498474115`*^11", ",", "5.825910383669932`*^11", ",", 
     "6.114210548301962`*^11", ",", "6.423718289921146`*^11", ",", 
     "6.765136598683021`*^11", ",", "7.123263673904281`*^11", ",", 
     "7.477721225499418`*^11", ",", "7.769642542975702`*^11", ",", 
     "8.096418080699792`*^11", ",", "8.632712592851847`*^11", ",", 
     "9.201998424412217`*^11", ",", "9.716266289654575`*^11", ",", 
     "1.0491138823078627`*^12", ",", "1.0990491881822632`*^12", ",", 
     "1.139925267033488`*^12", ",", "1.1700085899803325`*^12", ",", 
     "1.1976989890162507`*^12", ",", "1.225628885912731`*^12", ",", 
     "1.2539226517444268`*^12", ",", "1.282329436046333`*^12", ",", 
     "1.3116367170049688`*^12", ",", "1.342000723028785`*^12", ",", 
     "1.3734263251199226`*^12"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.871156240664879*^9, 3.871156243793515*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"8a274750-6fe7-42f8-9618-d6952202ccd9"],

Cell["Combining into a plot", "Text",
 CellChangeTimes->{{3.87115556756404*^9, 
  3.871155575362091*^9}},ExpressionUUID->"2091f923-78bc-4a92-8d7f-\
0bc972a4e6ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startYear", "=", "1996"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endYear", "=", "2020"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countryName", "=", "\"\<Syrian Arab Republic\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"startYear", ",", 
           RowBox[{"startYear", "+", 
            RowBox[{"Length", "[", "actual", "]"}], "-", "1"}]}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"counterfactual", ",", "actual"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Counterfactual\>\"", ",", "\"\<Actual\>\""}], "}"}]}], ",", 
   
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"countryName", "<>", "\"\< (\>\"", "<>", 
     RowBox[{"ToString", "[", "startYear", "]"}], "<>", "\"\<-\>\"", "<>", 
     RowBox[{"ToString", "[", "endYear", "]"}], "<>", "\"\<)\>\""}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"Range", "[", 
     RowBox[{"startYear", ",", "endYear"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8711563115726833`*^9, 3.871156332709614*^9}, {
  3.871156368910227*^9, 3.871156411683117*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"bb9dac14-6213-4b9a-92b8-557d8a27ff55"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5GGmeXFOYL7JfIdF4Vt3lq6Jh/At5jto
v7VrfB+XAOHbzHc4cb/YYskXKN9hvoP7sbcyhacTIXyX+Q6rmRewc29KgvA9
gPzO6vTsDckQvs98h81nhXfa7U6B8APmOyjv26YUdjgVwg+Z72Bv5L316pw0
CD9ivkPYfgkj3wnpEH7MfIeXSyc53pfPhPAT5jtIqAe+ZD2RBeGnzHdYsu7N
Dj33HAg/Y77D7Oobbxs78iD8nPkOOSeyvvf+yYfwC+Y7nJ+uWtw7rQDCL5nv
EHQ0U2U+WyGEXzHfgbll7+FjuVB+zXyHTd2Wpy5dhfIb5jtcYXt22dK+CMJv
me8Q8vTHUp6VUH7HfIeG83fsrcSKIfye+Q79Pq7zw9uh/AnzHQ7/S8/M/FPs
BAB5oX74
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYG8x2A5GGmeXFOYL4JmK94OSAewrcA8R0iUlQS
IXwbMD8+sT8BwncA8z9PY4PKu4D4BxLlqpMgfA+wfPaNi8kQvg+I3xDRGJAC
4QeA+UWfMtIg/BCw/bdqijIg/AiweaZrU7Mg/Bgw31+uLgfCTwDrF5f8lQvh
p4D5+y8yFkD4GWD7f00uhPJzwObrRZYVQvgFYPWPzU5mQvglYPk6/WCoeyvA
/OzdS6H+rQHzA6xXQcOnAczvnXsTGn4tYPMEZPqh/A4wP++NI1R9D8x9UPMm
gPWbhj1McAIA9E1cAA==
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.3734263251199226`*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.3734263251199226`*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.3734263251199226`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 1.3734263251199226`*^12}], 
            Offset[{0, 0}, {2020.5104166666667`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2020.7554166666669`, 1.3734263251199226`*^12}], 
            Offset[{0., 0.}, {2021.0004166666668`, 1.3734263251199226`*^12}], 
            Offset[{0, 0}, {2021.4904166666668`, 1.3734263251199226`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             1.3734263251199226`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{81., 6.500000000000018}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{81., -6.499999999999982}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., -6.499999999999998}, {2021.4904166666668`, 
             1.3734263251199226`*^12}], 
            Offset[{10., 6.500000000000002}, {2021.4904166666668`, 
             1.3734263251199226`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Counterfactual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{45.5, 1.0103029524088925*^-14}, \
{2021.4904166666668, 1.3734263251199226*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 5.8*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0, 0}, {2020.5104166666667`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2020.7554166666669`, 5.8*^11}], 
            Offset[{0., 0.}, {2021.0004166666668`, 5.8*^11}], 
            Offset[{0, 0}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}], 
            Offset[{10., 2.220446049250313*^-15}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{43., 6.50000000000001}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{43., -6.49999999999999}, {2021.4904166666668`, 5.8*^11}], 
            Offset[{10., -6.499999999999997}, {2021.4904166666668`, 5.8*^11}],
             Offset[{10., 6.500000000000003}, {2021.4904166666668`, 
             5.8*^11}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Actual\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26.5, 5.88418203051333*^-15}, \
{2021.4904166666668, 5.8*^11}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{1995.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 99.4}, {All, All}},
  ImageSize->{476.3590087890625, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Syrian Arab Republic (1996-2020)\"", TraditionalForm],
  
  PlotRange->{{1995.5, 2020.}, {0, 1.3734263251199226`*^12}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.87115641420822*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"e00a20eb-6b5c-4f22-b976-d2bee7f1310a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WW2", "Subsubsection",
 CellChangeTimes->{{3.821794996587723*^9, 
  3.8217949970912237`*^9}},ExpressionUUID->"3295ff1a-6a9b-49d0-834e-\
dd159323dc61"],

Cell["\<\
See 2022-05-28 NPNF - WW2 simulation.nb for the code for this.\
\>", "Text",
 CellChangeTimes->{{3.862781274018824*^9, 
  3.862781299732819*^9}},ExpressionUUID->"03cbcd0d-4e2a-439f-bca6-\
a41123a5165b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{{}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.10409567873338203]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11811715203463989]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.09080209104151062]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.11666700383726702]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.28200000000000003`"}, {"0.363`"}, {
                    "0.215`"}, {"0.355`"}}, ColumnAlignments -> Center, 
                    RowSpacings -> 1, ColumnAlignments -> Left], Column], 
                    "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "0", "0"}, {
                    "0", "1", "0", "0", "0"}, {"0", "0", "1", "0", "0"}, {
                    "0", "0", "0", "1", "0"}, {"0", "0", "0", "0", "1"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                    ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "0", "0"}, {
                    "0", "1", "0", "0", "0"}, {"0", "0", "1", "0", "0"}, {
                    "0", "0", "0", "1", "0"}, {"0", "0", "0", "0", "1"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                    ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.28200000000000003`, 0.363, 0.215, 
               0.355}], "T" -> 
             MatrixForm[{{1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 0, 1, 0, 0}, {
               0, 0, 0, 1, 0}, {0, 0, 0, 0, 1}}], "M" -> 
             MatrixForm[{{1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 0, 1, 0, 0}, {
               0, 0, 0, 1, 0}, {0, 0, 0, 0, 1}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1939\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "88fc5055-c978-43cf-989a-5c5960e2a60f"],
          Text[
           Style["1939", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], Dashing[{Small, Small}], 
                LineBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}]}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.09644084388375446]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11759121006904504]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.08869083676376292]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.11099894787990648]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.242`"}, {"0.36`"}, {
                    "0.20500000000000002`"}, {"0.321`"}}, ColumnAlignments -> 
                    Center, RowSpacings -> 1, ColumnAlignments -> Left], 
                    Column], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1.`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "1.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.`", "1.`", "0.`"}, {"0.`", 
                    RowBox[{"-", "0.02`"}], "0.`", "0.`", "1.`"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                    ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", 
                    RowBox[{"-", "1"}], "0", "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.242, 0.36, 0.20500000000000002`, 0.321}],
              "T" -> MatrixForm[{{1., 0., 0., 0., 0.}, {0., 0.98, 0., 0., 
               0.}, {0., 0., 1., 0., 0.}, {0., 0., 0., 1., 0.}, {0., -0.02, 
               0., 0., 1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {
               0, 0, 0, 0, 0}, {0, -1, 0, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1940\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "0fd5e883-0d1b-4af9-8b45-402080a6a187"],
          Text[
           Style["1940", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.090475400208508]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.1150018833202541]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.08530546641459083]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.10210448453386053]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.213`"}, {"0.34500000000000003`"}, {
                    "0.19`"}, {"0.272`"}}, ColumnAlignments -> Center, 
                    RowSpacings -> 1, ColumnAlignments -> Left], Column], 
                    "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1.`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.98`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.`", "1.`", "0.`"}, {"0.`", 
                    RowBox[{"-", "0.02`"}], 
                    RowBox[{"-", "0.02`"}], "0.`", "1.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.213, 0.34500000000000003`, 0.19, 0.272}],
              "T" -> 
             MatrixForm[{{1., 0., 0., 0., 0.}, {0., 0.98, 0., 0., 0.}, {0., 
               0., 0.98, 0., 0.}, {0., 0., 0., 1., 0.}, {0., -0.02, -0.02, 0.,
                1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {
               0, 0, 0, 0, 0}, {0, -1, -1, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1941\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "324fbd57-76e4-48f3-a88e-90e7dfb2fad6"],
          Text[
           Style["1941", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.08517110166404558]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11219096955699508]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.06878991040131753]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.09498728838565997]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.189`"}, {"0.328`"}, {"0.123`"}, {
                    "0.23500000000000001`"}}, ColumnAlignments -> Center, 
                    RowSpacings -> 1, ColumnAlignments -> Left], Column], 
                    "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0.98`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.98`", "0.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], "0.`", "1.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.02`"}], "0.`", "1.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.189, 0.328, 0.123, 
               0.23500000000000001`}], "T" -> 
             MatrixForm[{{0.98, 0., 0., 0., 0.}, {0., 0.98, 0., 0., 0.}, {0., 
               0., 0.98, 0., 0.}, {-0.01, -0.01, 0., 1., 
               0.}, {-0.01, -0.01, -0.02, 0., 1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 
               0}, {-1, -1, 0, 0, 0}, {-1, -1, -1, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1942\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "2f2aca51-bc99-49bb-aec9-fc45ccbbcb06"],
          Text[
           Style["1942", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.08263116121140865]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11134298649374387]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.05381646999577748]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.08177833566901026]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.178`"}, {"0.323`"}, {"0.075`"}, {
                    "0.17400000000000002`"}}, ColumnAlignments -> Center, 
                    RowSpacings -> 1, ColumnAlignments -> Left], Column], 
                    "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{"0.98`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.98`", "0.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], "0.`", "1.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.02`"}], "0.`", "1.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.178, 0.323, 0.075, 
               0.17400000000000002`}], "T" -> 
             MatrixForm[{{0.98, 0., 0., 0., 0.}, {0., 0.98, 0., 0., 0.}, {0., 
               0., 0.98, 0., 0.}, {-0.01, -0.01, 0., 1., 
               0.}, {-0.01, -0.01, -0.02, 0., 1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 
               0}, {-1, -1, 0, 0, 0}, {-1, -1, -1, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1943\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "04b2d4c4-826f-4a27-849d-fc9b1687174d"],
          Text[
           Style["1943", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.08105437309947135]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11085595178183849]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.031135107416199258]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.06448435519575872]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.171`"}, {"0.32`"}, {"0.025`"}, {
                    "0.108`"}}, ColumnAlignments -> Center, RowSpacings -> 1, 
                    ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0.98`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "0.98`", "0.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], "0.`", "1.`", "0.`"}, {
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.01`"}], 
                    RowBox[{"-", "0.02`"}], "0.`", "1.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0", "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.171, 0.32, 0.025, 0.108}], "T" -> 
             MatrixForm[{{0.98, 0., 0., 0., 0.}, {0., 0.98, 0., 0., 0.}, {0., 
               0., 0.98, 0., 0.}, {-0.01, -0.01, 0., 1., 
               0.}, {-0.01, -0.01, -0.02, 0., 1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 
               0}, {-1, -1, 0, 0, 0}, {-1, -1, -1, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1944\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "d6f7af52-71f1-4c10-b12c-b35f49ff6801"],
          Text[
           Style["1944", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{
               {GrayLevel[0], Opacity[0.7], 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}, 
                {Dashing[{Small, Small}], 
                 LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                   DynamicLocation["VertexID$4", Automatic, Center]}]}}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.08056540361594453]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11078143140115156]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.0058778525229247315]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.0514175456956264]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.169`"}, {"0.32`"}, {"0.`"}, {
                    "0.069`"}}, ColumnAlignments -> Center, RowSpacings -> 1, 
                    ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0.98`", "0.`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.98`", "0.`", "0.`", "0.`"}, {
                    "0.`", "0.`", "1.`", 
                    RowBox[{"-", "0.02`"}], "0.`"}, {
                    RowBox[{"-", "0.02`"}], 
                    RowBox[{"-", "0.02`"}], "0.`", "0.98`", "0.`"}, {
                    "0.`", "0.`", "0.`", "0.`", "1.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}, {"0", "0", "0", 
                    RowBox[{"-", "1"}], "0"}, {
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}], "0", "0", "0"}, {
                    "0", "0", "0", "0", "0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.169, 0.32, 0., 0.069}], "T" -> 
             MatrixForm[{{0.98, 0., 0., 0., 0.}, {0., 0.98, 0., 0., 0.}, {0., 
               0., 1., -0.02, 0.}, {-0.02, -0.02, 0., 0.98, 0.}, {0., 0., 0., 
               0., 1.}}], "M" -> 
             MatrixForm[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, -1, 
               0}, {-1, -1, 0, 0, 0}, {0, 0, 0, 0, 0}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1945\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "922f70be-f5d2-41d6-988d-08965c8488f0"],
          Text[
           Style["1945", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         FrameBox[
          TagBox[
           TooltipBox[
            GraphicsBox[
             NamespaceBox[{{}, 
               {GrayLevel[0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], DiskBox[{-1., 0.}, 0.19592841743082437]},
                   "DynamicName",
                   BoxID -> "VertexID$1"], InsetBox[
                   StyleBox["\<\"USA\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, 0.9510565162951535}, 
                    0.08056540361594453]},
                   "DynamicName",
                   BoxID -> "VertexID$2"], InsetBox[
                   StyleBox["\<\"UKG\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, 0.5877852522924731}, 
                    0.11078143140115156]},
                   "DynamicName",
                   BoxID -> "VertexID$3"], InsetBox[
                   StyleBox["\<\"RUS\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{0.8090169943749475, -0.5877852522924731}, 
                    0.0058778525229247315]},
                   "DynamicName",
                   BoxID -> "VertexID$4"], InsetBox[
                   StyleBox["\<\"JPN\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   {GrayLevel[0.5], 
                    DiskBox[{-0.30901699437494745, -0.9510565162951535}, 
                    0.0514175456956264]},
                   "DynamicName",
                   BoxID -> "VertexID$5"], InsetBox[
                   StyleBox["\<\"GMY\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontColor->GrayLevel[0]], 
                   Offset[{2, 2}, DynamicLocation[
                    "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                   BaseStyle->"Graphics"]},
                 "DynamicName",
                 BoxID -> "VertexLabelID$5"]}}],
             Background->None,
             BaseStyle->GrayLevel[0],
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->{125, 125}],
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"s\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    TagBox[
                    
                    GridBox[{{"1.`"}, {"0.169`"}, {"0.32`"}, {"0.`"}, {
                    "0.069`"}}, ColumnAlignments -> Center, RowSpacings -> 1, 
                    ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"T\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "0", "0"}, {
                    "0", "1", "0", "0", "0"}, {"0", "0", "1", "0", "0"}, {
                    "0", "0", "0", "1", "0"}, {"0", "0", "0", "0", "1"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                    ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], ",", 
                RowBox[{"\"M\"", "\[Rule]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "0", "0"}, {
                    "0", "1", "0", "0", "0"}, {"0", "0", "1", "0", "0"}, {
                    "0", "0", "0", "1", "0"}, {"0", "0", "0", "0", "1"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                    ")"}], 
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]],
           Annotation[#, 
            Association[
            "s" -> MatrixForm[{1., 0.169, 0.32, 0., 0.069}], "T" -> 
             MatrixForm[{{1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 0, 1, 0, 0}, {
               0, 0, 0, 1, 0}, {0, 0, 0, 0, 1}}], "M" -> 
             MatrixForm[{{1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 0, 1, 0, 0}, {
               0, 0, 0, 1, 0}, {0, 0, 0, 0, 1}}]], "Tooltip"]& ],
          StripOnInput->False]},
        {
         InterpretationBox[Cell[BoxData[
           FormBox[
            StyleBox["\<\"1946\"\>",
             StripOnInput->False,
             FontFamily->"Source Serif Pro",
             FontSize->11], TextForm]], "InlineText",ExpressionUUID->
           "1c591c30-5adf-4f42-b37b-7fa979dfc97e"],
          Text[
           Style["1946", 11, FontFamily -> "Source Serif Pro"]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {Center}, "Rows" -> {Center}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0.75}}}],
      "Column"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.811287772054998*^9, 3.8112879015078382`*^9, 3.811287933104889*^9, 
   3.811287980242897*^9, 3.811288042122241*^9, {3.811326956433032*^9, 
   3.811326977382626*^9}, {3.811327168569813*^9, 3.81132719399397*^9}, 
   3.811327238845893*^9, 3.811327274091333*^9, 3.811327330009562*^9, 
   3.811327363003874*^9, {3.811327411406598*^9, 3.811327423741847*^9}, 
   3.811327496057144*^9, {3.811327555741106*^9, 3.8113275625542088`*^9}, 
   3.811327671301919*^9, {3.811327828002201*^9, 3.8113278565764217`*^9}, 
   3.8113279672778482`*^9, 3.8113280463576107`*^9, 3.811328115704937*^9, 
   3.811328208570112*^9, {3.8113294423320637`*^9, 3.811329459510161*^9}, 
   3.8113295247013893`*^9, 3.811329695775543*^9, 3.811329871374282*^9, 
   3.811329940119111*^9, {3.811329995394746*^9, 3.811330012261662*^9}, 
   3.811330054783798*^9, 3.811330108457553*^9, 3.811330157310667*^9, 
   3.8113302790907907`*^9, 3.811330371471513*^9, 3.8124841067184753`*^9, {
   3.8124842877327623`*^9, 3.812484314364581*^9}, 3.812484462316222*^9, 
   3.812484495547689*^9, 3.812484562780781*^9, 3.812484598582962*^9, 
   3.8124847498088293`*^9, 3.812484865674965*^9, 3.8124849395152283`*^9, {
   3.812485007568674*^9, 3.812485018767089*^9}, 3.8124850982122707`*^9, 
   3.812485172540276*^9, 3.812485216867134*^9, {3.8124852911640177`*^9, 
   3.8124853171158543`*^9}, 3.812485410385562*^9, 3.8124885613591223`*^9, 
   3.812488809847355*^9, 3.812488947604928*^9, 3.8140974417113323`*^9, 
   3.814097502482366*^9, {3.81409756065207*^9, 3.8140976147644253`*^9}, {
   3.81409764876298*^9, 3.814097712396472*^9}, {3.8627800983183537`*^9, 
   3.862780122139307*^9}, 3.8627802880743847`*^9, 3.8627803449655046`*^9, 
   3.862780399561531*^9, 3.862780451548118*^9, 3.862780559587658*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"0b1f5f94-0333-4de7-94bc-5273976d0c4f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Russo-Ukranian War", "Subsubsection",
 CellChangeTimes->{{3.871211713329444*^9, 
  3.871211716757792*^9}},ExpressionUUID->"b9bc3500-7947-4f1b-9d64-\
e00cdddd4d2f"],

Cell[TextData[StyleBox["Wealth as of 2020",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.871211920718565*^9, 3.871211928529416*^9}, {
  3.871212022267153*^9, 
  3.871212023636272*^9}},ExpressionUUID->"633bf066-041c-4c8f-bbfd-\
11c2d60cceb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.871211932607383*^9, 3.871211959490703*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"9c76a3f0-9747-48f3-824c-cdb7b073a5f7"],

Cell[BoxData["1.26`*^13"], "Output",
 CellChangeTimes->{{3.8712119385492697`*^9, 3.87121195990884*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"1808113f-ed39-4ca8-9731-c93ad3f6c399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8712119661177588`*^9, 3.871211967194199*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"fd72c79a-0aaf-4f95-945b-2cf3d3ea1c95"],

Cell[BoxData["2.68`*^12"], "Output",
 CellChangeTimes->{3.8712119676973553`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"f78e9302-623b-438f-8c2a-d0dfd13fb4e3"]
}, Open  ]],

Cell[TextData[StyleBox["Trade volume (2020)",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.871212959853294*^9, 
  3.871212981909926*^9}},ExpressionUUID->"cc1d476a-47de-4c63-b5b4-\
363a96fd9c32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8712129674938717`*^9, 3.871212978172688*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f00e214f-05e3-4b8f-b3b1-d808d3d59472"],

Cell[BoxData["5.93516201166`*^11"], "Output",
 CellChangeTimes->{{3.871212973129881*^9, 3.8712129786738663`*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"28c285b1-3fe3-4195-ad04-36df7a55784a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8712129921344433`*^9, 3.871212992769947*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"bbb347c1-cd3c-4e23-8ea2-dd5bd53d8ed6"],

Cell[BoxData["1.07574187563`*^11"], "Output",
 CellChangeTimes->{3.8712129930450697`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"a54acac2-233d-4f20-875a-1c003474ce32"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Russian military expenditure on Ukraine:",
  FontWeight->"Bold"],
 " assume roughly $300M/day. \
https://www.themoscowtimes.com/2022/05/18/russian-defense-spending-surges-to-\
300m-per-day-amid-ukraine-war-a77712"
}], "Text",
 CellChangeTimes->{{3.871212119857342*^9, 3.87121213052496*^9}, {
   3.8712131503217773`*^9, 3.8712131756335506`*^9}, 
   3.8712134097950983`*^9},ExpressionUUID->"fb9d6c77-dc63-4359-871c-\
cbedd45d2c4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"300000000", "*", "365"}]], "Input",
 CellChangeTimes->{{3.871221542778068*^9, 3.871221547979224*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"10b75731-afb9-4af9-a284-2a670cbf27c5"],

Cell[BoxData["109500000000"], "Output",
 CellChangeTimes->{3.871221549335225*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"94da9ecf-acd3-4663-895f-a6964eebeeb0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Ukraine\[CloseCurlyQuote]s military expenditure on Russia:",
  FontWeight->"Bold"],
 " $8.3 billion from Feb-May. \
https://www.reuters.com/world/europe/exclusive-war-forces-ukraine-divert-83-\
bln-military-spending-tax-revenue-drops-2022-05-12/"
}], "Text",
 CellChangeTimes->{{3.8712121332255287`*^9, 3.87121214184403*^9}, {
  3.871213260735145*^9, 3.871213272573803*^9}, {3.871213429792034*^9, 
  3.871213430425338*^9}},ExpressionUUID->"34be6bad-2a46-4acc-94b5-\
cb47ce581ab9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8300000000", "*", 
  RowBox[{"(", 
   RowBox[{"12", "/", "4"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.871221565954933*^9, 3.8712215928874617`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"68857a3d-96ec-4e16-a62f-10b3a4b20476"],

Cell[BoxData["24900000000"], "Output",
 CellChangeTimes->{3.871221593519513*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"25ab68b4-07d5-46e7-8920-ac157cab85da"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Western support for Ukraine (Feb-Aug 2022):",
  FontWeight->"Bold"],
 " Ukraine has received more than $12 billion worth of weapons and financial \
aid from Western countries since the start of Russia\[CloseCurlyQuote]s \
invasion, as of May 5. \
https://www.reuters.com/world/europe/ukraine-gets-over-12-billion-weapons-\
financial-aid-since-start-russian-invasion-2022-05-05/"
}], "Text",
 CellChangeTimes->{{3.871212038794339*^9, 3.871212056922604*^9}, {
  3.871213345397087*^9, 
  3.871213405074419*^9}},ExpressionUUID->"a8f8ae2f-0db0-4104-ab3c-\
4e87b25bcd76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"12000000000.", "*", 
  RowBox[{"(", 
   RowBox[{"12", "/", "7"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.871221636916375*^9, 3.871221659465735*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"58e6e943-9188-4bf2-9778-29474701f6e2"],

Cell[BoxData["2.057142857142857`*^10"], "Output",
 CellChangeTimes->{{3.871221654357759*^9, 3.871221660057187*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"fedb4382-d8d9-4b59-bca3-66e77231d61d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Western trade reductions with Russia (2022):",
  FontWeight->"Bold"],
 " Assume trade volume is reduced by 20%."
}], "Text",
 CellChangeTimes->{{3.8712120629636297`*^9, 3.871212084151284*^9}, {
   3.871221764235016*^9, 3.871221784107629*^9}, 
   3.871225311220057*^9},ExpressionUUID->"93f01889-db63-4b52-b209-\
c43ec0e9be95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}], "*", 
  "0.8"}]], "Input",
 CellChangeTimes->{{3.871221792462047*^9, 3.871221794617106*^9}, 
   3.871225308276721*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"2e2b83f6-1c57-4629-bef2-e5b0d4371e65"],

Cell[BoxData["4.7481296093280005`*^11"], "Output",
 CellChangeTimes->{3.871221795102248*^9, 3.871225313390087*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"d25ad421-ef5b-4a62-b900-4e7bd70bcb73"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Russia\[CloseCurlyQuote]s wealth after a year of war. ",
  FontWeight->"Bold"],
 "Assume that half of military expenditure is applied violence."
}], "Text",
 CellChangeTimes->{{3.871221820556945*^9, 3.87122183586893*^9}, {
  3.871225237558641*^9, 
  3.871225238059669*^9}},ExpressionUUID->"1ac77575-24ab-4ecc-8f6a-\
bd700a1ce5ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rus2023", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Lambda]", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}], 
        "*", "0.8"}], "-", "109500000000"}], ")"}]}], ")"}], "-", 
   "109500000000", "-", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", " ", "24900000000", "*", "0.5"}], ")"}], "+", " ", 
   RowBox[{"(", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{
      RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}], "*", 
     "0.8"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.871224432731121*^9, 3.871224462720215*^9}, {
  3.871224506753375*^9, 3.871224598005948*^9}, {3.871224669077745*^9, 
  3.871224670926504*^9}, {3.87122494139872*^9, 3.87122494314508*^9}, {
  3.871225031235201*^9, 3.871225044701462*^9}, {3.871225245827756*^9, 
  3.871225247615787*^9}, {3.871225393173962*^9, 3.871225399496952*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"77548d2d-bac2-4ac0-965b-3d51cf91f18c"],

Cell[BoxData["1.2494018856662336`*^13"], "Output",
 CellChangeTimes->{3.8712245579138317`*^9, 3.87122459862854*^9, 
  3.871224944527452*^9, 3.871225045599288*^9, 3.8712252479196568`*^9, 
  3.871225400381832*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"767a85ff-bfa5-42c6-9f3b-11cf6172b51c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Ukraine\[CloseCurlyQuote]s wealth after a year of war. ",
  FontWeight->"Bold"],
 "Assuming Ukraine\[CloseCurlyQuote]s trade volume drops by 50%. Assume that \
half of military expenditure is applied violence."
}], "Text",
 CellChangeTimes->{{3.871221820556945*^9, 3.8712218450675573`*^9}, {
  3.8712247206760473`*^9, 3.8712247345008717`*^9}, {3.871224815493836*^9, 
  3.871224829940084*^9}},ExpressionUUID->"a123079f-a0e8-4d18-90f4-\
41ce2bd05346"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ukr2023", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}], 
       "-", 
       RowBox[{
        RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}], 
       "-", "24900000000"}], ")"}]}], ")"}], "-", "24900000000", "-", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", " ", "109500000000", "*", "0.5"}], ")"}], "+", " ", 
   RowBox[{"(", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{
      RowBox[{"TradeVector", "[", "2020", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}], "*", 
     "0.5"}], ")"}], "+", "2.057142857142857`*^10"}]}]], "Input",
 CellChangeTimes->{{3.871224432731121*^9, 3.871224462720215*^9}, {
  3.871224506753375*^9, 3.871224598005948*^9}, {3.871224669077745*^9, 
  3.871224670926504*^9}, {3.871224738848345*^9, 3.871224770924478*^9}, {
  3.871224806953958*^9, 3.871224811643128*^9}, {3.871224948902166*^9, 
  3.8712249517544127`*^9}, {3.8712251752967777`*^9, 3.871225175596747*^9}, {
  3.871225267212987*^9, 3.871225284160557*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"52c4eae4-8cf2-455b-8087-3375d6fdb26c"],

Cell[BoxData["1.0392570208632014`*^12"], "Output",
 CellChangeTimes->{3.871224771292959*^9, 3.8712248121948643`*^9, 
  3.871224952342752*^9, 3.871225176093781*^9, 3.8712252847424507`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"1cc11db4-0725-4397-9846-d95a28f16300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ukr2023", "/", 
  RowBox[{
   RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.871231242945199*^9, 3.87123125918207*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"80d241aa-38b4-4594-8db2-9b7ffb2cd81a"],

Cell[BoxData["0.38778247047134384`"], "Output",
 CellChangeTimes->{{3.871231243438896*^9, 3.8712312596442947`*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"056cebc9-4d87-4f2c-82eb-59bc7f700a29"]
}, Open  ]],

Cell[TextData[StyleBox["Plot of the results",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.871224603354377*^9, 
  3.871224606760078*^9}},ExpressionUUID->"6a0087e9-35e0-4607-850e-\
420be02f35e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startYear", "=", "2022"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endYear", "=", "2023"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"startYear", ",", 
           RowBox[{"startYear", "+", 
            RowBox[{"Length", "[", "rus", "]"}], "-", "1"}]}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"CountryID", "[", "\"\<Russia\>\"", "]"}], "]"}], "]"}], 
         ",", "rus2023"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"WealthVector", "[", "2020", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"CountryID", "[", "\"\<Ukraine\>\"", "]"}], "]"}], "]"}], 
         ",", "ukr2023"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Russia\>\"", ",", "\"\<Ukraine\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"Range", "[", 
     RowBox[{"startYear", ",", "endYear"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8711563115726833`*^9, 3.871156332709614*^9}, {
  3.871156368910227*^9, 3.871156411683117*^9}, {3.871224623352392*^9, 
  3.871224631166778*^9}, {3.871224842324731*^9, 3.8712249240176983`*^9}, {
  3.871224976836031*^9, 3.871224984851541*^9}, {3.8712250922778597`*^9, 
  3.871225108285407*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"85dbcf6b-162c-41ec-8527-e5596eca0920"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{2022., 1.26*^13}, {2023., 1.2494018856662336`*^13}, {2023., 
      1.2494018856662336`*^13}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{2022., 2.68*^12}, {2023., 1.0392570208632014`*^12}, {2023., 
      1.0392570208632014`*^12}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2023.021267361111, 1.2494018856662336`*^13}], 
            Offset[{0, 0}, {2023.021267361111, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0416840277778`, 1.2494018856662336`*^13}], 
            Offset[{0, 0}, {2023.0621006944443`, 1.2494018856662336`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2023.021267361111, 1.2494018856662336`*^13}], 
            Offset[{0, 0}, {2023.021267361111, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.2494018856662336`*^13}], 
            Offset[{0., 0.}, {2023.0416840277778`, 1.2494018856662336`*^13}], 
            Offset[{0, 0}, {2023.0621006944443`, 1.2494018856662336`*^13}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.2494018856662336`*^13}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{46., 6.50000000000001}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{46., -6.49999999999999}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., -6.499999999999997}, {2023.0621006944443`, 
             1.2494018856662336`*^13}], 
            Offset[{10., 6.500000000000003}, {2023.0621006944443`, 
             1.2494018856662336`*^13}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Russia\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{28., 6.217248937900877*^-15}, \
{2023.0621006944443, 1.2494018856662336*^13}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2023.021267361111, 1.0392570208632014`*^12}], 
            Offset[{0, 0}, {2023.021267361111, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0416840277778`, 1.0392570208632014`*^12}], 
            Offset[{0, 0}, {2023.0621006944443`, 1.0392570208632014`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2023.021267361111, 1.0392570208632014`*^12}], 
            Offset[{0, 0}, {2023.021267361111, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0314756944445`, 1.0392570208632014`*^12}], 
            Offset[{0., 0.}, {2023.0416840277778`, 1.0392570208632014`*^12}], 
            Offset[{0, 0}, {2023.0621006944443`, 1.0392570208632014`*^12}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., 2.220446049250313*^-15}, {2023.0621006944443`, 
             1.0392570208632014`*^12}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 6.500000000000011}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{50., -6.499999999999989}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., -6.499999999999998}, {2023.0621006944443`, 
             1.0392570208632014`*^12}], 
            Offset[{10., 6.500000000000002}, {2023.0621006944443`, 
             1.0392570208632014`*^12}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Ukraine\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{2023.0621006944443, 1.0392570208632014*^12}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2021.9791666666667`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 68.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{2021.9791666666667`, 2023.}, {0, 1.26*^13}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.871224631989768*^9, {3.8712248530287113`*^9, 3.871224924539783*^9}, 
   3.871224985689753*^9, 3.871225049172188*^9, 3.871225178349608*^9, 
   3.871225250250792*^9, 3.871225286767358*^9, 3.871225402362403*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"0106c30f-4aef-4993-9e42-b7c353e94c3d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["World Power Structure Matrix", "Subsubsection",
 CellChangeTimes->{{3.862912455061948*^9, 
  3.862912460538373*^9}},ExpressionUUID->"e88a2b09-3128-4c4f-aead-\
b46b61107269"],

Cell["Produces a matrix of the WPS for a given year.", "Text",
 CellChangeTimes->{{3.8721103725595207`*^9, 
  3.872110384192885*^9}},ExpressionUUID->"61bd246a-6152-4910-b383-\
d77d00cae898"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WPSMatrix", "[", "year_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", " ", 
     RowBox[{"Tpos", "[", "year", "]"}]}], "-", 
    RowBox[{"\[Mu]", " ", 
     RowBox[{"Tneg", "[", "year", "]"}]}], "+", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"Tzed", "[", "year", "]"}]}]}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8629119373152*^9, 3.8629119691193132`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1c3b7614-6de8-42af-acc4-5d28ab1d547a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{
   RowBox[{"WPSMatrix", "[", "2020", "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8629119712107487`*^9, 3.862911978420752*^9}, {
  3.86291241265273*^9, 3.8629124220087013`*^9}, {3.862913913740387*^9, 
  3.862913913923036*^9}},
 CellLabel->
  "In[1038]:=",ExpressionUUID->"8ff77263-e5be-4fb8-b272-54945b6bd8a3"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
79nYsGpmfAu7C27RfTw/kkM7Y8O08JcNvcq3Dh3R3Qg68SntrinR7Tu7Sj4k
s1HWfSOy4FgX3uW9Kcn04ePwrglm3FQ+gupbkuQkuLg1ccLu3X0efIc7HVbm
c2DLGbpTE9gL9Q8b/gS/Ino1Tb6cJsOFSH3fVU+vPphc3WJbEUrBXnSzYLMB
A4P5czdt/VyDdg2B1cN5PFy1yVBYps6F6PDlBy9f//v7L7sG/upGp/JAlyvR
3vKTA4laT/U3Un2Y3rbkZKwmH59PRbLKRynEWu2otjjIgnQiLa7kAoWFojUJ
elIMnOG3lZ0dpIGVsjHmK+nPWqNPs46R/hxWV3Rq/k2Hwa3SeRuvUVCTuB/t
YcGAl4LW5AC3BlO6rbScpPmoOeJ02yaCAjNb4vRs3f+d25OyQ+3+y0u3xMbZ
6bI83J1d5en6nIVei0qJxeS8pYECkfv3MxC9XGG93t8aLL9CX3t3Bw+ut0ec
4j3ZiFKJL1Y43gnJoqoL/AA+3FQau6+THLptr9kFUZJDXcsvuhmc48NnWGT+
l188GIa4rnrzg4PfG3R7qC88TDcb/BhlzUXwS9qiS8v68ZB72OwO4Qevl4s2
/SX8sFXqHFU7owdJq/wcmCwexi67qZn0c7HBYCxjIIJO+njbIJNwrZ30dePR
Zi4u7w9vPn+aDotf15r9SD+0mxhVqeVxgBGRFOPL/55rh3k6XBlPPtoG5u/2
5fOgP7pupWIbB5TZLNXFhHva+Anzfm8mubyNO+/MLDbsXSID1dp5kGvQOaCT
w8VEDHWNKf7v+1cuXgXatYt4COnnxq2isbBsxvnirTltGJORWaHG4EGJtzJs
aisXq+lb36t60HFqvcfcZdP5aJRWeC7pQMF5qdDDrFIG+jtbj5hF8JDI1b/q
EcKBkUw+/ftED8JvTrlhRHJ0Rk1PrfJzDjSF5RXFDvbib99Egdpfkk81Eo2c
lCn01l47HLeNAVPZ4qXihKdbJmMr3pJ9695Sm6hq82++kjnl8cWD5Ocohzmd
grqEZ1eoBkQS3fJ29XKYupNwiVMEBH3ZSDqrIbsmqBPbbCRHb5E6mmXlP80d
4UJeQtU7uYiOm0rW+lsu8bFv/23luHkkJ+2frfDB4H/n7cucA2fME3lw/lj4
l9bAwY8LuwYPVvZiIvbmrJwmHoTs89T2JnHR6h6xvq+vHwNH628In+VjrNhs
9uRPHj4L7isw7edgIzfDPO8pD4UPd8tN8Dh4zsly15v573n3Y4lP8Tfh4+4J
ZTvNwzzIZ4hcOu/5v9+nner4dfidMh/OoRfXG7VQcFw8N0NDjIUOTpe4nDEf
eeHJG4Ucefjjx50/5Sgbd5YrXBz4zYOCY3TUysWEuwfkc6rkGGDEBgrcWkWO
s4p5qT+TjTjGfPH0hHZcuz6Ft7WQh7THBhN9+lz4Pdv30H+wD0etaMtUcngo
15XWFV3MhZSo0dxHIeR6zWI7jkTz8Gm2+7vRZA4eJ0+E2Jj0IvaImnZcPoVx
7V93dy9hwlDtecCH6f/788r+f/2dsbbWgHOH5OqI6z5v0jlY9MNVR8/+33Od
xnQv+Y9XPqtXO+/o4mK3etL6Bv9/z+nMh7+SGTwKxzY5XxqdwkJb8LiodmQz
eFcW93Yv5WGFboFxWAcLtj4FafWsf3+P3slLbTSQ+Glzy4t7766TOf2ccctf
qhctp+XyRolvyvtxzrIFOEiwV4u+n9SNdT/ubDjGpPBxarj8TQbzv+c9i59d
3Pw/1+dYZMaBQ7P4kF17/paKG4Wtq0xqrw0ysMV+XvSPMQpvd/PffdBjAXE7
lvTeaEFTXkDg8Zdk309sXRxLfDRwZFr5xZN9mKJd0T2rnIdkvebBQE/ir19s
824c+/f3lE0wMOOODB+aha3R7JsUNiY/4rCNmehMr7SuvEV4O7T6hUocBysV
2VJN63qxSmtqTLQlD6E6wx/ictlQz25/2V7ahQTPQ5dPE26PFYsX6CHc7uAk
pze47//IC+f6r3j5ULhVOM3wuCADpcnZ5vppNLANjvL+3OaDn6Nb8taF1CMa
jjZLKJgurNzzkMzV5YVnxsM62GB9vXT13q7//b7Qv/6W6+8Tyg7kw5chf+Uc
me9FEgIros9y8WCfleCaCrLvms/0yr0JV7wc3Jft0Q9Rq9dSyRwKMY5lTXlD
TFy3m7i0wrIZlYWt+0/fp9Dhdlbm/i2i+wK86Ue6//fPUyk3FnY3URSWv+o/
YjPBhMhVrUbh882QFrcqNVQhHL9spqKnOBsLDv69oZDRjv4ijZT8XAqhFZ+S
xGWY2PatKOwQux6RovEdqd94sJTYEeblwgVjcXCwiGk/eoIX26kk8kGXOi/w
3/dflZ0Xuc0hOeyFf2wErfE7XDy3dixY24bLlidc3I6t+ec6hSe/JrraE/5o
mxmHBjbkL5iJTNPsRoTo3cFrm4k/1bytdZAj7z+afFr8y79zzevO8Pwgosu8
ldsUZ/9g42OR0YJP3t0IiA3s+qjAR1Ov8M0tZaSum2OOT+tjwrmqbMNMioep
UdZX1H9wMfZD3KPlGR2end+q5jsQjjWfO1HZxMa3WrkVGRu6YWHLajpRTGGf
dQiXa8bEmRVzu+vqGxAxmfBAhUt4O0qouJPi4sSJo2Ubk+i4F37OSLSf5EHV
h961TUz8GFUq9O1rwqyA2fd1BPlwvH9o9pZtFKJcxjkSFxj42pPt0ENyU3GT
zOkuQzZeuxUe7rjbgTvSaWULCW+ozWfFD2VzIRi37pY64Q3ueTdPr/M8RAjK
n/2kz0Fn/dQJvQM94N16qnJ1H+HPF+Y24348mB4qqS7KZGPswpzDs57zkGSp
OsV+ggO9cBvDFq0+qBdOn2pAfPBR36YCS4qD+uqQ60PT+nDA+bFHTxQPkht2
CuIR4SGWUMMZ9CJrT3XfJXJdyo3tUi0tTFzweRXszm2C4673U3as4cHT+lGh
mgIbI/ki/Y+mdCAtQpxWTDhf5lGWqs0YGzqL1x56f68bH5UOdHK2EI7aKaKs
4cDGMZV+bvafDiyyi1Ufa+AB8R+n1zzgYlquWP1kbT8sroyqLiN5pwoPNsTM
4WCzb5HF4Yp/z6+8wcDXge8UPA364/gzWFhXJqbt9qIZS2KP35tnzMPX/Z9N
Iu6xcU/mprrU8n9/v2NxaK2KSAeF5F8dwavzmXg8fc1TvksTdlrRe48SvmqT
zzy/bhWFbaZSxl90GWD7eu9PuspDN6fh4JezHCxXNjv6g9aDwJqT1kOkD9ds
UJsjUE7hyeBuc0E6E7P5WU5RRKeGLlRE7yZ5q+g17bfbVQ7GXlZkrb/Nw8jH
8+YXEzjgvL5Q+Vy3F8rt76s3n+Fhs1Lca6tFHCz8Y+/1g9MNlVtD8TYkZ8V7
CTnv/cCGWQejIJ/qwjP13reHSJ+k3rJ440f6RJ5qHouw/vd9oaMJ7qIW10n/
qNxYdMiSj6kHBtmNDC40R42KP01S+O0iGzvHjIWSu6rpVh9bwJD82HjvIOGx
1XYmAnQ2DO7JnhKw7cZ1/y0T9WY87D58Ms09jY1wV3E11cv/rnOrqPj3VJIv
ZjelKvUTrhJ3tvp750Qn7i4qGR+eykN2c9pMz0MstIavy3si2oq9fN2OFJI3
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
rc242uD7nkXyfhsrVtTGm40551cdLb/Vgd6Xm+S15Shk/Qk8/fRSHyInL/qj
71mEi4KLwwJJX3Psl1mI7mVi/WW9xntF9chbXDUvpJv045rb37+WMRGQ3CWc
+roRA2//nI0kvH15UozDOnk2EiU+3ev/0QZqXFonUpwH35ydWp9JHh1WDrl/
cwkTV1a4f7ZKoZG+am+W1wAH8lveIVe8F+90p74ze00jzPRNXPMqLhhulp8/
POvF+KMnvN0kt9o5DwpFyLAwsLJ+mwCnCUs3Hkja+IxG78rwlqPCXGiKLXWe
f7AXB/L+7F+0n0bFkImnaTob4m885r+804nZtg/HH7+nsXmN4aOK/VxU/+4J
kJrTB129VdP3EO79m33tszDhXjO9D697v1RD1ln++3cJGuLrtOptH7NQvtZk
z6d5reAX+pY0dItGjWp3Q3MqB6FjlzQTzHuw7Mfzg3xkX3JPneK4CbCx+Pfj
2sorbdixPM0+iPz9ZJ1edCHZr9kPe4R7r7fBTCGkzamR5Ivf9oM7HnDRJjW2
d013H7Yvt5k5X4+Gv77W3/NBbEx6s3k8u64DlZ1p51YZ0TCevK/rezIb5XP4
/Dad7kTQgPNqAQ8aZweH+X9u4ABDJeMxSt14lHzO46oOjYJZLs+CL7NxUfJX
e1lWBxKKdCRaSa4ZL/aRaYxlwWR6bagrowWShXv2elnReGby3PRzFxttF2V/
Chl24ev9lGrmUhontgeVJk5iY3/elrR+tzYUhBSrC4vS2Np68XXADRYcfq6o
48tugcj6+bqWZYRP1nlYmrkykf/mc7a/fgMKLSZt7O0hfJ7S21hVw0QYc9Zw
SWUjqlTGZiwj+V08c05GQQ4TEvYmpzc4NWKxgtSvsVQapk7MY4dHST9mJd90
WtWL5Z8DksyJDgjsvtH09TrRAbcFUys/NuDgkWsv9eMo7L61V0HuLgNFYbOL
U2fVQiLrrPi0OgqL7q0vqbvJxEj2evU1VQ1Itg3bIphB/O7Ey09X+ZiYeX/T
qSfRdZj/wmm9yW4amQq0CieMrPMst13hkzrx2DRdLHs+jSflG7yeVbKgrhTt
ZfayFecKP5i1krxvtDdfaTXJ+4e8k6Jaetvx4sa7qPRfpL8EPkdfUiX9e0zq
dLNJM6pF7p4Lryfrs+k9fSuaier+9avecxqwVl6AteowjcqIFZIFZWxY6HQZ
UPO6EOPUzfskSHTG2HBjoCcL2w3uRF073IKqpR0XdjVSYDxSVpJJYELG5+H5
fYKNyDgXeTOIcNF8edN06ijJU42uN3oVa/Dp8InO64S3s2ftlBIMZAKhT81e
PWxAxLuV/N+SCN8G/tK52MuB+kiq3PBADyZf5nONrCB5s/lTB58XE0veyjld
cGuAzmb7jGN/SB5vCXx8UJsFpnPMFIeAZigpx+tJrKGxa13+zbxlbPCKUrfd
ndmOPKllw+MzaEwJmeV+gNTJvJD3c7ZktSB12LGj7RwFPnrRycBpDNw7eH+q
WWEVxOZ2LT5H/PKk254N4euY0LVTjD9jXo8vrQX72oguTbrVJ+hrwMT7yIjX
RqX1uCOVZfyS7KPtxnXXT/Ez0WKzpEIqqQ6Mi94iKnY0Sjf4aymOshHuPmYy
drML6fZxNiZEJ3UC7F3HiU568y+1uU108oJbW0D0bZKDvostuX6VgUNV7j/f
F9Rg9ue6FcvCaJRrGSz/HsnBt7+nrZ4o9qBH5F6zI5PkBF2LghQGE1QsuusW
NEH6zH7DSgEaszXTBoMcWNhy2q/PbVkLvll4G/YSnWy7+nxrqAIbsYrPWWv+
tMFirnnLGmUa+da8NMX5bIT8WGwq3tmGsvVSKSsuUrBxSX1iKsOAlINNg5VI
NUp2fjpQdJ+CQ4PmnhnZDKyJelNd5FIL7Wat5VmkT320hLYV/2XhjEC12UWX
Nhz6aLX5Hln/3l2/Ol9eYyGm9tjb6vQWiFnbZ8UcoyFjVd1+h2LjpPCcvx+d
u9AXrVC6l9Snak3/oNNtJsrUK0RUGQ1QyPn2CKSPSg+KbCwLZ8J/q5nHeG0D
5pVIv7rBJvvV0as9aYAJZt2HsXDtJpgeXWTkTTjKv2vPPMtNTOSNB4fO8iH5
1/CnvXQV0dUpn40iArh4cDr91+I7fQg/7fGtlOjk4ilmPJYgG1LJCxIdI9pA
z1HLOfvP9wHMwm8zZjOxe5Wpam1fHTKuZdzwJnlKZcbGiMvEV5IeH0qfs6Ie
rim3LX6SvPnkUt8ipZ8sHHP6zY41asOshtkbvvnxcPn6ls6lyjxMMRC+VerD
hW/yoyhrkqdGPfsMzZuZKN+TkBvMbkS7ITdWOoJG2rQDGhIJHBi+H6uL3tqD
e9QM8fvvCbcfGevM38HELr0DigNJ9dgsVypT/ILGUw2+z78luBBcVfh6jksv
vDLL1U6TXON5XHvjLEMG0L3Z81FHNcoKRso3FVKw7pPsTiG5LiaCc2jStXos
yi59+1CFh5mXRgbtiO/tjRd5LLOXhdn3PjwxL6egHGfe/PIME8pL9DXizBtQ
ZvlFZ/8LCt38U5vFRxmwam/0MThfh5uiDh3S7oQrvmtLzR7ph4W0iGWyTxVE
+TJly/hpfPQ+6DXPjgW52CeVgnNbMBg8eMbgDamTyXiyeT0X7utOqYy978Ud
0Rz/uKM0tr9SGZvVz4ZN+EcH5cNdeN08sCspiezvWSnz2PcMCKoyFi29XwsL
M7e0KiEas6Lifk2/wMKB3/kKJk4tmOTnGnZ8Nqnzm4K79z9hYf2zig2HFFpR
9kpbWYv8v5BSi0moFwupIUJnLh1rAd+5Op92isLl1pC/buNMXFyTftv2fBMC
ggPuLLhJdMmj47SaEwPJR6qN9xjVYMGW6Dn5rylwDRdfvyzDxJ/lMUK9o3WY
8sfH/5sKjegvt3uXE136Zq3nYCraDuE7Gkr7Cd9+Cpr9ronw7a1JVJ2JQQd0
p+tHjU3lQe1kT/f4AQpL0sT9UzMZCL9gtHXRKZK/jDJKD3b3Y/7whkOLV1bB
6tedGc08Ct9KGiIWTmPBKPSRl098E8Q4Ue/tCW9f2X9pVvIlFqSHVYRueLRg
nr+ur0URhecz/xx4Y0T2PetDy8y6euxRWtV1k/iyym6h8agYFvh4C/yudLdg
cc41keVknlUm5cEaZJ7xvrn35ul3IElI9NRLwjm63guqLzxn4yPrQWZDUie8
njhvfZZOg3Epy8JAkIvR53eiXxv2IuhI0jcRSRqs9VEngl+ycPzUyhU5aIXz
96XjriRvBoQnKP4keTM68qYoi+TNSBv3rUYmNJSD9Savymdj/n3nbD6qE7Zc
wz4uWU+5dE+9WWQ9I7/9evRzRjvCG3tmeqvTOHVC20FRj42UhQ+HRcPasZYh
wgn1peG+6bD3e3MOfDabdcrc6sYiKzOokdx6np3fsugBA0mF06Y7LapF0Xy1
N2pNRGe2mSYuTSL6P+YypC3ViLupd8QCic8ejL7/aOAQGxpL/MOPtrdj15j2
8BspGuabsyt35rMg+SO7qdupFT5GZYE1pjRu2T1UT/zEhurmlY33RLuQM1yX
3kH2K2nVlbVqZL/2iTAMusl++ZamhDwtIbwRZaEedJKLi5kc//WGfTBJECh5
10vyY+6FstoqLi7kKz/RNevH3me7fQZm8RAg8tjS4hKFqDst/TpyTNR/Gc6Z
KU54LHkhFt1nYfLUX2Fav1uwuvp6aYMGjcllMl2f9rKxZX1UR2BKO6a3G/ZL
EZ3/ZCM4aTrReQvJENPVwtVoaRye0k3/87uwl13dk1l4vT1FrSG0CS2fE5MT
iH/F2MlVaJmysOyhj7NfVzP4r9iJ3blLcubulbJKKYR/bqx/uFajFod71F2O
PyR1e1T+L7OIgaabRsqL0mtx49pqvfJ1NLLn9U5KXc/GFIvBTj+0o+nP/XN2
ZL9a3fZN2UD2a7N5Tm9qRDfCXAvWDR6gwf/lg8fYazZMBJSqp1d3Ykea6urt
9qQ+VSwz1cbZGF9tce52XBds93t6cHR4OGq2j228+5/Pge1PVKxlY2zUI3wt
8YUvP0Pj5m9kwnuqj/yC8/VYr3Uq53oxDYXzfUJXrLnQPz5P3XxjH8Z3UYPF
hLte/9Uz/kW46639nUHvjFZctruk2k18wfqFVEquJBPankuFplN1mHzoxkwv
Owort5r9lH3Vj20VMWc1hCuhv854VPQlyfWp09N0xhgoHS9ncQPrcCepIHgh
4ZY1ifs+80g9v7c50Wg5i+zL9ksJ48SPlLQ+RxQLsbH9s4VtXRTxo7BpoyM+
FB4ZdN2JWcJA4KfjJeEbq2G8a6NQSDgFwRnrr509zcCbMofWlhM1KNvZRH/+
S4Prt21ViSYF+ougbzfRLfFFuSbuj8i+m4eMDlQwsCrmnXNqdS3E+HdIr9Gi
EXImP1jTko1s0XvnpcbbYaoad6tyAY3OQuH4i3UsmNo6vdhe1Ip95Yq+p4l/
PXvzeNcj4l9jG3VePOU0wl8t+IP/HBq1vA9bNj5nIfrKdrEk1VY8THPKnTGL
xmEP1eTMOBbMTjI4jewWlK17/WXoB4URh4AnN1awkN2jKMNY1ozhZ5Ji4aQO
F9zfeTuIj4WUF3LLgwKbIHU8r/0C4cNZ318uv3eOCSXnhLW/XBsQeXrp8ArC
J6q6USonMxjIrP/ob3t84vdJ7GrOZqWUUJBsmmW7wIoJlaQ3FcnTG9Ds/Kgg
bBkNqz9iYQFT2Ejqn2SCi20YL9GPDSc+Ym3D2y6VxsKhA1u/WSxpxYBI+Trx
BaTe/M0eOz+mcKs3UvHFNSaM1iV2z3pHuPGw+yJlVSbCK5D4ym7i96moMSX+
W7E0ota1n5Ar4OCkbMmmkcgedPmbm3oTndzyQq1ieRsDbbJvrZ8I1CF4t/Wp
5hyS08VzX5nKMtElKVpDzaiHQFD68H6ybrPtKYFzk1hoFmiYfsSvCeYye7cu
C6Axrc+UvcKFgxdKQQ7W77thc+XSD2dyv8/ymkoHJ7OxlqpfOnq+jfDYH+a1
N19h//eRzhYHomteZ3k/Uzbiz+Z5QfvmkroVkL+38DXx2XjRi6kHWmGYnSLC
GyO5ZtZRZQk9Fhbem/yRndAMr/ZDLrGaNEKD1el0IzZer7tvev9VO+w3ZZaW
Pyb5Pc73d/swBwNd69reyfVijcvN51qfSD3z2WvxTJkQO/lL1Ph7PTZ+dig5
58rDfMHhL9F9pF+3H9znXsjBpND1jgrErzd2x2vt+M1ETabo337nJnybP1wf
X0ny3dTTF4IvMuH7xm/XPv8G5EOlT+IOjQsrbD8+zubAoCkrx9S7Bw56i832
bKTBi23VNDBm41jsg8+7iiY+5+uCctqLVJKjNR21q1cmchHh90o9sLcPmgsT
6/3+UsjN0nvHZ8jCnZrOw0q5zRNeZ3VYr8GIJA+BM14wjpA+fpqypeAZ8Wfx
kVG/ufdIrl99Mu5YOQdJlIGr+6senOesmjZ9jHCO+vUOBxUKvot3PODtm/h5
pF0jN573sGg8rKq+tKmPi8bIrmcfQ/uRnvHDfcc/zynuEZF4cokLD+lZd5UD
+7D2VNLdlBs8BIVv6XYy42HPwZ2G34cmfk7X7oWzQ60JzzvlRT0s4rIhV542
HufYRXhTpOQqed1IoWdXqR4uZn71qTG72o/Rb1GljR40LvqgTUKDg0MJdSIv
NnTD0MJvR3AMjftHFpxRyeVAs8fULSe4B/FFN0LrthN+2MXeb+hJ/LRB7/Vt
nw5wV2sUHPLlYfacNjFTRR7o3UnvdO0mnueitVWXBQ7wsFW8/H2LN43AIovb
dzMmfs7tLp1dYWJhPDi/ZXUNHubhtfvQItYIF8/FF+XYfyY61rvcf7cTF4pl
rVttTCZ+btiRaVq5LDZZh09fMmRYXFRnmu6qi+rHw6emH3+GknmrGz/eacjD
cbfsKyHNXEgVvI46SHJx7MimPNVuDlQNenWncXtgb3Mn7c5TorfD2bElbAYi
PDUdN2+sg/atTP7yKxT0rZkHczcyYB+v8fPZ9WpI2UWreJF11r20dclLNZIf
0y9OkV7bDUGxTZpDu3h47q42t+wgjdHvnJn3DdkISn13katJ8snIJkUNGRoH
ZkQsFc9gwXIWHTj+msYH9W1+21eT+/2acmdGdi/mTfvrZz9KwaTX72maBguG
9i62JjYT13n6t+3ntDx5WPxiU8gQHw8X7XUbqmZwYRpyr8KR9GOk5OfCX684
kPL+9vjDpR6MCwTIvRTiQXnBjCo1KwoU47bV1sqJ61zhdWZtPnhYz7qteHYV
DcfufdN8elhY42n5es45HmpdXzDlBHj4E554drYkF5qNUa+WfqWxt0jVm/7N
Rd+ZP5tsvvRjqO3p678iPPSf/JHLtSe5J1THrq+fgdRDTaZ9S3nI+rveZF8N
hXzlq17TfzLRcfb9VFVFGpIBBTnnB4jethX/MV3Xhkq5L7ZfyH25uc51OpzD
QWbh+ajDfj14GSjjus2TRqmUZnyqJgdKf3Wm12p0wyg10Vx5Ew9ycZWrxxbS
6IvhRnu8m/g5+Sv17/lqCfOwP0Nmxy5rCn1mLooP6xh4W7etZXUGyYmL5YdV
JxM+kd0Wbhw78fcoRFt0t1m70oSrPDT75nPAF1QQZkV14dDaZ1ftTXlIT/t1
zPka6e9QrcTcjon7hU9A9uDHaOJfDduXXMjiYEvu6Jfd5yY+1+PP6Vibm99I
Xn7354qIAIXJw9U75vX0I9k9sqzFhAfpog2uNwJpyMYZG3tUstGp+D6m/9Y/
55Baf05K5cB9cftGSXPSFyZrL0i/o6GX4B94cCcX2W4xKWKDvSg9slr72TUe
DF5M3vJzHw9K2xLXXeuaWB+uWTO1n6nxcLo45OzfGTQcVmVF7ogguTD83hKF
SzScPbkLkow5cDXdM2p9oRv8gbZ7Hi/kYa5f6x/XZxQqIre474tnYtaxtPiG
NOKPK1utD/BxETxzmXSEVi/OnWEapIbSKG9Y7/c+kINVfitqTCf34GRN6fgw
0fP33hk/O9dRMLa7oM05zEDO89RPiUE8mG5LncMidT141d9zJP2/O8+3SOxr
eOVtHsrtz3/bSPqDWz+QNHs7BfPdIz++kPxV/MqLM/KOjcWSdppmw52gH2YO
TH5Jo169KrV7NhcJYsqpDqd6Mdcy86DeFxo/22t14ly5CD1sOzLFqg+TlbRd
fEh+d8uc0fGojw2zyZnHZMy6EFZlL33GncZOxYri2nUcvD/NGxFc1o1U+8Db
AXI8OPhVBntnE44ISnr88NnEz2de/NHVMG0f6RNXob330thomL6yLyusE0vq
34VZJBL94jZdudbOwdtHYr6+3T3wDtw3a40DjZRF6cE7hDhoGGyVPZTTBbeL
KQ4HVvEQMz1fcF4vhRnzfUMzFVj4Zij/LYL4xLjL+i0/d3Fwveyo0Eabblw8
KiN1nHDUvDzfipmuHBRUPj7++mM39B2Wu+zw5+Esu0LRdjXpy0kqLtP8uWCW
Tr+pfo9w4I3qx4xUBiRurV/B2TYxlyZ/Mb09PI2HhRbPp6aYUjg+//o8lXwG
GHe6d80lvMSMCjJdNcSB2gXWzHzpiZ/rO9F4/FG+vtYuso/6K3M+hrLhGb/a
bBK3A81aVdYZL2hc0T00I0uCC77QlXnmzr24Vfaho4T4q7uGtWNkMUXyt2Kd
L+F9aeF7qZbOPLjlPj72qI34aUXItvI0DtapLfppuYSHc1smvYsqo3B38mUF
BTYTGtXRWxhBNDwHpCMDz3HAOr1308H2bngmHv/ww4WHWe0zMh/3kHz/aeE1
Z+L/M+bPDTOq+uc5q6m+doFcLC+36tsT2wddwcHybVo8fHowh9O2hMYjqfyn
g7UsXJt0Jz1Am8Z6E1XLWBeSB5883Ku/vwNHpBMDTusSfZ57Vf7vFTYkjynR
RZ86oMNdF6/yiMaOXmWjMS4HCdYOt0Sn9UJeXZhv2xQe1CvWvmfqUBgdOCvB
H8aAWLhrlxzhzyXujQ26JJef4qp5Tc/noGjneblRUuey8uLZpxlseH2JP19s
0QV5yS4e/yIeNnv+HTJ9TSFlw5zTlzKZuFFbIfGD8DaVvPHJVgE2tG6yFole
aYPL7BMH5/4muiEV2DttOYUlcf1OWWCgq+NVmNdU0hfXekrEjCksXWuX8+AZ
A1z376mWk3iI3qr5d2wThZDWLu37pyf2x9fZpSe+XObBXOMLt3w54c1356W9
znLxN7JzR5wzDdvepFcqkhwIeUZZDrZ04UP538QH1jSuu6kSW2PjS3dzsdbx
Ljz/QC+lDhIfPViaKuRPOGXoRf6eYjYcJyXVBYjxkBYpdHiLO4Wm1JOcMMGJ
+1d0X+zcb6KE568dCRI+Q2HqgX3Lq4lfGWxYU/dZmcaGonHdvIVssPSiTHTZ
bZCoePzn6HQeDnZ9F7U8ScGbz2hzKnvi+41fKLF+IdHzOT0R+1pFaNyaHF6X
cY2F4B1fFhkT/un1YrDcjGlIfcgxubKLjYLb8yxS3pC8LF+deG0DFy81l8y2
K+6F8Tqq69J7UieS331X7yecwCcd4SXRB8YZpd92ciRHjAXLNHWyYG7zzoz1
rRUJF5cMDl6gIS73PmaJIalz6c1/M0/978/L/rdj/tFDz7pkeEg2Ydcpktz8
U/TubHlPJo4ESPdqhtHg1xVjaN7ikBzQaXFscQ+CZpjm9zvRsPxm8ueiBNHP
+hP7Bmq7YGH/ZtV0NxpXBSsSlRQ4yF8YVvLmTxeOJCid/0F8wX1SfPCK01yc
2WlZ+Ni2D5sScjo/x9G4o1ni++wjB+PuGYM1CT3QdKmIESI8mn7MgXEgh41i
0yOtTTUTn8cx0ag9tTGuaj0PxccXn1g6heSMs18bZnr8+3NUJxpz47U/WB2i
ITRQ/UPpPRt3Y/XOOE3qwstNRnKrCc8s8WtYGz2FQvvST44HOvohG760ZC4/
6ZOCtuqpNizUGm/mcoRbkDEaf7Ca5IIF41d3vWdy8aB1737erX4o6fy+Z/qX
xu2PVLmsBgVXP9NnN08wYHPygsJpss7aap+zXypysLDbpyx9UjckVvQEO9nx
UGrDM7QndXpw4WyrIHsOZlk73Fv8nMb2BVV8DYSz/dkuKlKWE/vFIithlrUV
4WGrqTzXLjbOGVSOKhh0ocPNZda+OaQft/ZeM3/GgkyuwtxN61rxtN33njjp
l/Mp6qUm67iomJ2y7VFBL8I6ln5dSXQ1UFf8AZfoqtDI5Kiuqb0YvKQ5accz
Gn/2iKhfEebi+G5+B8+DvbgQYJIzZk7j7qYpncca2bB5vnP+HbWJf+eVZ8u7
y/KjoX6tMfeJLQdbS4djdNO6cf7lgEIN4UW+jB/qZ86SvHze0Sq35r/ru+bz
v/WuRFB4IXRs4K0HAz2GuepPvGqgmzh0qZW87qnvnVG3yeumHXaykKqd+HXX
6tau203qpH8sctdkfgqPZscfPdE58fO3W9f8XSpkTXLTGN8awXRy3ypCn4MI
N53Xvay0S5KHZ5rVTypuUJhW0CosvJuJJeVGEank/0xMTJ9tFuRizY+Q6GDD
f88JU038tTQavqJk6SJPnfWtGHiyYv7LRBXsf5n60+kqmccePqeg8xw8WDxz
bWhPN3x35ibuq6KwbPj7ivu+TFw7dUnOM6wBh+UL09fcpxGgm7v+QD3hKOmE
cdmyHlx1iP1E1dHQ73nlXhnNhcaTcPXIkj6I/gyzziIcWPX38hGlVxTWKj24
derFvz8XVcU54PJZkn+3+Il6JJD8Ozq9bQp3DeG0wWLnMj2ie0wZBTfCj4rT
0iIMdrBhbTQ12riAwsaaQJsXG5l4bGlmYHuhHo8eFS5+7kFBodi6nH+8H50V
844NxlZN+LouQ1uLyxNILpjCMFeL5eHNrG3RnnETP9/7/9Yo0ncj6/B8Hupm
LJ6Vl0xhy6xnbs8CmPCPnDxb9QEPh9WT2oLIfSx89nt4T+q/n7+kOaaqkRyX
ucA6QvEKDRGb3fFKn//9OZsTjQ0hepLlxwmXdpomaufSsFtwVCbk0MTnDP6v
Rz2/fO1rZ3iomJVf+3eIJnp74mIAe+L5WB5y1rh+l/RvZOXl1+E8WHmfi7UM
mHidq3b5aJ6KIH3xs3/SG3sedJbsi1OU/n+vrv6r8dPQJ8HdN0h9CqZoTTfl
4cgkG68jA/9d/m354xvII/X9Vj5GIYP0qffay1ffxP/fW89+A2VPJ1IPdzzn
5W0i9dBuo5m64Mq/n4/1kcVWxeQ6DbuXvwgl9aL/efXlwKD/7r6yXE+M2QTz
8JX/ZtDVnTzwi3qmqxb8d/sy0ejz8NuHr4RDegyVV4u9ZGHDomUX6zZPfH7r
9cofhSoBPBToXnuTrMrDVNmj4X1R/908PUUch5VJfT5LPbf0wSEe7Cn+QN2v
E1/fpPzpAjlHHh4eUAhaRnwvYfTujsyo/3t6NdEovqt68KgXD2eL3QwEhXnw
bb7QVS/Pxfh0r/3dTjwYS2/+/bmFxteVc72HHnFgdfOM1uhZHs7YbOM79otG
WWRay9WRie9r6tP3JtHEXxZcLVD6c5+HMOr1Z4l0CpNjn3wzsOTh5GLJ2LxE
GnK3tCZ9lPr36+MUOHu7P7luaX7Qd1Y8D+KHZ+30SiT5WL99uMecB0p5g5PZ
XRpFoTMSC4Q5MF6rnXCe1AkrcnpiIcmLHhfyXD/emXgfN9alXM7YykPEm2Kp
5nU0qgL6lucM/3f5IqU62FFwKQ/nz8zcLVFJITFvZ0vM13/PP/9/H6128ju9
2sxDk3fa2S+KNG4cCeder5h4ndPCnoQl7yf1JHc6IY1w39KNGesWJ7NxsDVE
9qcrD2VzDNa5MwgPhsVIGxZzoFU7473COR5yFHcNHRDg4cBME5e7kv97Hfu3
48fA4uVziD9dN9wyGn2Fh17/hpWbbf7v+ZShvIGrHNGHE48nf5wpxMMkee6Y
kdz/ft1qtXneQ0RvewZzPgcd5mF8T4Ry3Q8uRG48bNYYpEG7OcwOmkZBfnPB
5AjWvz/PSMIvPE2e5Ohjvyzs9xTSuFl1zTfl+H+nz+Fv3jLir/OgcVdI4OJB
Hl5KbyvJZv+/V28eYQbeb8m+BnsuUDpsRaEpxuZIfCUDpp76g0eIf+kvnHlc
tJ5G23eTFcJ3/rv16Vbvdr8Ww8OVFYz10X48qFV/tZ9mSYHl2xd5j+h4+Yaa
vLVk/1V8BqeqXvjv6v9Yj7hCLPG1T/3bCguaaXTlxsZuffjv72vvmItJAvGd
UMcskf2Evw4JO2pcT5p4njoBL5UdbUn/hF+tjs2n8f7Nxtpki3//uuccMuff
r6Lxum6vTGQQFxVWdR8P35348+j/aiz8rjPpozEP5iM71HrP03DdEpYp84IN
7cwXS71mkj7ay6pqPEdh6auhy6xZ/3v/8hm37nAh3Dz9bLEvbUP4V0h55jYx
CglXg7wnkfqReFJ7ozmUB8f823tlPP73+lmoO0/w8DXiR1ruozlGPGQFXjY1
av/f9/vLB0XbDUk9n72R1/SwiUazqFLe0QccONzoSlxI+korwnTN9JU8fJuW
NJTlOfF8VqiF6Ps4fEV4srOhgWAbWBdeSpSE75nw/z8fH751maz/tdi+jetJ
Li8tLpj2m6z/aYWB5m7SFyXfF9zedY+He0LceeKPKCQJb4v4FM3DK/sQiX5v
Hv4679oQs4eCXLLt8DSSb48MR1U9+0hjpozIPHfnf98XA/KBnO8kNy49OrPJ
5waN440RNnJ9bByaMlPQivhprsPrngzCfZ+V5YQX2P139VDyLUOHE0nhlIvk
vPoLDERJzLrwKLwGHwLFekdv8vDgUJD7umM8bIqs214k/N+9roJImdJzsp7J
+f2poWQ9I8VrkalPwTm4fPqAGY2hTwZyLaVsfJc3WBElPfH7qxs1Rp99v8rD
93nNK7u3E84t/9vFeMtFqKzB0YRUGrYfhd78+snBVJfWlPplvfCVf7X23hgF
h91zLd/osNC7tulWfOzE3wOZaPworqk8PIuHfTcPiLpeonDYW7bvrNzEupF2
YtMdnZekv9WldDHOwMfTAl9yQuqwaPmx/ofpNOLan0xaJcgFHb095ohhL/YK
uMbfIXW5r9ZRwect8a9YvTU3D/53/hV35tUtPWkeTqvq+8rHUvBY/fi9jz0T
8kbuNZdOkX3JyP3pzqKxnZnRdqV04tdd05HyGv+cr1qutDW4noPQ0MDRx2U9
2LBNxfQ02d/SjikVyefJ9TxVD1vsolBnV/o10pKGzNWQe7btbDyXDL66UacL
R21F6k6F8eBCCa61Jblnzuc3w09//+/1J31Jyd18No1cMacb55lcFJ5YbKp6
69/zmOPAtuV1pH8VDQ3FBUj/LknecLqjh41lP9fHh+6kITvdVr3yIhszE+9a
Wj/ogN1tX/X7RG+/rXVc/2EfD1X+wxpT/g/f95ho7B9I9p9L8sKMouJzi3tp
+B06efF53sT71dV/cvUdcr+TPQ7L8BhcdMnX2xVHTHy/QlvuvNDS5aHPRGx1
hD7Rt8xp24VV2Ti6zUnFjNSlzYehSCV1LpbPDG3VLO/FjTWTrWKu0xDlZfLN
ucGBfGRm8PE5E3+v5r8aX+15fuG3OslNG6M6GOI09gUyJ09LYOH0GuZuY+Jn
or+ahf45n/ab86uNxjf+u/d1vyfembMngkamim1ufQIHv+q2FIdv+/f3u16n
1nvKM8JFsRqPrwlxsUk2+dL3/b3gm/nbeNsjkgONZ0/fTnEw7RL/jeJp//7z
kXWX7BZ+e03h+a81uUfnMTF+T6zecLwOHMVtA5OCaFT/8Bdb7M7Blwxh06C6
iT8P6p70Of+oBo37l76Gz9jDxkrQA8H3Jv7e6X81fmmwDbV5RSHYuvB87Gwm
Xrawyp70Tvw9MT3tugtdCTxsL58idZH4Z2BH3Q2VeAorLh+WCiG69/jkphky
cRRiJa4m8zsw8YgbOHjhAo3D73ddctzLQV3qcyE1p4nXIYKz2Dl/lEZ+sinv
1VIKq6X5I3ZvYuDgipq1yht4+F24ZvpVfhrfRf8+TfH69++3zKjTsXtH01Co
rhyKJbnRnF+x+HpuP6p+vt25fISGpeGfzcoyFGRiPvLPkWbgXbfeugNnaBQy
FuypWsnBqNcFporExPOfOlCa65NFo6WiRUpCnovpmg+TcyP+fV3Ry3plnIhf
LMmM1VIhfiH3Xrq//MvE+hM8FYyESzwwRwZ/tSzgQaZC/8rxgxPrXrjAIznO
HLLOF70Df7xgIUbV/crp/8P7qLKcHYWVpM9f56zfOiTJQcne/KNUWxeE6ms2
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
Lg0FnbDIE+t+60ojY7pfqcIsLsTjvmgmF3Xgtd6GOr0+kpfnTZ/WCVBYIsD4
fKmWgUDDN5nLPGgIHNmkqyPJxYmNbY5mHR0wtzz3MJrgPM/IKvLRfS6qvpqe
VTTqwqJ3zp9uSPJxdvuXGwFxFBpT58zKtGfBuMLBPpXUsX73yCSLtSzEPwtI
8jtQO26+Nnx9t6SS8GPFpOi0v4TfUzU6rkzaxERvvWv5rj80Pryb61CsRPTm
tkSLJ1v+fT1MD1h1MPQYjTyfrQ6BUly8TZsb8ZfuwLeHbUdOJ9MQLtU+MKOE
C7aG+HWrp124fmH57YU2NNZr6yzRreCgZqPSffElHVi8Oi18Xz/RGTsqHiyZ
TGHX8UbbT+0M7GFcebnLn4+9t3QmKyjwoXas/9Nbwv96NxYeEkqiUT0rePaD
T4RHfrW2mt3twjubIQ8Fkpd9nRYrWoW5uOZhpJz1oQPpx0h+H5LjOdufxBjg
gg//eYLzu2Fk0nLnPsHbvten5u0T56LC3crWsLkDz7Y9CfS+RcHuoVz/70fE
95VXtynsrAbnOnvaO5DvG3pvWuDIgX9r3XDqojYInT2bon2ej7Dkr2lHFvHR
/dDt6S1jHr5P/tIRTXhtoLlTW4zwWvV9y83GhNdct/09feQXjV8RJbc6pCms
WpEcZLBk/PiHtH+Yo/KGhk5Succ1dR4OppiwE0u6sSLvttJd0hd5XRMbrCw5
2CptOXK5vRXcP4tMigf/ef+CsLjAPAorN0dFJQiNP39s/6I6OQE+uHdPyUpu
JPGf99ta35OJu9F78rJO8XFmbEqcGNGbGz6VhVz9S3Bx96nIbVv5kBy8pzW6
juB/byFn1x82uNPj9oyQ/Aap7l9xo5qDCHG5Ga9WdqBPWVHsujiNhxHZ+xuf
s7H3S8q5sp3NqHIT0txJ6ny5raiA2Q0KRhoz1tyyYyF4W/MhFQUa00MK5h7q
YyNs1ccZv1VbYGPE8VpO9OGjC6JrNYk+/Frc6TVE9KFuus7EGk+y3gK9I5Zy
XNhWCeRHDXegVyFliSfBeY/Lz9Y62nAQ1VG8zLq3Fd/f6Nw4003j1vOVkcXl
PEyMUf8Sa87AyWbhl0fW86HeuPKNEtHve3K/KDwLJr5NqjZ68lw+lI9LJXoG
UjD2pj07lVm4d0Q716SWhtftRT774gnufR+aG1Lag0MOK4/4ZNIoKUvXfz+J
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
YOB8q8iaJoFqfC/N1b6RzoNWvMuexHPtiBMIFhDIssW8uyH66Yo88MsgqZfw
jnXgiy0hohNfP/+xSN145BCFVrnpV0ueEv7JDmN5XK2A38ky5zdRFA47rRYJ
PcbAyQpG4IsdNVAoexPlQjj/9dO6/jMkLyg5v/GumFONz6rH6JzDFMqfC+wW
Sya5PsHjmXdyBbxmnzSyW0nD/2PTrfo5bEg4fy55ltqGn683Gpwg+pyeIbkz
j+iz0P3Yqtz4Wgy0Mj0VptL4nbhGRfQ4C5uL7Xz8lVsQp3x2aR/J3UYDEqN1
KQyoBrmon9hVi4Wa9SbDJJ8KfNpk9+QOg9R7+6T2mbWQnTms8oqP6O1vT9uE
vSzEndknPa2nGZd67yqcqafh5ao50B3HhcWY45TR8j4UKn868oz03evS9+d+
xhFdUqN6BXtbYCMsYOKfR3w8watzWJGJC9dY8XEb67G8P3Qni/CD/GqXRfNW
M2C70Sada10NrQXxV0Hqc++CZcM5pD53sOWrlC9WwehV9okPRE8ObLBdlq/P
wIEDW0Ka3hHeyNbSy/lKfHP6A92dc1hYLHN+YdbbJkQ37/ptJUUjy3ecyvnM
QozEvf2MuFbYrHCv2mtL+PzpLsPhm/1Q7nsxff68CuyvOpJ7kehe/Sf9zOhw
kstmiNlFVdVAf/po2OaPNNyaKsfkjnARbBPGt2ZLH5RKLS5vW07qkC540fyH
hesL+URoxzYcDP2bpl9G6nZPedSIGxOfzifPn2TYgP27n8w5fonw2MO34Y4u
HCw/5nFJ9U03Bq7ozQwhXCEq4qA4+zoTjnMD8qmmBiisc6rEQhoey4v3JpWz
MDvxY7hTUit+3Z5qa7KJ1MPGywfY+9lYEvToawPVDjeRdysmkzz+WbNZ1cOQ
jclfFkfL3mqHfbzIQ91dNGQFzDeV3GOjsCjcscW4E+NtLWp9sjR2C66ye8lh
Qejg0JGnC9vgujtcS5lsf344vcqFbN8S2+4oZNSJ3mlbHyd3UviqKbi24D0T
dTclNnvENqJmjnHCNdJfc5Jd1EvmM3A2cOWqjXzV+JUgkB+mReNou5wV/142
tOruxr5tb4fBxiV39A8QvXp7uulCExvfs3OXndHsQtlyH9swRRpKN9UklGex
EXDi6U6D+22wui25Q3wSDX75MPUAUxYeTnI+LPChGW2rncZzEwiH55TmtGYz
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
sL3U09v+O/EF6V+3fkiycOZXHBXMbYJhud7UjedpnIjR0HlmwMGWC3/Fqm27
8fI3s6JHh0aRU6SsynE2bI1EeS/1OnDpbMTW64R/fqfYp0hVsqAufFVhXnor
ZlQWBUTYURgRMtuqFd8PSakFWtHaFbh94cBpwZMkP5Z4dhn098NecLJQqmYV
YoWONPovpeG7he+dI83CG7GAUu3lbXCZ2SH7aIzCg5eS9FywoPcqcv6VM83I
m9F1MVmNRuGOtt3ia9l4vX+xADa1w7J9qdWPPjKPd39IdLYysVq355vD90Z8
i5h2pID0r1tWfV92PwtaEd/mjQm2IZLjkZiziia5b2Rl1jw2cjNmP3pd0oay
KbWLZI5TGK7kSDVV9iPcd+/a52WVaKJULy/eSHyIu83wrhkbsW6rLDLftUNv
5XCPVCUFpfnZa03PMxH92mTFzXMNuH962ZTl02i8ZdcKOJ0g9fNYKzEULYgI
Me7hJ9werNjR8W8dljt6DXXs+mY0qC/2TVXjgScxKttJ/OfRkukWNNGDaZN9
H74nvrZ71R+7rRIsVNf3rOV1NcHgo+yvOOLv8beLA9YQf/+aJJNpvrUJNoIc
jaAOCsk36qbmFfxbVypjX15gIwS5648mkH5Z3Xb8+nIB0u/8vs0/HtSh4V3c
MfYohRc/nu6TUWNh/7dPS+N2EF/mD5e0IfxZdcX4miOLhfDwj+nXRNsg3SZt
4UT6ImD1pqdrprDQI9WfT8c0TZi/Vp3h+/v7EI2586Ezm8fGr0ov/rCTXYi5
ZXWyz4mCctXmlyZv+6FdleLO1azEsnPZrw8xKPz+am0l08PEUODbzwKzmjDj
sUTewZ8UirKnFi1bx8LNF2HLw02b4eMl++rqZhrfewT3qjuxMddEzrtuVQdK
FjxdVS5M40Hh7vqf91ion7Uo+cVwC46IbTYNLyQ5a+ZM70QtJtp1Paaq+9ej
OXjQYsCK+Psk5tRgr378mRpjNDavHCfHh5I+HiG/L1bjXTNEdJt+qbM8sAvP
tQ0FlEm/V6/ZuMWL9Hs+z7jdmfT7yepzX34q8CATnyei2kIhdPn96MuzWNil
M2mxiQDpLzdH5T+HWaibXdmbJdQCvZob3V2E697ZSSndV2HjdPy5rITV7ahS
5b8x24P4VEmK+a9lHCzdvLDhztRubNpekv6d6M/DcwYqckR/7kSs2HGB6I/4
1tvvf36jsFN/3doyMRY27G6vNqptwszF1WcTiT47BV4b7yX67GO9xj07px2e
3kU/Gwlvz3DR0omt6IdY9LFlTUWVKF86ZcGt6xTePaucd/I8A1bfCuXVwmvQ
b2whvvcdBYX3MlFym5k4K5RSyYioB9dY2DftAQXZVp/ds18z0H1VxMnftxZW
tkmvwj9SYDVdbty+nwlGyW+Lhz/rYVq1qT2ph+SU62+tWqqZuC986NR4aSPW
awe9GWgn57XEvKntNRfPL9zsXibTj1dnTDN7zGkcjr4XOPaCjV4r3SdqeZ3Q
cm89vjqfgot0XO0uVcK3Rw489rOqxxn20g1NJTTmKPc61x7kYq0m78T+tX0Q
Ebk8WFREYZJR+RQzPSaOqlvXqj+th1TIsmfBwTREEvOY8t4cHDoz2Ti/uRv0
4pl3HxOOmrum5VyMCQuv3wy6nMxvRo9QsNAS0r9P2U0igpYsmE675ljR2Ixx
3uWrWgcoHHrWtP9VRD8sp+cusS4rh7SGnKwq4Su0DV+YxmHCp7peQXxlE3ir
HomuIHo+b+DbprtDhNPebNgWv5X01waRHtU3FD7p/TiwWZ6JMRk4y8rXY0An
+egmL8JFF78Kz/ndDyqlkH/T9SrYu+nUHPalMFhhFf5qCQOB63rOn5euxoj6
2JnLhEOm1t0fcoxhw/KxadTA/E5U7wmY4+BJI9za7vVdNQ7SzUV/X1jeDb5p
qW7TvlAofH56lZQDE9vyCi3WyzXAH90eu4g/rmj8WKj3nYnE1tyeU7uaEF/p
9ONIIoUvzIsHnBoZODe/Z/bIYC0aI91CGkl9qjllCydGsKC7MHZmXGYLTrW8
pNeeoxFacLXtsy4HL0YYY4UW3fh+e2qEpBWNTMGbSXLv2HD+9uCT51gnhpi0
vIXcAMw1rVUzY9rw7DM+e3TugYnjrfyAi2S/0eE+OWsYEBgummrkWI3kYrWB
VSQnBLr139Ry42CHgZdzVNHE97HPbC4PXUnyvuYT759uxziYPcIMS83pRrjS
+eti82lkuU/JmvOKhQdJKVy/3a04kCSw+TDR1RiWuudyoqtLF8ZOOxXQiMy9
cuq2RjwsuXtWd7U1jdTDUm6PDrBh9ey00QnSdxJMqxdzSN/x7oXMOkK46JXD
55W25TQUtwwl6J8ndS7iS9te6EOw+qSCtySHfnGZXb5VngWZL4uNhMWasaa6
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
9p2V4arXHYg+n7hq/eIH0ed3nIMFuwfZ2GRAXdQjv79Fii/FlfhY3/6+PX/W
knr/WLFcN4ZwQkWX0gM3HlLV8j9LrZz4+R2vEJ5aym4enA/K/1V3J33z20gs
P5qN4V5XP9N9PGw9V3u2J4pGTW+fZg7zf7ceo/I+iaa5df/eC6ZpHxVDfPDe
rQDZwj5sfG03V1qchyJudvDqSAq3RXgLXQyYmLzicNKpszzsSYmevmsGDy/l
5jWFL534vnH3AMmay+48lC2JbCjvo0EdmG00qYiDDVcm3d43SOPv0UstkwUp
BOsJ/qhj//9fB36iz7dX7e/vkuRhddrJjEn3KLgprjGLOsnEz8mfkg+Qfp8h
/bVngSsF7nbbOpvvE/f7GJ//2qlRPLgcab5YSerl9lGFZVdGJh4fWYW2g+0k
73TXDA7NcSU512ita0BBN+70bpt7kXC1ZpWuxXcnDvKHfsSqZ3ZjmYOMlO8V
HgyLwwfO7uThxhrPvM46Llg19YVxm3l4ckNM5cVqGvczux5/47Aw16y46Dc5
rw1BJlREAgVtTpSg+pmJddL/7s9wrOWhfmSG3mSSp4dPnxT3PcHCliDDRqFN
NESbr735to+NsXKljApmO8TPXu0+T3T4UsuBeneiw4N3HJOTiQ4v0rnrvJAc
j9Zbu48NSjTM3LLb5zMm1pOSef7l/ISjxE+/XXic8PnXlVW3dC8ysUGyRiLJ
m4fZzz03hE7mQW1k6PGgMBc+2sXb35kSH+zkrd9xikZJhNsty/iJ+2Lm81mb
WKSP0qMoQ4lr5LyCeka86P/eR3m35mdZxdIo/cI4ysjioOz7kmaF0z3oMI3x
sdnBg+iV37o3zAlX7o4x6ya8X5XnKTl7OQ9Dj7J+ylX+y4UeTZ8GmNh9hL9N
/w/R2SU78navobClTSJk2x4GhDkH8j2IXiwMlIt/3UV08W73R4dXHBivaD5B
ER57OkXIVn8Bhd6a44sKxBkQbRErWf2Qho1XcUZbGwdybp0R2Z092Pmq7esh
0p/hk17kNtpTmJYXJDavgYGpClOK/7ry8OlBxdVJ/97vt2fHb1YmB8O+du+i
dUg9zRoxtVEj+SzXRsNraOL5+jxzC/egNo3qBS89uQfZcIjRbkvn60Ap/d5O
1ZNC/PkVhr4j/fBe5zZuGFCF0yq/6/+th/7bn5/pocrGVpV6s2r1idfx+K+f
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
eJB6/MPpfuxekfxIUbAce79GM93NaNy4bL4yKI2NgEfHHSrudcI0e7DsJNlv
hdoSg5p1DGhvEOA77lWNoo+b/55cQ6P2oZSkrSIbQobTnWbNbwc3rvhsN+Ht
Wtk2l4FbTNwea58t/LUBviyXrDNeZN51d2eJ/+nHjdFpTIPYKlzojlge4fxv
PdI77eqF/ciKbHXK3V2JofCgRR8LKBR9upCut4GJP5NkO/s86qG7YduH4htk
+7Cod9xLDAx/PXjXK7MGTy3+H3N//k3V/79/4JRImswVQikpREKjiwwVyVQK
mUoTkUYaRYVQSWWukAakMkSpkEpK5nkez+TsfUIpEX0fzz/AZ62+6/Ve3+9P
j7U4a5997o/7/bpu117n7O2V6P6cQujlZu+5P5m4JJfDSfeoxaf7N+wiPSlI
RAh/bqxiIOfHGxHP1gpQk8Pnj72jMLB/L2NgAwtzPCxVqZg6GC7xK35BzjPz
AHVQbpyBolHucpv4SjCkfxSLF1HYGrx2dJshC/fWOfYciatDrvrBXDbhw4I7
6xYzKpnYtKU61a6pBhfrxrzHyJze/Ji50MKYiZKWCpMd2VXInyP/OFaB5DXt
5pwXnWy4ZsmOWAy14F6OQaTaNzIvvQsMwqeywZmn5KN+vxGGrHolhek06S/f
MOUgNq4V6ZyUuN0MR70TDvaPKeyP2C9XX83EeE2q2Z/OGtQk6Y5+y6cwKzO5
K0abBYGV3656760DK/CHha03hXejiuYdbQxszzySGyBXif0z1z52vk6Ba7vK
NGYvEyvaFebs0KrGiUV/LH0FaewqOCpwyIuNhQclCsq0mmHw1tfWpY/CIXmB
6PDvLETJhVlEWTYizDdR/pTFf7/jMyoNIjxcty8poNyqA3pPns65m0MhyPxV
gq4oC3+OSbjb1tfideonWsGNAu9+aNyZxwwkFmb1iESVY6qpAh1wjQJLOIK/
1pUJTlNhQIBSNYSsjavNyfkfeGC7LI+cP2vD97R+2UocU28S63hFfNzde8dR
eaJjXdZp5jNJn3A37o3somB8NtpSsYzMhUyP2qFXDWj2VoYx0ZOjvnH2RkeZ
OCTafWrp3mrMLdNteHaX6Oprj/zwx8SXF+T55q2pwfadWemyk2hMDT2v6ejA
xirH4JxGdhMWvZgX67WQ+EXVpF8+pI+uaWx31/nKwrFLLcY6b4lfR6utm6nO
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
Pt2IfMGbFwqjyN/dnH+tC2EidgY77Oj7apSez7gac4/C0J7Ir9eeMFFvbbTT
y7QG63cK/g0hfqRp/Eo95z8/umor0/KpHub3Dc4+OkTjxHi209eZfbCoGtR5
+akTB53MC6KIb3o4FfcbE9/0qerKfnGoBjMZHnZZhLuSHa4/U7FiYp6HZvDP
7ipsnVtVfCSd5PcT4YrzOP89PyVa/fqqWuy/cSH2EskvLyt2ZDPlWHB3F721
emodNr9S3qG/m4bexrdC51gc7DJ6HePr2gnPlzMsy9bRKFhtMH/EjoNEtfFr
xd1tCNbcvm89yQWt8Xrp7gsJX35SeCi8vAop2zoyVpF9l2gOEFpC9v209pqt
dGIDzkzaZONH6v9u3qDuFDsm+h9qLWrnr8akZY+CNUgdevkMby29xoJT4rTF
n97VY6RtU/e2eBozs8O8hor68Dz7htj2+G4wdXZ6hZ2mYFZweVnQNCaYiuHZ
i8oq0Z80rtwdSPThmOkWX30mfnyMfLc1sQonU8KWuX2k8FhTXbbGioXS54fM
jtbW4c3J3udMexrfDUqKcko5SPbdorZmbicCI+/fTiG5+HkLFfB0GhvU6Ny1
F9MakVnz1PPufQoNgh9WLMhnwszbbMb16zVgHu0brfxB4WKk+sFVikQnh6aP
LBFoQlvYQpW5rcQ3rTtEFF4Q33dYNWuSQwNOukqy9FxpKP3VWv+8hwN5zcOb
I3d0QsQxKrY7iUKnrWsVlceEwkb3E/0BNYhd1b1LJpiCQ4PjWBXJ9dbKe2i7
nCokPnc++4RwWveM/O9G14judeufMa+pRl2t/ibTUnKeu4Sm3PNgIb6sdSt7
dT06DgxYv5xL9Jz/d0VsEcmDDza+Y51vgbzpzNUqVaR/9PVvmF1m4cmGzOHu
u6T+Pj4PXgZQUM6NfG6kTvK+uSqda1cFJa+59HAhhZoXbcIX9IjO7Cir8w6u
w+y006tOk/z7W1R23kOSSwsiTW8E5TbASNBx8mnSJ5E/VQqOKTGxfjmtJatV
Ba3Ec0bRRyhwU0/qO/cwoDDF1FFJqxJiZrVPav0p6Ktq5zsvJbn4C12+z7QK
N3RiZ1iRvON41yO1JoaJmZbyp4v4anBjQ0T2m+8UIuSTtS/IslFYX/AreqAR
dsaXS1RuUzhmqlHZd55wy0O9Am5kNaaIq3Ub36AQU+V6l+XJhEzYH51J26rh
MrBmkUgahb7b0cax7UwcfpFyznBWLWqDHZdtCqdwk945J+IgE5ryblY/N1TD
rv5hxfYGkvf7r6abJZD53ZahJincgCSBwZM7SN7s9cz5c5bkzcJLX+XG79Uh
k3F4ylzSn/3rEl9MXU/yVOK81aU3q3Cgak7u1goKG/v2n9U4xwLbvvggv189
fp2e2+5Izl8oPeZ2uR8TSjuvxnjEVsNC5O8yQcI59METmwUHWYDTk2PBpo0Y
r4xbIEI4oOj+7rAIJRbi5rzMP7mgDndyrmXcJ/wwvKfrZBbhB47XoeWWTrU4
eu+v141xCocjb2a2mbEh2xgzvTetCUaGyz3ObKQhIzISsz2AgxYlk9yX2e2w
XnSF85HMy3EGH3MNmZcGmal8w9KdeFaflj7lKYVAYgIJXKI/J6vn+m2ohcpR
23B1R8KZz1dGzwshfpHP5Ik/LsPglHjmAcKZByfbRGm0M3A0N9y7aH4l4v+c
1B8lvNq6THNZqTYLrQ72B1bsq0Ncc+XDFNJvgV88di1az8KepX+2yl2sg7Zh
Yrcp8Z3w5zKTHYnv+BYXnAjdW43ZawOYU3fRyPuJPX8rOLjkNCPGSakTyfRI
9z3C2yoJy5pfKTDhZr7C/bhSFVKZLhnupM81N8p9+abKhFH+dvkz26qgv7FK
7SHJ3TXVz4OqDJlIXvne4fTTKrweLqwrIXPX9UKVLiRz5/I7Wkq7rhpXktn+
r0iO6zAaubCDYmHejNFY9ZWNiNfJDFxPck3tnc+R5QJMTJseZf0gpxLb6dZu
j2skr03Ow2FXJgbfmK36uaAaw28sSASiENUa4BwkwsTzksO7JasqIWvZH+dB
9p3yCex+R/h2mkW+mp1VI6LsvG6NXqYw7a7DUNA6JuYuVqutvFGFuD3bVFR/
Ef5c5aYeuIyN+t9HU56pNiE5JUYtlfijzkJPtdDfDNz90+S3M6QSe2e07Kkh
PHC2ZtOkuTtZ+B14028+XYeL954cCv9MYVTb86WYG+GE3NBtq2Tr4TK0cISb
SY5Tq6I4k5+F4AcDMh8jayFo9rlw+gwax6qXG68IZeN7yTzlkeRmDFz/ZF7o
SeNx9KuAAbE++A8Ybr9Q3Yn4w8HJbQUUTljvWJmymoXmotEdB07UYTd+S/QT
n0qTuPnyjTwLJl2XdY7OqsOXM0+C38RSyPBboGoaxYTh8sn9n35Ww2rS7d/C
hAfCfaLGqSUsPM7M44vUqoPVoqaKthcU2oQc8nkzWNhyY6msx+daiLglxrBy
iO5FRYueEmOhc+WDpyYtJL/8UVd6QM5nUyYtl7mKhalmuy7FHyF1YI26pRMu
+rllluSdegYEzARlfvJVQjOadqnhp6Ey+CVZ1p6NY1pu37k9TdBOn5s1aSqN
Hnuv7CUniC7lLVQx39oMGdetr7Ze+u/+1RcurdRm4mXT8TN8J6pg7N2UZhBK
AbtW+1zu6MRNxWyPDYInEX/aQmkR4Z+B2O77r4+x4DL1DLfCrh5zFg1U/yS5
UgoWz07LsPBJw+1n5ngt9EzWOK4hnD9+RqXMbwYTR52PO9Y1Ev6R2qd65xAF
0ft8MlFlDAQtkrMbyKsAv5CfmBKZO7a8ncp8khPzn0VvfbujDosOTt7pcJW8
b9bMPZ92MaFhV3Tq4exqZFu8/lLaRsGtVT8/7A0L5+m0t9q+DVA816HvTOq/
VTycdl3KQuACla+Wq+vQYC4jE0XyIKd2ypW995h4lrc5NlWqBmtWxhoVP6Rw
ZvuOUV4pE1/2fPtW97EGW9PabQXIcTbJednVkn0UMP0rqk320W912kM+TwrB
zpoLTCsYUK9J3WNRUoH5m/dmizZTSK9z36f/hIVTk37ullnVgO3b66aBzFHi
DPO3K4WZaH98/M7gp0rYPJFJmk/yoPhnPelF85igFzdPjZhWhUpL1iKa8FXM
3bQDr3OYSHzbHHv0aA1YngrDs3VouITOmHpDj4P+V2InT+5rw6xTm0wHv1L4
EOqxoe0oCxa30o322tZjOdtv1946Mr+TpyRXRrFw8/xrnTxWPXoqvp21u0hB
xE5CTECT8M/niIOBblWYvcrFQodw9cHFl72qSA7VGFReoOJSCTfTGUU3yedy
uFOw8NRTFka8X1o06jeAcpT47ehLQSHqws8/fEwUp/7STHhUibz53tPqiJ5r
x6rZTzFn47lJMMPreRMO5lXMcXlMIcFYTPdbNRPdMokCzl01eLclzk7rBIW9
Dg38St8ZMB13PKxypBLVXbPts0muL7TWr3MguV6iQ5pK9K4lXOV9/yXxrztr
Nr8pAhMH79Y/uHS3CvEbh2e/J35dK1D8Roz4tcam8990N1fhT35r8jbS58sU
Vx3YSvo80EnGYh/p85TvzuxUMo8rmqUWzCbz2LlZ+trfj7UQU54p+mY/hdXz
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
bCZ1vqKAT7EyxGcUgsdTctiYMijU8pjkqcEsRYkrJE9Z34jfN4vkqVNx1byU
M2Tez6eMXdzYhyc/JPng8O998n+9Li+7Vr6W+BT72aoZgUtp3FLo0fdtY2Pw
ycD1jB809M4YL2mZTcHY2pa/lo8J7Quuj4t1eQhZtb59x0wan9TMQpbdYiNZ
cPHKR4T/LdXu67wm/P/l/MbQxVnd2MAUmnyY5OujtT6JlwjPdpz9mhgYyMGp
5NFJK8R4YKwt5m6/QGHDheVfShew0Ox6RjhdnAfZHjEV3mUKtscFl9lp/nse
+b9enz6YbKd0i8bUHCWVycl9WPft9/V6s27IPd4k3ONHw7i4SuvUDrLv+9v+
FF7qglfm8bwWkt96Y3daPyR5UDbFomj//InzoPE+sdZLThSuVRr5fb/OQKht
xaBYfRkqW3/fu/CNxqKY1iPrx7hQnis9t7yMgemeyB0nflGlqxQtFEvBZEpk
d8JeFuQwuVNyJ40DBnGjYu84ONJ+9su80Ynf9+2sxYx1Qt9wK2DmmH9FK7Lf
3Z6u/XEnTKx1vn7PpRH5IC162zIuhKT0qYq0HuQK8E234tLY0Ci75hDNhd/M
ktcpyQxk7rbepkf+rlQW5beI/H3HM5X3A/cZMBqSPHCO8Fv1oMKOskoKDofe
P5rzg4W7JkUiFXt46FNnW7/OpvFqw9zxIaOJOf/hovl8Rw14WL5X52rXChop
fOMm2t/ZeNKq/DxuPw1BRUm+16Mc1NT/spOPnFjn/3U1vsjIFmoh9U+q3NX1
jItf0mK/bwswkG9TMv8C4SUL5mX6vicX4SfUVpvunJgrDvzOOmmjzsMFm4UO
SX0Ufnm1pm/WnVi3DeWWGXwK4eHMlqymP0SfPpUbBfx5P7EvHPzOniFhT8Pb
OqsqtoQDubolbQtF/70O/DNUpUbYNJ7GT+bc6uUizPvDw9SrDExW6rHXjKXh
eIX/ZGdeH26Zrb9gEdQNjjilsM+ZRp6WfcGLVg5SK5p9Dht3orq77/hOmsaS
gmMDUv9dz1l2mI59yYD7V6uC08RHDBpLRy4SH5lpGPD5yA8mjiT1eNyL5MF1
9uzE/OM87MhsVdu/amIf+R2nE7X/v+f47Cve/f0iF1ceVOhaR0xcf53HzE1x
62mw2/gPCzhyUAiHc1GDbdC3YKcu2smDs3DdztRgGioLBLR2VHPQl7DC1YLk
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
IcrDpeQsq6qTbRi6Eqt8/xQFzb1S205JkHrWtH669F0V1L71iKvK01BSrjMt
eMSFP//gVZdJrUg6W57UfY6Gwr33V9J28qGXLiLaGdCN78uTjB+QelakC65c
jeMj8HDmrBVLe/Bop0dySzUNla+ZNcuuCTBXXWHX4adM/FjS8c7iMo3DvNkv
DxzjwyM984hNeTferHj23j+bwuRpN1bXS3IwzmPulaMv67DhRifn3XcKtx9N
YztP5qJC7dWg/PsmmD8wyL13j8Lrwj8dFqlshKx+O3xrRS02OITKNbwgdXjE
3umJjAATpE+bS9sxoK1uYn/pFA3VywkdnuAj6HqM1ArLbkhH16xYv4uG+z71
qqxMMs93z8zek9GJSV6X59/RpaG7d0Nm52wetm8wrehitSEp9mXAoW80LEOC
P1/zF2Czp4T58+NjX89aO2fvsTk3KdSPTpDefpSNsKhjv19ur4FkzwO3iHc0
gqa0L7liKkDwjq6Fgz0MbFMsW5krQ2O5JeNx4RUu9KPD3Dbfb0HWq9wbOYS7
pFWM9tkSfT3NVp2iTLirwXySMgooiD2O7Ok35GCzYIXnB/d6rB5YZ0kdoVHW
Xvxjggwfa7xd54UWjt3X+tdvfRiKoFG/dx41OYaPaR5WRh8W9iCj7OCvYFKf
/SPTw/xIfc4Kz393k9Qn0yJ79bdnFHLsHXPZ3WxMT1hSZTKrDrNym9/iKgU7
zs65vXvYeP/F0itmpBoZslIl/Sk0fEZcPZUEfEzYcCYpdxwD16YZPtpeQPLs
o5I3OusEsJmplLD8JwNKJpce104SYt6DD721XoSvxtc+aP3NhtOF0yctif6L
P8u/so/ov/Lo3H+hRP/XdtyL7A4l85m/hnXiFB+F3++smt/eDfq1T1ZCL+G0
W8evPB4RILwrdFJPBQvzq4zmryK6rciTr/mmzYHR9E5rieVjf4/X+e2QZVon
jTubpqV6fBCg0WHtciN9Flqm5hrcOU3y1O0Pq1at46Nowok/l2y7ociMO7vw
BI3V/n21I7rEj+bL/jo+sxszNBb7yprT2Hoo+VCCDw8StVdn5dl3YGLugsO/
GRS+/GgMD23koPr6ddE9PY2YPNJQ5zSFRv7LqWI1sVyIXAkvONfRgjZ/167V
4RQO6+q0hu9kw8C52NWaqoaRV/55+1Kiz7kjMssOcdDQVRH2bXoD+sv9DYfe
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
/G5FWx1S3RZtekzmZ5vPesMj5RzYPL5ae/1NI2KC5kTbEs7n/sj8R2tysNqt
ZFu5Vj3sFKcqehylMM3/YZ9qNeGEyANSBQ2VuKjXuDiB5MTkqqse1SQnyr55
3WbyugMLTfmqwWI0dBcE1k2356LhbPqdJ73NaPXdpqRI+PDSBG3XR7p8jLz2
/H1duRtZHR+UfvVT0Mm+8M1vNhe6pz7WH/zVBE0tz3HTnCn8fD1fKP2Shdbt
mYcOtFSgtLl6+fNLpO+OCcsiwMa98UeWF96tRlpiitwTwm+cJ81ndX6zoaa2
pLXTqw7uESsa976gcN1OJdC7jw33W968vXvrED3F1r99Fo1oq5XV+6q42H5i
s5XIq1bENU9V6Q2lcCT2xzjvDUS/LgapRBVVo5fODT98g8L7G8+ksw6zsfGv
3IG3S2tgLfvYYekTGjpfLXyj+/m4/WfXhBplBuYGT+so8KZhs/ltr4UKH+f+
GtwZ7O1Cy/fJUnmzaSh4/BaZVcfFsjXrmgs/tcJzooTJNZLTn+ru3lNpx8NG
qG4K6WvHg8gE5+AnhE+GVAuZjWywDwyadf2sBUvN0YZNuGJGklrQLxEOsoy8
VzlF1yFK0vaMCJn/4UuqnG5bLp535H3tZzdDR0wr84gHhctHBfnvv7Fw0KjK
alN2JZ4s5MXW2tM4tXppVlEDD11i2Up/Dbqw/faT8rOE/79P2REQS/hfu0nz
vA7h/6uNIUkaxB8NHkrvfstiwbueZeRtUoVhBZd7rcT3negb824mshG6U0fS
YmYtls3pS/Uiee2E6ynjGBseMpxVI263tuOxqoveykAKeTFGZ0VV2dD1X+6W
MbsaW2+YtJkRvgoMsujxe0k4pPSuQsLmRiiGJc/52UfB91lqdJYCF2+uThWl
aprgUGaguZ3kAnWhGDdEio2R5f+GtUur4DFLbp/4XBpv//A07hHemxop9P2x
uA1fYyelGw+SvN1mvERTjwv1Z4tj2lY3I/J7aJ3JQpITfbsf3JYn59l5+o3r
O8J7wZP+bSA560iEjPmoDR+BM2R+Z4d2I17R7VWLBY1BhZkDumd4SO9M1MmL
6sCkWVZv/B/R8BaPmRHI4iOl/5T4goEelJvGpOiSfh/6IazyrWPBfF2CIfN7
JWbtD9+vyKIxZPI7tqNegEyTvfOdXYgeuJeebCN1buo/y8PRlI1cw3w+lViN
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
lSsWRn9tCLIueaWo3aZCuRa7/73tVFhSkNkdb0h7P0TXvEctqih3lBhc2qNP
hHdpu2atQoeh4uSTU90HMBARUfpSuJsIakpkrhscw7BBmO3mRvk9RtQKs0D5
fUNozdMQ5XeV878z5vmpcCt+p5pJAgWGb5vW3LH4+/vGiyTnyT8GERfZdZT0
F5PBn7G88BjHFIi++Ogu9BmDONcX4m3aZHh+cd3Cb2QCehjY3z9A9bSfrj82
WEsCv/v+DPnptO9D4Plmm6izmwp3x6p88W0U2J00Ul0zhwdb3W0kPqTzbmZZ
3xxnSLCHOcp6iHMCzg0p2z9APvLTG5/b/YAAm3vF+PgrB4DSXrA1CPWnVPjc
y/URMiSbi2qKBE3BzaM1afeWKeBcOGt9W4EAwQ26gnv1+qHMMjNENgiDbPou
/4aTJDCyN13+EjgG0ysX66EYg5arHdENfGT4bhieWu01AYd2bn+mfwWti7jp
OykuEpx5b2Ld1YKDF0Unjh+8TgWlg5FxMmjO5nUoUREdtK8z5/ZzjyzUYNCY
IPCQeJIMhx3OeS4LTML+hW+CVOR3Cg+rpO4wkmCtUaB+rgAHvk+6F0L1EN86
GzzYeZMIMjEzwv5+I/DoSe0Dw4sU0MY5hhmUTUFEecuPhE1tNN93X9GL5Sdy
VGD4lV47i0d+B7W/DQ4QoKjqlNoq8pFoY/20yCtECKGe333XcARaTiwcu69F
BdJMm+W+XRjIUQw2ZpsJ4HbM2WsW8QM/JrxtDxMRLtXk278OHYKIIx0lUoiT
h7XIFaMkIvDaKi3qu+Kg0HNru74OBoFEsRNCF4mQN3VJknf3CNjX/R639MXg
O5+bXYE2CYRrWrhBbwwmA8uby9eRz1EeJMvtpwBj+sW64mPTcJw9emsz4i6Z
2qO4pGsk0FW75lLwbQxOX/zeZ7aTCo7qXArrVRSYl/W5tfAdD2XanyXoSOi8
guKEvQhkeNIroVORPAXv6yQrGpC+tcEhtpJa5Gsdtr5nGXGQKz3oEJWPwYgE
08SVdRIcHMnzaFeg/Tn+6d0/Pfa3YXD/j52i2F0yuK+/M9kbPwmFaVvuBSK+
VVjiVtw6TIQ3GeERVvrIp7jOSByIw2Cq+sOk8QMS6Fgd85ESGgdur/GiRVQH
CS/WYwKHSfDa4gTbPWPaOr83aUuEQjwGAwyMkQJJJFhQC3dilhqH8g4u38W9
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
5aya+loGal46LdR9RsOjNTRS6x8XX3NNfaI0Gbiww7WmRInUST9bZuZ7Cqs9
/r2kvkx8nbFbaHK5MtEj1UeCqy9c4EPj7lTfPTsocEXuO+mRfP1VfWP8pCDC
s6bavXm6Ex9nj/zcRwZifEz+zvp34zTRtblBp81HmEBjbs311XwMeWsKnJlJ
6rRHL+m/9z+N6x0IFtvBh8DhktbZBjTUz+WXWC7h4OOaTQXyxnw4DdaJvCec
wpj6NuWNKweRyn3hXoTrThzSPDLJlEbY3tHtv3dxEDi8yUCR1GHBm3C7HwoU
FOe0JcYoMaH4IOCyvwIfk9w0hOeSek+UZA9MimCh2cBYOF+Cj3zXle2xPhTa
vG3/Gc1nQW3Lx7pVe2nM+uu3QeYp4UXPU34D7u3gvldaf2IDH46/fKycCIca
Pjp037aODY/Fyvmbjci4nawiNKI5MLp0OXPP4nZc+r3lyTky/tsDs8bFiN9G
Gyn5L3DnwG/Lo1LHUBqFqgt/lQRwoXN+T1vdeCd85csn5xDfad/nMMnOlo0c
LdunF6c0YbHK0NhTIT7ex1EyA3sodG98Innj6cTXNQSk79Y4nCW5vv780TP9
NNJil9ycw+ZCVf6LTOQM4jf7bWeaOlBwy5kT+bFz4uMkeG5VoJfwscP5TmDx
f+8ZCvBXa5898fV6f5FtisNkfX3l91jJziI5b/4X90V32BiIHA6IJnpY71MZ
eZ70/S5uj14syetZobnNG5k0DgRe22LYxIPmDq83PWcm3o8yqHvKpxSSg7S1
OSFDmhSCnYNL1EyYWDaj497RShpPpibfiAvk4XHAvPYfsd1I2lY8vobo1YaH
5xKKCL/nVQs+nXxv4rqV5twrvx1OfKEogxF8h4tI7U8m5Wpd2PdVKWHtBxqb
Qh60xhuSfLRmYN+KUQYya/q+5vTSOHJV64HEGA8q90wnD37vQfDLT7e+kXme
bt18Yy7hNcljMT55DCYWy2pMEvlO43R95rtb/jwsENhl9jasGyvOTl/s6M+H
0rukGIv/3uuzLmVb5mkeXMoO2ywVJnW768XrlyQHH1Y3cvPIYiLexcKufy8f
Jqe112wkeYLfMzjgGjXx9Ur/RVMVr5M8X7TUZ7qHO42HFy5laMVyEL9xo+b1
08SPQitMY0guH7t4taGzlIujDwp2KJDxMMPUMqBKxnV8n0Oty/++f9D7SXq6
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
cV9RnsgtBtz3MVi/btD48PKBQ3QoF2lJl17SYl1orPTb2aPDh6uwbRXzH4U9
dy6lrbBjw3L3o6X7iO5v/fM6cFEoBZsejXNXN7Gw47ElZwPhyLMnsxKqOnkY
VjT5eSGA8B5/WdXJpXzIbos57c6gcMQ6wD9GhY3wh3q6ZV58bG9w86kmnPvY
NU95jgIPbadsb6wT5aO6b1VM1QkKvYU/duuzmdgbeqL/A9H/ims3f9sQ/d+t
vLYyl+j/S2rbzyfEHxdyn6vmKvJRXBAw65w10cO9wxIbif8d2+zcpF7KQ0zN
qnU3dvWg4hG9MuwpDc2P1cNWNOGYQ4mXnogwUP9tzbo2Z8KdBu97amZwIb51
VG3sfQek2/b2ai6j8Sy/3S5nLgfn7CV+PS9vQd6M2ap7rpH+6hAXMFvBx/F2
kz9bw3gQmTu+L0uD/M2KaSzsoMhxllVFK/wf7/ErWe9bQvxrmKPVEf2XC15v
Rrz7EgYO5SwVWcKgEduRP3i/ggfrsrldQQcm5meDRC3pPlJ/ITE5i+rLyDo+
+HJhalYXdq7WDqSukFzfl6P9377QYq6L7t734yHe+l6/EPle/397NDNIv+zP
vVLBIv2ydf1H68VBNILLWoMyPLioKr5oOlTXieKG1G/XXfg4+NgjYHsrDa8b
L7Sd0yb2U+/vI0NOJN/dHlZ24JB8Jy+R9/jK2R6cz6UNnxAusumMe8nOpiHy
STZez+i/fcBverWQfLg9WTxkkR4XYmWeIu2r/vf3Afb7eVa1ONGIZO7REp7G
hXr2iKh8VgfainZGPCQ5bsqyv13Ku3noVnVeoSrQjZFQdRuHUzRaTs299ECC
nM/XSJM53yfW24k+P7EWvfYJoSCbfm3w4QEmKo5NWZr4swpSnVZOiU6Ep10d
En0qCCdPC/41FMhFZYGhmD/RjVefzsW+TqSRIC1t2SLOxVvNkFMHk4mvn3l/
8OBPLlwbUjZbSzIwdb7at5Uk/27VfeyzYRmFn4d4f1MNmTgdcGpq+lo+nNSV
vi1QoLHArqLy/ls2ro6dzTkgzkdM2l5LQy8K3N2MCE/x/11/bO3ev7qrQ8YT
Rs231uJgRfRAZ9aSVsSM1w8e6yN5KuzratVpFEpa9//S5pL6/Pu4UWkT6bsx
q68WThxEZBte/Lu6DaUXRDV4xJfNZC+/2kl8mSfyUSSP+PKGQpPdh0mf1ypW
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
tJ1vEsYJHw+u8n2/igexp5erk0wZsPewbbu8nULAQINPfgQbvn+N1ggPtOOs
2YVXb0nulpFWtD21l4N0lR/djLgunGq/HuhE1m+Ae/215AYOmrRPizDXd2He
R4OueaSe85NnfPv6gg2NMQepwOIOmNf8teybQfzFZlFrEOFyq91nRKzuNcP2
gRX/o26S608VtD6t5MJnpFrSz6wPDtPyu9pziC7NFi5TkOEi8Y74iTafHige
f5MbSvzrBWftp0ziX37udglXiH9JOE0r+FFOITiq/3SkGxcO0YXHGRa9OPVs
LGrlBgqFytV7ay3ZmG3P9fxQ0gZ7vqRjbVzCUUz5Z5f6uRjtehU4M70P++e9
0/ReRM7r2/7q070sXEt/t0KCvxUdityamfHkfTZfOVORw0HxT+/2bZ7diF0k
tcy/g8KZfJPAL8VcpJ6K3Hp7dR9U41Y19N+iMJEkymC94UBSmBlZEdiN3+Hc
xdF9PFjeDlCPbGfiy6M/qlMmGvDMTHz1Ww+i89NzNq1ZyMGA/t+bn/s7cd3b
9GHHRwo+S43VLx3iwmiK3RcT417cXBs7voL4dX7h69vSH/+7H2buox+b+rB9
aeS83y8pLM1TentLhXDXVIeNcvd6cGFLh8eaMgpmU4qCDu/hIsCt/dGsVb1w
yCpb1pBH+nRDzxk9LS4uvNopqFn+/+9ztzrlyy7JxNf2e0lHZPDY2FTAmBg6
TnzNae/xZMKZJ1R6IjcJ8FB7zWzTg+4+ZO8c/zZOfLNafmT+B+Kb6TH+RobF
3aiPk/62bpiHvXu0xpIWsiBWJljSP9IIm3tOnetJvhvKrDjAIfnu6uiRd/GF
XCxV/at7gPC9hV3Rv6iLTLiZp3YG+tZPOs4nF56ohpP1VfztPJj2nAPnqVtr
lc50Y1Faqd1tkrPE+BtsjUjO0vIezmu0m5wfJvsZM11IekkiqavRTfGGJRzo
R6bMu3q7G00zqQ+Hoigs95+rd+oOB0dXm/0oXT851/XIJ/lZkfn8/Uj05g0u
G0OyZn9nu3divfoCetsDwj+9vpurejkQuTdrhtNwN3pMpI4EnaZgXrSlbudq
DpTWhfW3L+zCl74de5w+UbCKpJYsPcZFa0HiFiHbXgimyc94TvLtdes1Z7n3
WaArFHO0BVugay8tGdfcj5wLBbcSV7TA15HDn/dFFV0Hhc4xbWiE8zaN/w4g
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
c0Gsb1/eJqH1Untiqz2G1itgY75ZcQPK71yZl78+xaG9TezZjxk63C8+1otL
Lr9+igzXzq5CnJ8T5FN66RcDEh7/1Zf6NA5c2QfCCjRxeOnEqRl0lgY2vtIi
OsMD8Hz3I/7z6PhLVXjEZ9DxswjkZK09zfz468dW8umTcFD5trM4pIEB1ppd
aRw643DMae3oiy2I2/VdK7cTVFin25qkp9APxuXCWmy+SB828Q6Vz+CwnnPq
yEqCDlV2J4zisjB4/yyR9rGIDMk1Rx+xWTDnMWajRpWoELcaAXgQT702Cw5+
Gso7bnkw/91KslvMojSq4/SHD0bHvehgk6TsINyy/OeWoeXwOOkZ8vf1rMcm
F+igu7/93tlto/B9x1bVg8loHi7f9l1VQIcs3QSFFzbMfUHm5cm9LnU4cC91
bfc0R7mJ5RBuJjMGHdWX/OT6UF+UZ285V8SAHm0tvId9+c85tyjfFsJQ/t3S
mvNEi0yDVMzKV9OKua5GqT/eFvYVg7T4e4ReFAVazk0IO7zuZvr5rK6EucMo
p2TqGLxvd2VAzOr0E1KmY9A6K9+qvAKHhMMPXwvaUOGh4TCXw6/vkO9Xta3v
JgH6NU0zacg3bFJI2xoiGMCI8DhvGIp49GRz8S5pAnwiumsxB+Z1mHLE/1Gu
MQ5kNtUHdwpQPes1kM/GDcH4usdmv9H/38t2ATNtwMDmnc/7wD4KHLqmGu2B
/t1x7buH2ZUJ0CnQtnxyi/n3P9b6/JeK+Ltnh9sQ7yUafHumwPhmPgitPrRW
T3W0XpM5237q02Bj8ymdE7HMuZHZaPz0W97NLz8geYzzedb+PuDb8DTtyg0V
kLz0iza2HvHYVeGPmW+pUFjdcSjEug9Kd0SJLlbh/37PZpB7hAE2d99eKFxk
rg8+QkljoUi3owpXXoXbOPiGrrjK08Lc313vLF7cVI/DcHrok34blH+NX5ry
7GHOdd43sqd3zOGwpjIBg40YtK/8zHZwAxmyljb7fbyNwfZEevsikEFeyFzN
9sEX5vWvQ1p1/xoOV+t33+82oENPftOqY+7M+xHVYpamHQHc3pSiphc4fJvh
Lr6+i/l97fOT65sHMRw0e8/vOvaTAf0ftDb9eMW8j5xYRc4oWuIQ2Fc6HP2Z
Btp3dma1bUX98iT+6y7EozWHL1cbHaeByMunvyLSl7/ucXIdoZeuE/Cp5PXc
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
KnsuvLlI9kdF1f+o/cpBQV91T+QpBs37+6d1cIje56mU3y3hYfKtB8pONA3P
x9OeH+jnY2RYn2WSNTaP3fc9Zp9E/HWTRohPbTYFLFJd9iubjZUaHy+5Ei6f
dVHr3A5fCsNX3VJ2LRrbj0yVn1hOc2Qgy646v4/46kS+06ojfjyUfD0pH/uH
RvDCkDUn1pG6eu85dMOOhWOxM/ymEP0J39hbcq6RwrQFRwMgNvZ98jnSpkOd
pP6tRnI3GpD6D8/cs8jp29j+e6z6+NDqDAqLFZaITBZlwyh6zsD499VIfCYi
daCGxjyt9XVn7/GRYtk2rbukG7ULZ4+Wkr7benrN+Duk7644Ty3SIX23K8G/
KXiARrFg6huWNIXT479pL5nBwsslxnCTZNA+dN6TdZXC35lvqyU2jD0+8upv
tO+R3OT1YVuk0SIGUzrWPipx4CN82ONvvC8NxS82kcpWPKgpzWUvD+9AwrsH
WzbaMnBUsF/5J4HoZ1KnQswyHhwzrtho1xJfa0rf2hjFh/f4pKwXNd1Qnn9U
dYU1AzmB3TWbSX0JRbVM9ZPmQeLXyOYoFwbHbTfdSKIIB61/s9+zluwP29T1
3J/CYXzeWb6OBQnxTlkzzwpELlogX8SQ3CFtXRc4xMeaBdq2JZ97sDsuRFqX
+OLI61OKDuT/ST2pMD+kwoadC+tH9HQGySP1BSu9yTgsChZSl/v397GI2IY8
nkp862rkozNWpI/l+vMk8wLH9t9XqXK31hIffDSpIjqX+KCJvWfMwh9dyPOz
lP1I+CZp+bbxq+VJLnHimq//xCFXmWVySJsBb9vB8e7raDRqyDddH+Gg6pnU
543aNIZK5Yx8TnCxYYp8YeCOVrhollV1ZRFuMRP8FbeKD7c8ZeOm912wGeaF
l/WR3Df+D/udMAWhuyqfTZgeyG/tSRsk+d3jCP0zrpOLKUtzdbrN2rG5KjRG
9TUNVbPj59SV+ZANN69flNyFsBTqfOFZknvdqAsbxjFwqMoRMRX+7/1uWnB6
okOTHJmvT93Dh59T2BkaWeoYxsbPAavMaSQnDggoTDBjuLjakCCq49qO/JKt
iwVIP3Y/KnXeTfrxpuqp4K4pHCTJ79ftm8zg73btRjviUwddA190FbBwGsLt
2tcY6IWl6Wwm4/oxe1B1RgYfi5zDNNRPUpixs+nSwZYeHNbRKn84uxxdi8uO
7r5LY3F0xZ6YTB5WeYq+aPHuhHqO+16nKQzqneSO+TlSyHi4f4Mgj4VTif07
xAmnyezYe3+rOYVzD6552WWwYGV5Irma+Fr6pMZ1LOJr1UEsZ3Pia8HrDv6f
3/Wl+4UHOyix4ZWjTV1YO/bzlutcvE2ku2i8clqnsaeUD7PFrtxy0x7MTrZ6
Om0B4agvxyoNyPG2RTSMe/eejZjk+OvtwzRGpPzWj1Mm13cscbazHgvSfVJ/
ZxDeE29z2aOwno/DYp3frxZ1IdB7OFWbXK9/z9v7+8j1/rD69WoRud4uzf5s
diSD5/oS8elXGZgpCH41OUYhVOnsZ23CJ/d2Hk0e3ENDUu8unWzKxaRy/a5t
6TS84x5M9pfjo7sjY2LHlS5IyLvvXONI48bbhccCJvHgsr/lc2xKO+ylF3JN
PYhuJzbqVBG+oDjFrG0Lxq4r+Uf+WjsWM7CLfTPRqIRC3YbAZU4cNj4u9lNe
RHy80D63fwfx8XsVrpd5xMfPGH2NMvxJw2Z9zmLzaRRG735d2j7y33uOwboj
+6dmXSQ67NWRaqrCoGCGbnKsNx9vtuta+pC8M/E2ZSpzlQ/xneUVs6K6IaLV
uOA00euTrbHr/9pzcdYj8AlLqhXrkjwXH7rFYHxB6JNRwq2HLqldnTRpbJ7c
F/t2JGYjgw/dF97w5hDfnjShbkY2h3BM4jnZOzS89DV5q1N4SO2dLNx3tBN/
dutedFNnsOGjs8wFGRq/jn7aF5rMwVTN7PgVRJ+7LmUGhBB9Lsupyfld3Y34
hq41pwQZxEUkOFGmFH6dX/1ON4UFG0VtgZI5DOzNGk8ciif+uzdb+28AGzdF
rpvWyTIQPVp6djzJg8m1GTKfz46tq87u9oerSc5KfV+kdpThwVve5+hesbHv
218xfNX3YhQZF/0ncV+CGVgsuzNjgRcFi7gPWQe3kv3bXSpLNtPISHW6IiD7
f997h//tVnlT+4atBTRM/hxMWHeIj0euIX+ttElO3LxMqzuMwQ/tDsthwlMb
v8n5rV85dp1sZstFXiC+zzp9r174GoU1RvHlJ/6D70+iXqsbHmNw5jGdUFBN
/OpX1iqTiLE5c+ZEaZFe4uPZk3cVSsXR0JBdmdU2lweVnbM3hJP5Ul+QbzPt
BvGN+UqijV7/+/da5vb03i4iOj9UMl1Ym/BRQRT1Qz/73/vU+Q3KvXnE5yJz
ZU1OaVJYrr1u9pGzY6/v/dkuVGx6m8FgT4TjxYMMPMUr5qyY+r+/3hWnw8LO
uRE/uxztoEX0XrV7MMZ+hIfWnAj33t0Mzlt+adjpQ3hs5f4V997+9/pCriH/
R89OBiUtgvszDxGfOaZp5HyWi1UW44fjHpK81nbDsSWc+DAmyy259b8fh8sR
XXVvpBmszC8J0An7533Bscc2Woxd50M77iuErWVQJmM/Zaogjfnjpvve9x6b
51+zd7ysnEC49Oaeg9Cl4MgV0kkP/PfrvSFTzb/OvstAp26GxUJvBhNf20yr
NRp7fJa+EJ50jPTX1ZztaUtInpgt+fJH3Swe5KanyuTFMDj10qGi9AGDtbcS
l5Y/If29+PLheVeID558eEGZ6P2fZXOXTI3+73HaWNu2y4MhO5+SzxdXmqlT
ykL0t40ef0qrEMQvPutEcoSxx3DhQwUGvVvVM8cd5ePLEsEdtlYMLjin1qyP
JrqxOt7x3rT/3ntaD/uVJZqR8c0xV7/9Q4aBkPI12ccG//tx+F9vlWrMF53z
YTB66oD5ZJKDi7WCFJ5Z8SE4JOcpI8aAoz70VPw48d9bpt8Tv/0Hvbo0vV3R
mYHR46j0h200zAJPcS+nE93etMa7lOSat/ePOKwm/WEUGPh+bggfv47N/MxR
Y+Ayba9CtASNaRfGi+56+O+fv+RVvGj1TV0GC4TVz6jp0tCdQE24uIiLYcOP
stdJX1wU/ZJRfIHBG7Oy5kW7Cb+P1EosdSA6fDht5uA/7/+co3T3rvvYdaKl
6hmmSHLBvgiD7k6SCySebPA2nfrvz3Os7fogmUeG53ux47zb34HuJtz8uSm0
SMhwzL+3lW19FvKIwQPZDRd4pF+7L1YX9yT9v/N+5zGvS11kxk6i84YFvm5B
hEcOL5HY+i7ov3ddD8o+PN9K8uD9rWlKKxMoaP7Im5p4Y2w9T3xxVFOIcLhN
TOqXl2T+5y1U+FN2dux+f/D3QxPHjtQf50/5by4XvLmJvd+O/PvvZw1mGpx9
p0n83trocbwijeUlyuce1P/36u3fbgteJ7bMNWXgl5HemHiGxqLXBc690Vy8
Xqk+bdoiBkGDoXFRBRRWFq/NWN3MxvInhXNWrWSw61PUEY9+ChP31jp5m3Lg
MdB3jHuLhnzPQFFYJA+vYwXE+WvHXr9Su1jtY2jJ4OSixVGBoTSyu/jFm75z
kTNl1hm7VBpZzNvON1P5KD5/c94J23//vu+G3/fdD85jkPGSpbMmjUKTW+1i
v8f/vd9NZywK+1Tlx6BduVH/uxLxq0N6M2vP/N/nF3esnkdfrqfR4FzR5RhH
coFSAneQ3418zwuDOiQHmVukTTEmOejAV7HwPBkuhmZmLd9F5sUmNGlbFJmX
gB3lhU7f/9/JR2828Z5LqhKfS/9apvOdwulnhzlX9f97/aWt1q/kocdgu8Gu
688NaPB+KUd6L+cisPHZSRlPwmfyyqysKQwO/L4cXKc0dj0EFk1gCo8TPXQJ
v32qkYbvpqjLYk95mLwyM2MFQ+Nq7C6zLYN8CHWfimrN/ffrD99ESjwbRGjk
PE2eFOLLwbKzXzrlLzSO+ffVwifWiBIuTPb841R4k0HUEc/aPb4UYphPoaqk
vi0EinI31FH4zizkfZ3IQfXAHJNF0Qwo6YbK7AgGoR/md48L/+/puetCn1Wf
SF5Y17IlfCPJC69WNVmpuP3/V4dNbRPuVJ6kcT+3P/k6yauW8tPvp35rx8xy
kyX399CQOmgjpJfDxa2+bqEP39vGPI6V9yvZhukM+Aa3BiZdoFDvrt5rO29s
XXo+7Z7C4UMkd2gFxb7LpiG9ZLf+HTMepF8tWWkZymCc2EHp5SR/9/UIr56/
YOzxn3DxIzNAdGDPcyGdGfF8XMh78E7/29j3LTS3hxbrEw6Z+jsvvIzM81b7
IHpSIoXX9KkbYq4M7o4XpXaTOlX76bS0uJGHoPdKQhYnSX4w2zBJrptG9AkB
2zW5PGhU3wr1PEL4U+T6/qgPNE66V1tIOPx7breb/0StNpXC3dcFfb2/WFA8
E+DBcamGCsen8i7hzqZYXvY8ksvEX/Z7F/2HXPZvt2sHb2SekqEx3pL2F3zH
QffyGpmBo03ooFoDhCgafy9lVMt946PrZZdrYmIPEnQpfyVyPt8tnhw4O5FG
aoZYqocHB8J/h4Kl82gUd9v8aNnBR6D6qilPJnVD0nac9lvC4Xeruy57OhM/
jSlM6h9gYe+E/HLKkkZnhKhOWBkXEwrXBhsubAerUj+iW4rBiiOuylK3KYyO
WH75ZcSGZ6ezQHkQg4C415NOEz+3VmIrlHXwMSL4KaDkIg29guhHmw/zwKx/
+XBNYgdKgu5XxfrTGO7tWOhM5mNCyqcH5152YGScgiPNpRHqt8dOmcNHR882
/Ql3euAN0wWJTgyOnijyOlFJ40H1X/d1t3mIKjv55I4QjbliU66buXIgUqNV
O1uvEbO9cpZueUujdfeOrJiNfFQt2hW+rrYLLs8SvA/TNB7p7hzd1s9HasdX
tkJWD6ayHLIOxVHQ0M36ol/EgnrDdluLnCokvp0qLzmTxhCnP2VnMgcWPdff
SqxogtHffvkMwiGtO2ZecPhFId380qrLezloz3l6tlGC5Nm3Fecq/SgkdPpe
1FFiw2JNQUXjfJIXFMdXZGdSuP/T5VJHGhvhoXVBw3sY7Lnav1b0Kg0ZgbSt
WeVcRG9JsjvrxSAmePJkDulXZ2Hqm9F6Pm4dspSdz6IRdc/6fGkDyaUKEvmx
p3oQaLjcTYnsV9kZ0vid7G8qUM/5S/aHPlaszH5JY4ba72br2XwU7Ri3fJdf
F7wyFg4P/fOeBW6lU0A+hVUvr6vcq2BjfSVlohhDI07tYt3KGh5G/B0mfCzu
RI6m47fcFhr6v/YJKmfzwYvu/rlvXg8e139Z1UXqoLEsRebXaRY4y8ZtLnCu
hI5ubu4skv/b3NY2GbXzcORUl/kLTifCxRlB7bM0/tzPo1rW8VB26svfbys6
wJeaucr0G41cfeWFFuMoDO2zzO+q6cEWRqaF8qJBi1np6G/nIT0udvKTIx34
hauJKaQvsqVuusx8z8Hmp2tezDveBFqwuiGBcORtoRu7mlR5qMw+zuyc3wHf
PdF7z5LzidRwvJTWwcPgjltaBlQn3Ob4Dcw4QqM9dr189m8uWMHpZtyb7chK
sjvlTHLmqEdG4eVcPgwy8nd2rujBX6uCqoEUGuF/qlUWifFxb4W/5vYDXXCT
FYv5tZ9G4zx7z0tVXJy+0jjpmko7jDY2in39RePYrC9yd+eQfDd6Od9qHgvm
+Wu6uz/SWLaSS23cz0f/XO5ngWXdODDRUsO/hMbmuo9Bwu58JJsYq/We6YZf
09Ld9fcYbGmwknvpT/R2SF2PbUvBnDl40ZZwxopzv61XSXBg6flQSKKwHjYZ
H1mP3GisctOL8V/Dg1H6u6FqpQ583aa4fb0JjaVxffN7Erh4+utgVNaVNshv
/pA1n/jL0Si/UGo2Dwc71jg0c9txvNZP1uYgg5oHYWfaXtFI+eDx7oohD2au
Z3u272JwQrTLUoOMn12TywJ7T3I84/7pbo8oSOWlrZDIYkHGdenzJ55VMB2V
mnWzgIbP8wPhxof5eLz8N0tzazeKPwiUlUyjod4fuHLDHQ6m9ub36VU3AiZ/
fYpJTgloFkxtITlFI1/FRbGBA77DW8OaNQykeSnSGwRoBHc3VWue5WBoo4JT
IDm+b1w0G+T4VjbXOOLk+OlbB9Ll1WlUzwrr69zFxcjrtDP6yS2Y8uLwXckt
NILuPPvrcYaLb4VlJxpPtWIOn9Ec7qTRNbxFgf7Kh2KyzM+3Jj0wdnP48o6c
xzOPg17bJnKxykeqZatvM94NOTn+OUjj6czB0QbCqYova5Yf92qHm+CMmWXK
ZJ4OaeezuinM1k/ZY6PIQe67m3S5KAM9gd889aMUrB5d85DpZmHfuPt1uxpo
bLl3SN3+GR8/Fq56kPajG+UPbmo0m9NI3NNeeeotF417Q+0ndbVB9NqzuLTb
NAouCSsHP+BB3Lyu7fGmTnT8HDx8PoCGDbdDOuACDzO510UHqQ78XGClFUh0
RnBIqsHuMo0Nm2rOOpRwUWC79l3YKqKrHj82ZA9RCPqwvGKRLQeLrVe1O2sw
uLnY+c3PeaSOUn57DudxENrc2PToPIPu3kkJpsQH0sZbOZZr82EsmNEpPEjD
TTJi2FuOQioVnJAuz8Jt9yedQiR3a6Td0vAnvBByMvmgaCCFqEOBrda9NFQn
uyfmjfAxFD1t8fWSHoysuju3djcNzddfLUJecyHuolTQXdoGMzez2PKbNE4b
ln88eYf4haMdFi7rhPMMZjOf1F/hMbXn7BEu3PYvOK5ytx1qT2Y6rNAieVJ8
fMeHw1ygb6Wg/qJW7OW7cH6p0bjzkPtn8zYuDszJmGIb0YL4hs8LjkfTEGuJ
8D1RyYNpi8Ky0I+d+GkRtsniOw0B1XPm6ydS0N8tsf9HWw+i5g6uSl9HYzp3
cdO+zVzUK8sJnjjVAimnnf0r95LcMmuW7Pk8LlI/atdpj7ZhKIk1dYItjbq2
cpOiTi6SR19s1trdjkHrx41GI0SXKreHx6tQKLK/yrzfxsJSo1qjJ4Y0kgUu
/zEI5uIjV+4ot68V/gE66SwJGt+TfP9+ecxBnmb7nwfCTXCrDlyQt4OGZeML
VeF7JA/4VFpOUm3DhgyVEZnuXix4+U4sU6YJPverzkirLx6TN3Zcb6r6RPjJ
3VRsfFo1H/fjV+jtPdiDL4bL5C6R85+7M+56VjcXWjM+2erva0fRg27xQeLj
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
85vhHhTzWvYK4UC+dIWsOgOvKxuU2h+OzYFGldvvOpL50rtR/dZkKgsjqX/G
zWgux9nvq2Rmkdzlv3pwxxQhktOHb0wzZveg+6Ux34PwtqB5b/PfCC4Y11eS
MUvHvi/o324LLTeZj9NiEHxpfuoxFRrZpot4Aj0chL390XNfjoZRb/PP6CoO
5DpsuprzmjB6JXQSj0vhNLdneeB3NiY6c7c81h/7udljbedvyE0SIbqdJ7qt
TL+Exu6vF9ds8OMh20IyqbeIgmFQdKGEIxsz+LfaK1bXQnA4s2u1Do3HJ9jt
Si5cLJpep3TXphVn5FRzHhJ/uaPDyJ8m/nI4sqdDi/jLvD2m499b0phc+9qm
u5SLpK/Dbt7y7XA5ILll4iMaAwlr+07W8zC078qXtdWdWPThwcEhb1JXXz7O
Z8mxoC9+jLd71thc3TfPwiuUfO7LtdxObfK5pZ1dqhfKx74vbnpvyoTWcQwO
X2pzaNKkUB8wR9zzHAtD6rW3ZxNd1XdfZOBzl48Iu9OLbYq6MaKocVN+E/Ez
5xYPNUsu3gmpvdHktmD1LHU5L+LvmjXPdvW+5UN7h1ViAPH3z/6JglaKNGRn
ZGfHT+Bi6kyLulqPsddtGsp8hmdsY/Dx6GizHuFi4VN7J3QZc6FxTMJT6p/n
KQyYGUfZkeM4X76bMa0Vaq/jVBLXMFCMe/fz7gQarwf3sqPPkDx0l9VlnUth
8YrpxZ0bCddWfIlU9K7B9anjJMxP0PhQGnxyyUweXvr83a9V346b2Vprq0xp
fNfqj/mdyoUXd0bFvqdtxCdEJv9Op+HY7LFdYj4fFds8Ki4Hj63PHpNNJaY0
UrgwddrHJc/ZeMHVupC9vg5Xo/RS6wnvnczTk3JawIP+o1lvc4fG5rEtR9rV
j5I87xX/dORMAxuKIiaf+Nw6rPdtnvaB6N6zkK/Cdh0ciMwqzen/1YT0G9m+
3kQv9j1a+cuO+C/LKZUTQfxX5qVDxYMpDCast6a2EF7uumG0cBzFQskNid3i
mgzC5kk4yhKfn6t47ONgxdh82+vwgq3LplFvE3ZOsZWPmNICk36vHhx34tp/
vk4j70XtfeWrPJi84xYfFxhb35ZVhFSYkXE2e7lcZE4KF5v31m6Li2pDbSKT
G7fwH70qXLT9A/FJAUUTq1I29j0pEdAj9bZvWunfT6Te/Jc4fJtLteCBi2TP
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
sTA4T8RB7uUgXnVptqdPEr5VvuyZKkz6j3cXv/QsGtItJPXO67CR+ufrnk1W
TNyobsv7UdWD9++OJ+aQfk9wT+BO6Sa899Lp57yRLpSq8l6YL0vq3F0iPaGF
AWU55cteVV2wG70ZqSLChqym90GjtP84+xtNmuqE0TqlX3FvKFhNNC3j1qeD
5b1Z1SK5BZ4vc/UMyHz2CTMtP/6k4WXEwmNKIc2Q5fcWcaqmsEY2M+qeGx3t
UVrqJkqtEGwftZb9R2Hkz2/mNhMGZJ1ppbaPOnBiuZRt+EKSh/3EqudnMiBe
U1JTx9UFHbfKRTdTKAhKCWQsPUHDrqhisw0nG/FAMqbXmU3q3y1i6u0sBnYz
tEfCotpRCW1mwQ6iAx+j10pEMlFsEDeW97QXkmcW5U38oVD+PLZqzU4GDCJc
43ZldCDzQbie0RMKc4qUC5eK0aF+nz7ybqAZw3+N+vTKKbAkNvCZ6NARLyt1
ui+0BcIdFbuj+NkI3xEVdOg4qYOE1l1c1p2obRpeletHwTWE8U+QMYL9i5UM
4rbVgz6ncnL9fQqP2jdZxrbSILKEuy52rAmKy1db/uii8NHYUiK+lI7EYMbK
l/vbMD9FwNRknOjDg51MvcUMDL/5Rk23t8Np9r2JTsLn1e91azt8mPj65EHn
O5teaO99URJD+nf76tslvqR/zS4+iq9n94PL5rC/J1nHqe5nmtbpDLD5VDS2
f+mEg7J5gT43yac8KTH2JK9CctL+3O8OjM8xnndpDwdrZutuKyN+yLJZSzvt
wYTW1s2O36tIn+qevFTvQkeMdc0PkRWt8IsdbP15iYL+y3UPTkTQ8LacbkG7
24iFF3glk2soCNGEr2n60rF+fU05x7QVuY4SHwLJerGz+pmCsxm4k9nyNONs
O6xZAT9jSE7pLvF7f2kzAyZfdj26d5zo3u3KmxeJ3qqGahq6RzMBk0QBTlUv
+ubxn1Q/Q6GmKMx79woaKu3bS5PXNWBlYZvaTx422Loiqf1uDBziNecXXtKJ
DoE6rxEy/uiyHyeiyfiNzUNDOMtbYXCgXzeK1Oe21t3jukfo0GQ/51xTbkVR
i+JmXqIDDZ4t1mP5TOj9VOM9f6UP0efy+uYTXj32QjY7UpKB1ZrXOjtG2qHW
3nQm+7/3feu/ngiRpUPWsPzeGYEWtK+JTi4geltTQIeBPhOl5xw2z/ftQWO8
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
eC/qvoVOp9E4FMBN0eZiX7y/uizB1es2xsDPHXzMflvG5VVP7CtUwxTEMm4S
/xNb1vGQ8HHT3qHAM3MnxkPZqa7JPH8+HonI3moQ42Ou3J9l9PL/3bf4v7MW
P03y+L48hapEksd3iBa0PL7CgO+BtUbOLTS48s8T3qbykJhicfvuj/99P9Lm
cWn+aZLral9VvI+V4aHZLyOU4z2xblaVFD33IP5tjvcBv45yCs3Xsue2cSbm
Z2kFx46DR/nYMvX9p3/FNHQvYqjL/X9//uvG1cEHo7dohOjGxGoncyH6KeKo
/J6J811bx+06L9K30+1mqRWp8OEwPCPb5igPm3Z/qD5pyYfNsMF6jWAa1tbd
w54fORiYFBd+8QYfafVqVLot4ctzu+gjY6TeHsz2c54EJ98bt/wdoHFkl+wv
+S4uCq/nrfwdzIdjsez7AIJTxyYPgU2neTBZ3WbxK5qPw3zF26I+fIQ6NQnW
rJkYJzuEeQVbLvBh7rlwz1PCr+qZr7stzkyMkxONT65MIvmInZLWKfWGhYK8
Uy8ijjXhH2dq79sios9n5yTd3MbCMtG3lwdfNUD5zqJjQw8o/Oalvt2fyMSt
nY5XJLQmzhf/6+fOJp8dWQ/4yJYdPO13nfiUiIt/6XMTzzf10FuFU8RXz5kq
eaxenEamvfe6hHts2LhK2qSQPJb7+8Qls59ceNYYs3cpToxDwXedJj2mfCg6
nnuWeIT45Ow95sanOZh1ySI/guhK81NNDRuihztUt4kNvfq/yws/2Q/74w7z
4bdYdcraFzTGU5RDtqwmeLR7zBEg+VE+ZsZNrSsEV8NhxrNrOIjnHztgSuYb
36n4ZD+Z73f6lumhGDZWrpKcFn6ZjzubGzSLiI/b9vPD8LInPJy7v50eJ7p/
JmNbRs5DPn40mYipplCwNh5LcXxJ49uP4X8pC3nw0qvPSInqA+/I8aNPrfnQ
HvjpqhNFo2xATEqJx0F2QZCbOTnuzO5dKvlzaUQ37/0j+Or/Tl/sY/8JrSX4
f7ym+/RbNT4uFd7bL+NGcvZzN+UBcTLurHcdkf4U+N9PmjvJ/O/+baLP1wsc
DgbkULAvsO+ip7MQcO6zU2VmPZIUi68tIflaqtLj1B5Z0kdO3prTtvCgGNNm
e4XghN1n/GavI43YQLZfk+f/rnfn9p23s9jER0DDsrvmJjS2XWDO01TmoDB6
Z6OgA/EHQ7zJRZk0yjvn7Tc04mLn2DzjMUNyXp3qZdNJLs+2El9r/5kNvlwC
Mn7SKBQ4+fe2NAXmVZG4yzOYmL99U35mHw3/nicFcUSH9jvUv8i3YqDhvZek
ix4fl1c6rxkWoaE0UJp988b/vo7ulq1Bjt58+ObpaWuO0AhrqZn35dvEPKzp
kCLVTXLo+5OXTHeepbH/69wUrSwOeDc1tE2Jb9n0nBnQ/5OCv+8Z+6g9bBzu
HwNF+PHlaN3C+r88rFq+jR6oYWA8XeVclDvxzd5zRk36GBChTv4q0KmGx/bs
Wu9mCuHhT7X1ElnYy+z656rQhMtLT7F6+v/bR1dUTqGB6Pf+LMMTRxhodF4x
6FtJoyj71K2TgQT/LiNhi0P7Ce4eSZVsozEcLPKl+BoHvlaMoyd/diIx+cfQ
DyEaq6w4c3f4sXGgK5R/064VK62MVS0J7+dNbWfmHeRiyOrl5/r7PZA4OTus
aD2NvWtmWwa5cZA+VeLhr32deJR72utyLoXuG6oP/ru/Nv9K+5/q+nq8F0tc
uee//axGr7Tu+8aE09LRsV/76/H6YWK40zmSc7ZskZA25WJB0KZpu0/0wHx2
scIuGxqMOTbZQoQXSn4pZIurdaNyxRm3WS40ZEd+L9eezEVizNGbu590o+kq
R1/6EY20ONuQ+TVcaGhfXLfkYy88mrk9Fx9R+PpnAXXzBRPBEaYCa63rIKhb
w9pD8kGH7HPJqclMXH7x5lDcyjq8iXNpd5Cj0fFnwF39IxuiZ8PGDPzasDcP
fy8QPT5ivXHhbTseAkWrrysu74f78DmNgV80PsqfdO5ZQMHI3GNn8BImAi8f
Ty0iPsao6Ia+6mkKh/GymjmDBa+RK+vukHFKPJVJnlXHxWDAJkWdkl4ca10b
Oekzhfgpy2527mchMZx/VW2wAfFd34/eDKVx4kEYY/ZZLu57HtEY6+vBnYTD
ir+EabL+oefenGNDvUk0bfxUK4ouJJjpE//6qO5hnpUpD9rbvCazpvWjaesO
uSAXCoYVZ4vHPzBgV/p2269dVQh0MI8VNKBRfy+tyHcXB53n/aUWpHfg0NDV
BVd/0HiRNCd7pzgFrdh3Yo7/GHgYEXrByZPGgucfbbct5uIMp6B/2oweiFa/
G20h/ljB6oW7VhwHSzjLl0WbdOFroO8dr8U06LNOLjOnclChmvjL+mw7NieV
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
q34mW4KBZ5695on3KGxb9v1pfzQTepdZr/V/1uJ81K2U+958+MQ+sJv8i+hG
WbLA9yHCG91xS3yIbl579URx3mvin7iVyYqBvdh5+qylPJnXgy3J0gYkv58o
+/B4N8nvt3xlhucTPtky9vj4D3s+FttUJ1tMoXDrSM0cTws+7iZdWMD1oaF5
9Pa2pU84YFl80Ju7iY+8eTkuASRvUZ+aVgku5OBO0Pw15UtpFCe9MUiV4EDv
YO7U5pftkJeYf6hsNfFJ9s6dg7NpWLTeSOYnszFXfKf1is8UJN+eTHtnxYLA
+hqxyKEGxDY+kzMkueDSTYMT1flcaJcxt0dETqz7hn6XtC7GUijYyDLOvscE
v3BD/3KBOrgs2pvcKEPjJUOnb1IuGxGRN0r3Ef6YHmbUPucV6aP17sGzF/Pg
NrNwuV3CxOsrpNp+5DbBiUUFqJpiCvv3BXMvN02sj/H35mkf8uHj3ZORSew/
NKIW+6WfG+XiRccUKd3lNNIknpjvVudg5syyI32SHei7OqjDX03jXe3fXQt2
cTAlYcWARVoHhP59y4s7wMcNpcbeMpLbWsRdkvx+EN71VOtoJnqdl5+ksv4D
hTpXsTSf/8e+EPu9abNbZBzFgv1fZNUo7D639MkzAyakDJ5vndpIfJYFx+TC
PRZShcauWX5vxIwNTJHp3jQE91dauWlxcZ1xbVhAvgdZOZ9XT5Imecf5yoK7
qWxI+8ZqhSq0YW7gzCs7MynEb2Dk/P7NhJfXuzjqTD3+0nEq/713pDks4e82
STbkJ1W0e5Q1YywwsHulO41C0aLZkxZwQWkYpPj86MaqpcpXXqkQHst5JJH1
nY3Dv9+dnWXYjim9Bk7tpI/2r/py/DXpI9HC+YPuf3rQOnX66MYCGhFfZNYU
buNBwerzruvj/3ufXkxUX7GslEYNs+FLGvErsm+WvrDePvH9URUz2oP844i/
qcosdY/iQ/MdKyH5EtExkRuOjkT3JSy6rvaLEH93oO/lkRts3NkQfM9vlPjv
WT90/ZdQcDkrauK/gYkAP4uMjfv/ywXPW4o+cuBwrLM3628X5jY7munZ04gV
ZjULtHNwVoixN2FDN8rNAt8fI324qWKLy4sVXHic/vYnXa0HW7rMRjpn8mHS
Wz986iiFhAae1+N+JlQM/fYOHKSxN+155AWSkyNVe/Wu7OlGbqHmD1HiV300
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
btVzuzU4+Lvb8HHPgonvA5zo0yjvvdAN8CEUvcTi01Ia9e9nKuR0s+Eo8cJ/
E5nP1K117UjlQcNJKt5yqB+/tbanKgxQMPsabrhJiI0IoYF9Mx8345SWM+vM
XwrV8Ys1/LezYefxOPRgWgvqrRpd3R7SmHLtSGx2JRcZI5mO3Xm9OB6edU3y
K41sS6fHtzx5GHLbnfveuR9r3w8UzGqncbdzUdSHbB4s5GffSRRlYLAtr/3z
BRoJW8KHljlxEb3N9tG0pxO/1/Vt7r2t8ZZ8rJFeVsgnfKyOGd0niybe1+JW
lPV+nX18zG1v6Ze8RGNzo+PDf6UcZDx6O62Y4Kr98iIzUy8OFGTYq/KPd6Je
zvLCr24al5q2y+0p4eFy3cu832snxufJyWrVZtuJHsVPy9PcT2OVwwGW/h7S
948Kn+oQvefIpSiPviH6rGVu/8CcC1vRV0z1uzTyjJVv6WZzMbZ0pMvWsxeN
t1e8/5xCQ3xJ57t/34h/uzK26IVMHwRdbwSvmslHcehZl6EjFF7crMlb0skE
O+Ms1TyDj/krpEoiST4WUKrujWplYmbag4/6l8h5C13ujuuQz/f1k+0jeAh/
cmukkOSFy39Hh/+m03A/c4LdqM1Fo8OMh34ufBiqlqSrfKFxpiDcO/nsxPy/
welfDv8iDc2fYrJhx7jQ1LoUuz+3Bze8Pr78tY5GdF1u6FsXDvKfX5R/v7IT
scnyH9YR/5A+g/foAJfk71eCuZGr2PjuJu/WtpLGHblAl82rOcjdrxeUtrsD
4Y1znnjfJ/gftFnlXsRF/cudwnce9MJDTthZlfRXfvN1vxWkv8ZuJaRfJv0V
uOG84CF1Go5BO6xmT+eAmZl90+hqOzL+vFOVFCDH0bTT4TuwoT61XDJsRium
3JOYw7nPh4iRllrQVT7U/y6wWklynU1Y67RVmnycqHUpOk74o9Y1eckeDTaM
kxo2qhGeZ/pXR/tIc8F9ImPj1diNaIuAL9MyaOS6ypXVCvIQsn5S2bptfbgR
eWnKbn+Ss3au/r1iExf3koPH6/f1oN9T/msf6fPl4X6uIrocfC9aN3m68cR9
nSDIlLxZTSNWxEjU/goPj4cYZTUP+jF/kwLrKYcmPpVfv5LFg/6OuwcDbjEw
ZPP+T8UfCnuazR2PrmEj+Iv/7cXHW5CkK2vzfT3pkzil9TruHOxNWDgp8sDE
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
HIXTDlWf9tb1IEc12PSVE+EfsY1zswa4ED3gis/nGODd2cI/7ENyTUCdyBxV
HkSXr+nmSHQi78yvOV0BNF5xV2lZbeEh3uP5yCHbTqwrPW0VlkN0Ne/v3kQZ
PiR/9+tZnOnGpUshqY9I/8pa1amvec+HdLxew1y9HtxYZeZY+O8+3aVHCgdW
cZH8umeb/bo2cDM0ngaO/Ps++8/XDC0KIjtsRefbs+AvahKYIyqAqFrGzgmO
FKR3a39XbGJhi3fhZkOKwrW1nsZNQ2xELmMYqXo2ojf6zs0wYwHesCuctSxI
blv3fv1pE7IfaZtd0dtpJGeZ7bC6wYWvtZHGUdUOLBMya0skdcLgMj+Nsvh4
WPbKaSCmByuOTRtpJro66qvwR72aQue4rKDsn2zkfthV32FHcrSy6r2z7Vwk
mHfkyRozkHUt3W/cC5I3m83nFi3m42mKuO6JO914apK/e80NGs+SmPqrX/Ag
/enC89LALhgWBbeNq6eh6W6Z15XAh1SEZLVaDROh14zTnB1p1FY+FUvt5eK7
iIr8I7+xr3tIq0mufXO8F2rRsyf/7CX5amghJa64bezff01aJknmUcPhkYSp
IQ+XCm2ET1t0gv8xvSRrNtG3xo6lYZcpyJ+6bCJnyMb39QEPZQlPDqpbx2za
y8d6KkXUWGns/FhsxPA4bUB46cIEV9d1NPacO0hrzeQi/VzBPvlewm+ruuXL
hkj/fDuzXqRs7H50Uj/28mYHBeW6jzq+79gY9k4yNItvQJbtqu0eHjSO1vzY
PHceD6ZKXy7xKAbmxVsnK50i3JIqXrNjKw8RDI2ZfLtOuOj5W9gO0FD+rN+Z
MIOC++J9SteHiY/kJn+zeUjyuL1DUvgo8Z3SOavYa7qhyXrg9riARm4No91t
DR/shBlv/CoJF93Z2qPmR/g27GNQmQYPyfU9/ZYLybhtvN6xgkOjLqgsJqGT
j8Slbwf7QsY+L++so5p7m2gwX8bGh5J8YtZpenP6ABOrAw/X5pDcWu7KqW2+
wMcf9ftFEslMXI6tClb6RsHcWltXaSYHs3Tcr7HfNY65fa2PRjqPpwnwykU5
YPMxkp88nuS4/WDhj2lUxO1bAqSeXeCeGSbA1aQUKsWFwo1x1gOqRE/OzKix
M9HmwlzlgP03wzai4+UfXzXS2DHlhQTu8SGy8lDtfAETJo11d7aSfmnPrz/7
poePjhdPw/KienDAbVrKz0AaHzzNt+qYEX1I0Rnu8uzE/Wjl58afSf59GVzj
7MPHzRat1B6XsetnhupFi8+XBajPXrHn4C6i9/ZCi2+TcW15+iogeAeNIDpK
JTOFC7ee+2dCzTvg5JmzhkH2ayi1q61jBw9KFqKjfz06UTEzq/mwGcm/Jy16
pqVykRW4+ZCS49g8vMHG3XEiyfUa1ia8FW18GM7/4ux5sgdBzsiOFREgVPSF
tpANhX0fVjZte8eCb1xHog7p9+iX8VuvLuGj0v/dopTUbli0b9oQ952ClJBc
do0sB0o289z6BWPPV3+sIEnvOtFDmydmp3J4iGlntM326ULE1cQZ3e00eFfl
zX1e8VFsuut80NL/vu5+TvCa+/eIXu3tYNs8auMiSftS+HcjBmZcepRbuomG
uVPHiJ0PF2EGLzRljrSjbu/y+yYqAnw8tqzxbgOF2q+T2zsncrD2coOEgHDX
vjeXaF9rLvZ02t817mnDVNWN8ZvcBcgqOm6i30pDZZuSWX4mDwyRE05mhOs2
yopfHfh3PVB8qO1FNgOWaicXmqwmflGuuef7Ji6eR98NvRvQhjP1l3oW/nsu
6NY4e5PfLLTd8WFtPFGL4UF7sxqSN6N9nA3EJ/JxKeFczeYt3dhmJc06FEl0
u6Ek0DyShz7vJfFuEl0omr+Uo0DO95LUV6eHLYRjUzYYFm0cWz9Tintj5xEu
2qa5i7mhiof5CmnrQt90YQNv6t8PZPwV5RauFSXjP/NXd6Srytjj73/7tZz9
awoup8WSLqxmQ8KM5SJ6tA4/3S9b64YTHYsbcC4yZqFs8hSHnNIqnHOeteAM
GefrZ/SsDjVSWCIU+LFlMge5vK0JH8h4Nn9zdFAl+18W4Dr7TTYPXXMSr/bG
CBCZqekS7yqA6Q4/h5H/8Z5wgevWSHFHAYqU3NqfPqNhPNzK8DfiYVbSVOcz
u2ksYDTJXMjhYnP06aB7uR1QeGl3vT2EgnrG+VVT9FgwaPpg3H6lCq4lYt0+
xE9D2+4+FpD/mzAkvvXjNpKHqCbmSw8Ki9ZsWRLf0QODQHa+gXLlf65P7oE+
3emkHmJdl8czN3IhEpF9++TxNnj0XJNMaCb1n1yQafyYD8uZvxb4jOuBZFeZ
Q30HjUhZvfKpJBecBHtxvWYPtsd2nQgiHCXkfnaekCEFhbuXnU5cYOGV8otU
L+JDu9YOrNY4wMXOHJ+++ePbYXl1mcmhIpIvFP2m8cCH4qxYXevObuxdZSL8
LZz4yC+zuOOBPIzaXVGOZXdigm9qvfUJ4u9pginjdXngXdsulr+WcFGUkPmp
QhqXI3K5vnrEH7fZBO9vHHv9jszCU3OeOQvQ6GIluu4jjcXKYV9kfXnQtTii
+I74rNXDlQuL9/FRcfho5RuVsXWSdV2tqPQXDSmtS/275lPAixSbWSosGL0u
PFddQeHIVrM9MwPYsFz8ZfEDv3q0238ReBMdC5u42SNkH4X+HZNZU96yMP9z
bZAU8bUt9w7O8iK+tiEw67uHcic2rOzxUlxIo6ra/nbIAAcbpMyO621qRaIr
SzI4gkYrFfHh1mke1md+mrKI7oT26xdb5/6m8e4VO+LMAgqOP/fozVcl2481
d2UQfZsz98569jMe+l1vf7A72QWVVbc9PzVRsCz0nzgukw35J4JtyzXHvr6n
PRQXZDmZ5GgPlQbTPaRO87XtJPNYOCi8c7vNXAGY9iG6Lrco/NIMfqnj8n/3
fpjw4x/SRZk03Nvynguq+DgfOS1yiW0PzAIdtDVNaOx+Ov+iSiwX10REFxyf
2YERXV157hkaUzq+RuzZx0N4wtH+yshOSBbH67vPJny+K/JNYxYH7+bduz9f
qwUyLb1V5bGkztvx4XQ6D5ZzJLxNzbsgJv3u6l5xGsWZk0tSbnDQ6HNOtKit
Gdpi9bFLykiuTCo9Pd+Dj7/eEuNK9jORviFCKnGYhtrsS+OjNChsv5F5+IzV
f78+eULu3Xi5hxR8tfWiNnWz0DfvVsv1BbW4qbzJMN6Yxjnz93zJSC4mJZza
UfetHYEOS7qGzGn43Rj8/ZnkXu+N9lOqr3XAZtMyIb9cwrd3r6kryfMxx3z2
n6Dw//5ewfxqlfIJyTQSfuzvlPvCw6KI3X6vnncBAYf9i9xolDDlZaym8iCr
Ybmk8NV/vz841t/x6kmunFQKyYuGN78nfTJp4662l2k1eNVRJn6f8MbA4az0
qYQ3+hPfCdf9j+dYYiZJfVp9kuj/gnd/JaewsLuq56Xvx7F1MjHH6NUGKwH2
R4t7SBIdGvENWeRWw0XVRs9k2/MkF1x61OLkTOpEePOND9mdWHFvYnheIo3e
6mIrrU882NeNPvv74L+vp4vOt3gfX054MV3beacnGy5uGbvNzOpRHbeer/uc
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
WXdBDcJzfCz3kfxutmKgwjSThaZNjVTLwTrsdbuVO0DmZf6zdr1TM7kwiv+a
+6aU8ExfZ5fTbpJ/S965Ti7hYnhU+cVZsbG5xVt4YnQ+6cPsQNaZo8kchBXt
sf0zqw3rXF6P20/8OlEhyTBanocdOZWZM35048cau0JB0Li68ui1HXZknQPk
Dm+Y0om/jcz55Askxw0K159z+W9/o+6YxOc9mG0UXPRkGw1eu5G8WxoX4jVt
qd4JXQiOD0ro20SDuvyqc/QWFw5fDw/vmdQFpwM+d0TsKQRnqCSkxw/A3zhb
/oBHJYqcS0wOpFAYmbTj1uYmFo5Fp10MG6zD9edfrjoQflM97/jKR4WDwmnu
bqeXtcBpxvnZF85Q6FPzWVc0hQUZqdNRZR3VOLvm3Dv9JxS2x3IlVnNYmHGl
vlZhRT1u1FhuXHmO8Pbkaxeyd/GwyV7i22hgD3Z6HvGcxiN9fvzu/ZWDbFhn
lXmabmqGWLX66/XEN93Dj1QmxvKJf3/cF9rVD/0bzROFiT48lrTd45zIxeqI
CGObo104bnLykbYxjR2pEktmX+TiXIr2jdlvO+HbsXCSK5mLSD2hbPe1bEw9
8OGE2M0G/N1wqVZnFoNatfvHrEIprN4jmaBpxcbxt3yLJaqkzzfXl0XP4mLH
GXlls4/t6Lc/+fKIC4317W5R8QI8NL5e93RWcjfO9gfvsLCgwLkr9nqyyQDm
fN9xdVdyBZzzuXGyvymYXphfGrCBgysR72W5t1rg/m5hyFuSO/alpZzRluBh
UHHnqg+l3aD9XGr7iS/slRdbwt7Ihn+FwamzKQ2o/bG4c4k+BX+HoE/HBUhu
6huQnnS2DO5WAynHSL4zz3sd8TdrALnLBtt1RavG7MODA9LG4cSvp8zLlv3I
4aL5ClXW69CNkIgo9fwaovPtR9ZVBrKRvpnzqii5EWGJkXcE2olPjcZuL8hk
Y8M85eqzu5vwvDOXs47Mi9I0zRuVz1kwLf9k/MWpDoeVvq8vInXZKCIxoJzC
RcbbGNEC3y7wbBLqfAmf/HgiO5R1nYH9lgypb6Rv8nbtm/z3Cg3TAru41LM8
LE+cNV+O0wPzfP+16whvW85brtVEeLvkjVOjdHkNjI02rcm9RvR5Ws2PuO0k
t864NeXGtxqot296yGgwmDntlJrYKIWhqbsf3XAY+/6cb8Xx/qe203CoVI5Z
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
M27J/Imh3djiMP3DFzNy/vem+DVE8fD3xL4TnwfGvs58y1PpgMunKPjfGtRa
sZqPn7MXD9MqDIxucggV16WxXHwNf44sBY2uRyPXkrmIkvBSufme+EPq8JaF
/z1fqb3uUu4vJhbpNV9UL6Awe0mrS9dGAZyTTw7K8pjojV3d70d4QGlJZL4e
4YHbuxRnDxMecFhzz9mAnGfH2OZCHT4Hj5SU2A3LG5GVsnDb+SgKXTIx3EdR
fNw4t/nGTrkufJQq0Bq0pJBb4G2a85QHrSVWE07d6kCBpGXTIikyr7OzLayj
uTBbW/6dKmtGhtGC+yoNQngaqqmGJHHg3RG3U3JSA87O/+MU9Y2Cw5sEe/Mw
AcYdKC6/l8DCVmGFbaERBZNvp1PWefNQPdtWz/FYOxa7eBRbkrl23U2/KkhD
gPu7mYGm75g4WHg6sP0Oye0PhYXu+Xz89hLYDUR24fxov89OLcKBA+oBV1bx
EL/UXXbV2jYoTY4vX7qTwrSA+ZrMBzxs2VpwsdOzA81mbznqAxTMZknfzJYR
wrdgoOqpKBt9enevTSP8VuGj+ujaPCHYayLTu5TY+Oi/7yOtSDw9Ou+CSxMX
mr/HG15rbIF7H3O3LzkP82cuLyuN4WJHjOu4+KpmKAyqGT4k/XKKE3R9zTYB
OsN3a+4e978/LyUz6kytJNnO8qIb4rSpANN31zkc/sOE7mQFP4cUCmsi4ydP
quejLyCDElR24dANhn7AMKnbh0FXRBcJoXhopqycBhsWlzc5xpB59L6Zcq4h
XKFw9srajoCx7/NamaX9c2cW4Y3LszY5KgmQ9sUs68d1JvqMdm7tDyPnYVHy
vbwzfNhZ6hp2tjFwcVHIkjqyLr2/5Q9tJesyzIw+GEfWJc+vLUvHhYaE99Od
TfkUyjfu4D/ZP7b/yg5nFm4ieagxoLm7m+ThHWuv16+VO7FQclW98kkKMg6V
k8vnE7+QO5gu7OtE1cWKy11BFDYcznKrdCRzbWDdW51UBt45RmQl1AhR/33O
hfTLHAjXxRbx3tbj7rXt51JIPUTH9E55ns6D2JOhPB3/DoQ5CUcqyJwqrZO7
9ZvMqdgOW9PzyUwk/hIZziAeesEp1mlXLR+27Rnz+SVje+j16nv3H9tS8JpT
RG8pJrm9qNLPfAKZR6+faJZ2UxCriw853yjA+Twplq57N74Nd57bR+ZanbFd
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
cUWfHQ9+N8p90kfa4IKynGWfhRi3tn90tyMHU50WrTg0ox5SW9cdW0H+Xtvt
WYsK6d8NiVLn8v6OfZ1VBCI+xeVT2Guz9+oTQwEqdpep7mISb5W6rRMuRXhg
SWeS9C0u5rXP9Mj/2oxuf48ctZtCxL2mnDecYsO3c499s3fNmNs3Wbd0yW6a
QrpB+ufqIcLVLX5Xt3/oxkadZukiwreHZox37yF8O3NtxpJNvixwQzw3vCK+
UDucnqdGfGGF80haBPEFwy2N3Y9J/lsqbpU9f5YHyVspwwuutyMhqDR0hR3h
87qr+XKNPFjGPld11u1E5NYZmxo8KLi6L7NLVOQjdnl2fPuPTty1TpM7S+q/
d2PLAXElPpojPJ6qDHaiIGuFzHR5GomJStWBt4TweFa55fR+DjB5nqZ1CA1r
fpXa6rU0rE5FB+6KFaBU/vf1WYRPDJWkfsqd48HJ3PSac1w7eqybNmrFUvjR
G9Rr+4qPPXNXdLzz6sKH0euH5upQiAgQjA/azAPtvc4iJbwNWh8M7ygp0ggs
i9T2eCrEge2dmXNjOZjRveX4bDIvFviOzmv9xEeO9snWzntdqIsbmV/wksKe
FK+/abME0AwX+sb7MvGHSns5jsyz5df/sF4Rnjc7rD37GLsb9tl7GgQMCp01
5TcEnwUw73u+f+eWsXksW1Njp/QRGv27Hq6s/UjhT2PDzBp3PoLy1oRyu8gc
2hbt+qBSAMNysT8TLbuxhPMvyz6ShlfT3/TynSQXDx22udAmwPEo12ZVIxp9
lyzT7HXJOk/3DpafyIPKmocVhjwhShZOW/qQ5uDFhLDUTQaN8Dz3bEnUZjLv
q5bY3w0iflco6FB5M/b1KpK5K+03egixa8H22WFt3fBZKJK/fC7po6eqm+l9
ND5O+X3m1y0KnLyBoNBBHpL1TSoNvAkfFjp1nV7Oh+fzJKGZDAM6wQtN5pE+
nfrjhEgi6dOs1zn6Hos6ML3O88yXrTRc+2d6D++h0P5x3wuWLdnOYo2E/kdk
jowemqTzm48Dz59FS69gAkqOtp3keGu+B+tLr6MgX/lWS0GCh56pq/a7soXY
v3TZkG4XB4cXON1zlhz7/riUgpJevVAhdos0xY5sYCO12GJk08Nq4lcWqSXN
Qty55Jts85yDNw9zDhoZNyByyC9bpIAcZx3rpuZGAW5lqopt4TCR0j/p5mqy
nc7J4951ku3IWizc2/igGi2WBW+2E669aTlzfKc2D/NOi0hob2kjc+bPxg7i
HYdOLrcPc+EjfvBmgvDx2J+/PB2v7XcugMKk4pflhXuIN+l8//Usgnili2Im
x58GK6vU6ZosjYlKpwuS9QU41rovR5lFzptPYZVtjQDbMlIurrPrht7Gz2E7
hMQ/540PmTLCAW/PNgF1shFpw3BIjCe5se1fqVEhHxea9utbxXShfsLKaYNu
FHZkO0kMS/GBuxFbS750IjS2WfnaG3JcD56+klMW4JqSg7VKIhOfdcTG+5hS
ODCvdVZFOA+M8v1ul1vacWrdtN1X99I4V/vBpuw6BePQtPnT+DwUXPGo/5cj
xJW91xcfXMzBFiaOv1aqw7IUB/VfnqSPupI4Kcp8SJqq1b0RZcDWoedq+BYa
zbpvZz0jdbTlXuVCvg4Pyml5J7+9INx41He19ggbARrzd2Vf/I5Qt0NLfxFu
OKHJLI8gfPgqK0x32td6/HU9t56+L0RQ16Yt68vYSBec22H5thbmKntLqwwI
Z4bPnlh6gMyR9gf5l38RT/RzejNC8i0xJqZ5+XySD+HKydt7O3HfbMPZihMk
Z0wN1j9T4GOddsyhZHYn0jRcGri7SX8lXJNvzuZh1e9TVbu+dYAZ++fMAkka
Jdvagw67CjFgPnWPMoeNgyXyYsrqNC4/LhIvoISQfDh/pz240GxUd64n6/5M
Xal8+j4+1ocfFMpHMRB51PryIJmbnH2pmQssCScYP/tx5xEbR5o/m2Z+oXDP
iLdNyZPMs/GaDYOHWPhpIzfXfxqN0bJ9/js8hWiNGt1nNcrGM0FjoP8SCuzU
m6eliHfVVZWdMTVtRc3ROWLOqyhYhEtdD1LjYU3JkbMWS9uw68CN9lhnCjoP
J6Uq9fOwM+HMln1BnYjKKesvuUAhs8dKXsqGjx6FLaNPLjLgU2opl2FF4Xj+
WY+9mTz86T7zSDGtA5qSrqc0/xI+SV9oNawhxPtOixt2u9h496pz5x1Sx2Kn
6twfXhLi9oGFWikaHHL+bT2arGnkmqf++ED6Ro49vjTmE1kf8bDEW8QvAvZV
aSzqp+B/Qtuvizf2/TLXMp4VmBM/3bz73ChtysdHo2K58IMMrDs5yPx0lcJG
a/eKgJt89BUouHcv6MIxP4FjXzDhw8JXJfFH+Zh74FVcyBsGjKfYrzl1TYi9
mpPd9x1lw7h+r+Y0kxo09uZ3qr4TglWj1rdnLgdHsp7PUhpfh6tXq0usMoV4
ccLpQhbx7U7rpprFR79jxeb7xUEkZzxdOmvUnnHQ/81/4ms0wCy9OvsxqSvf
3qneq0hdLZF95mLX3Ynanj++N8l59qQNI7dZ8/FujebQy0AGHIgHvSX879q8
IGZvPfGIqCMynNVjv29mQXskDYpQ0I8sTNpnzUVtv9cilbomZOvP05q8nPjL
CqNbW6fxUHjjy/T49FacbWZ8bEymMCvqjK7od+Kn/QLZN2VdMFsuWPl2IYWT
jCr/nzwuLhVp/Uue3Yq1+p8cPhdRKCu42HVuB/EcllOVryQL3+pMQsSv0lBu
1H8lZ0vD/FzL7UZKAFv39Bhn4kViLxM5634J4RKptNt3NxfBnl7LxRwp+MwP
L0ln8yD8/Ttwh30nTikv+prVIMTXm/rnelI4mK15fE+YVAPcE/6sZRvQEMyf
s/ksqevTwtb6vd/+9+//Mm+zurxtCqm3ji87LjgK0c2yV1SvY8Pf8L1Z9BYK
qi8k+vxCeBCxYU42+9IOG2PkOSwj+338XeZtixCO1h7OZ6dz4T47YmdbohAX
jhUm2RCurbhr8aLMoHbM/ap67oPpRhrrLqvxp2lT8O57xvH9w0VlvHzcUa4Q
Mm1mbqN8DtoWt+9jqDXCf1yo3z/1/3hMwW3yYpKntVW7Z46O/fnOWD/fLjze
x26moJGw+ZbzcwFiVmeI7prQjVtmNiUjGhSsrfUU96nwULZIUmKOVBvuxVmW
yxOu2/311WAMycO47l+pjn3Eaz43SEYQHv78IONRhAMP/oM5UtTEdix0yw79
RHggoNjko+9KPgz35w0HzGLA6PTyd7fI7x9kbusuXcGH9UttwesZDDT6Hf52
w4GG33LpB4HpxL+LJD1Ul/Bxf5nqsRf7KWxIf7rCv4aHu/UneuqXdcLXoNTM
vpHwyY+a9O9pHPzbY3ZaoNCAwTtn1Dt+U1gkbvtaS0WIKMeJlyIN2Aixo9dN
IHw1LYzxx+iLAEMFZlZrTbvhFypywSOTwvtzK3t+TBOA5eEzZ+ggEwGTj3EP
+dIorDn3L2A8jW5Pv0+GUgLCzWfPTw6hIGb/Zt7z/7htqPHogiIGtgZLeWeS
eqYyQr7ZDArRtjJqta0tF/9sPisuvU3DIeeYy/tTNBbZlP64a0BeF/fq5rXT
KNhKXSveeo3UzZoltWLvmiHjcPOMG/HKhibpx3aT+MSTXzWWv+jEubktJvaE
tz6Likd5POFDV91F6cPBLnh+UQiwzBfi0+FTT8PVOKgIbExPN62D/7pTMXP/
ez+tM+/EDm0+TOO+DAeoMTBrI8OnMvS/+VUZ7ujDR9X7LoeoGgZEk+5ozyHe
S/cEBG55L0DA33fHH6zoxu2hXWtr+4RQ3MV/0DWXiymro5bO7WvEHs+/q85+
IPmgblI7z0qAH6HforfJsjBx38smp0riU7iyY6+/ALzLUYKo8yys3XB+/5R7
QjCEic/u5JK+OMs2vXupFrc3lrTOrhRi8rRdOyK8OEjjveRN3VOPqu/6zw4x
hBg+rBBmVMGBdmFB54Q3Dahuq3l/lOTwv/INO1VJDq8TWyFvuqkGPOv9YisO
E6909fjkQXLo2u4D5yYSzrKoXpd0jMzxisylsZPn8VGooxaVJySePlUtfbcl
DZXwW+GvCHfsnuL9eU0cD6+sIuyDyVwYGv9eN/wGH1dOPfM9qNiFStsK9w2E
UztL1vecJ3NI8un0V1PFO/HWVSbinDONfWI6kjNzKURXNxmc281H+e9JMyN2
UmR+noy3TuchEAeeufl1gFF5V3HtD8LDz29I9PwTYOm+7qqv37vxK+ZjVtd7
CqxEE9Z2UwHU2KuPfx5mQj7fo1+1nOSq2GxJykuAozeDn9078r9fH/hgt5zj
eTLXtIyTHjCOkH7MU44Ve8lAB93es0GFhtJdt9+vCDf92SxumfaHgzvvtxqd
ITm/yE0yu4vLhWp83GTfGa140Xhy2uZ6su47d/YLEghvzC1721HHwu7Bk+L6
12lEl38NsiN9/NxxefzhCUJY/LqZNkT8XU9dzD/IkIu79+Lu6l5oguT9GRI3
SA44qkpovyE5wNd3F4SQHHgd3xZQKUv8juqwyEkn+925p2jB7Bacl6p8N0C4
d8HVgx6fCC/si1uZvWzd2Nf7TfeZnLg+vAdOVluj11a2YMvelytdHmzGfmnd
y9fm0dhzvVZm22MhGjKL6YgbHHjPE/e3IbmxpL9HuEpZCNvnn/JsdNgw0C+W
UiOcPEerwD6+gI8v8kyLCde7oHlpy6qvIxQq++JEQtSFqKptz4ndwYa1pCn/
C+nT2T58s8nP+NgbpzGL5dyFA4wNESnEo6f4fmdWNfGwPXeXPtOgE0ut2g58
OUTjqqV9WsZrCscWaoqUGZN5GxHotKiK8EZcdpCsLwdlbgqS3Ufr8XLl6pU6
NUIIOvefFYZzcHPcz0OzXtTjD+cA75I+jd3NJmkBcyn4qYUy/2VzMW1zvNkn
OdLXr28IBp5wsWbRxnclqi1INDz0dc8kGqvSO8dHWwnRVHKg1OEZG1+YAVvy
TwhhJT88Y2NLN7x/+sbryX77n+tt++5QB4ldFNJGIhiVL3iYdltl6NHjDiRW
bEySMSO+b+J44CzhRFZZr/e4LTyY9qdN/PuTcMgtSe1U4tfl6cYKBsSvV+j4
RXtYU7jCcprYkkO81ct9blFzBwxK0y6mEC76tvTK3UDCRexnQX/WBTGwokrF
v9WFRsSK/WrGhcQrXYeTfznyoVGrKTHvE4WFsVvnTj8gwCjLInP5ShaKfnS7
av2h0PZH889JVSG2RYc5fjYkfrDwhkuZJYXUZ5knxJ/ycPjGoXHtNzrwJ96R
bgmjsdNpsnGeIY2Ct0b2818IwNSydjQmnLlVuCOpnHDmhvozsisJZ8qvbwgu
Jjk28HbCfXYlB3JvD5h75zWgdbLh1cFwIeYtUvfpN2eja2tBuG19NQ5+ty3N
jCHzRlyqVeckjeurt8UZqI99vbFR5J+bsiziDy8Vyyc0crCP/65Qn9VAfK4y
4jLInJr5PMPGiQcZ8/1FL+Xb4Tnu3tvwICEONN05dXolG9EnkwquWVdj51kr
dXPi0TUjB4sKGBzwH6eIBk5phPn8+327N1PI+zVhUlkgD7u2/dBqfNGO8sbi
yy3niCeKpKpVWfDBuvlO5KsHA3s3FAZy31F4XZx3P3uVAHnHLluIv2diZ2H/
uBPVZL3HT1BKvCyAWcjhs0YPWPC/smNqdQCNC3t8zGwX0shrvTsi40jyz9JO
0ER84cQ9MrC0hJh4+OT2+r1snOrOrU37K4REVONIzWYulMU9D4/GN8EgNSnD
knjKsrROa/k+HiJe7tTPuNAJ5+EjvZabKBQIu/tW+pE6LFt/ZFtEO142Pg1a
mydE3JPwBa9VOUie7r32vnYdmq3UPg/bUHgRYd6QXshD9ze/pN6hDtj+2tLN
SiWeq3e7uKiFj60N71PqWrvQ3oOatmEK5wZENQ8vFqJ6/QD1WIsN/dyiaAE5
nt/pXe1h74U4dLsnRa107OvYlzxiTtbyItz1fENt6FI+FjipdEqKMVBucmL/
2V4Kl37zki+ICdG8S4Y7U9CNio8VjRtI/TVlf9B3UqMgYqVXGcrhwqvL+DjL
hAZz1o+cU2TdLg35thUQjjumvufnAsI5YpvvWn6cKsAfqXINvh0Tl76kG3Bf
UmiJTlxoLC+AZ7q2m64fE1mL9ttlMwiPhlnLqH4WwGa6tqeNydjva7HjOzwH
nlFoHrlz11ZcgIj9phePWjFh7/ov6rgv+X3y+FJTfT7qg25KnNQnvCdRbttN
5pHsyLF3LsSz5txLjB/JYuDwjMNxjiQHzC88fLV3ohCiV9RtLTq74e4qXZez
mEawaY6DfYkQx6+ZNg+Seh/0kJrQdoeGsyW7/GMwDZML8zfNIPx+W9KuwkCP
cF3h1NnmO3iYmPHnsUdmG9qDZ/uYkDzZfrasUZ/kyUf33XKXGjrwb2hCaXY0
jfh3f95dPU7jywhPLHsJ4e+d11yMUygoKBT2xNfxcUM3bKihYuzPlSLd1HYl
Ec+5XvJV5lQEhRK7ipHxDTyMeg+dzm2i0MR5Jhh+JICBxnef74MspA9FC/eT
/p37OOKycRMHSUvNLFR5Y18v+rSl+np5OAU1uSlz+f58PPu1TWUxmwGN1ln3
0+r/ex4+M848SYCJmodjTjex8LxTWDBCzvNK9duL35PzvGPW/dtdxGdzU0UC
rMhcQ5Vio8r7/+7DrTL1utGFtit7mq230XgQ4MyVINy9Z8dGry12PNgfdzXw
JfPxvrjiq2dkPrZO2fg8TpcN72PRvvqEe0W+vPyYMCAEc/nzw81WY/tXz+Ip
EaPSNG7HnT9284IQ8vYrOqsXcHDWZsb29xWkvusvbh09yUEjY47lkGU9pGxW
bznoRsG07+fM4ql8vB6IWzXpUyei2V0ufd5C9Oqk7JXsJd6SMy2kze0bJrf9
8r2/gcZlxwVT07QoKEVN1VAf4OJB6oh07WYaCgN3AkbMKOjqFXtxNXkYv8a/
QIacH5/Dijyzw3x0puYns58yEC4MqTi/luzXI6/pmzEP6XVJhVMutGHSdvVp
2oRvPzydei7jrAD+X9i/P/izUNdQaiJN/CJz2TyxM8QvwsUfbC8ifqFg1Vt0
g/TvppX54o2kfy2URNpHSP/Gmbs3n7WmkSFRb34wiEKV2J0ff4t4MPs6Kfpg
rBBnTVfY/73CRuugiPSmqhpUz8p7cGMPDYmXX0KmRlEI+3f02t5OHiSKrv6i
ST3fk1G5lZ3Hw/qeQ0E+rA4Myu5S0F9D5lqv5UeeHg8Jyqd7Z9m2Iebe5Jir
xK+OGkwIX/6T1MOHfo0wOSZez1yvmE/69JrkbddT6/igLzBEL6xnQNtU+ex/
9yvOvbL74V9VHmSn7l4VPqMNL/ST5BIeUzg1riPh9QjhXeYS1/BVTOj8KHus
TbZ/1nz+tZYePtToo9sUpZl4OmvOwJ1ACm91VCMHD/AR/CaOnRbDgNjChO8u
yaRvX22wexlHI7YvqSSYHD8jo2KiFvGUxom2PxW8+IgxOOqcXMHA802OR9SH
hGCp1Xf3qXNRY3rxjcL6JmiI7hk9WieEMd9lE+82B4vL42bO4dbjh/+sWfnE
C/Y7i3Ojiym0Joevu3WMj9MFblmLqwjnuxtuU79AvM71T4bw0thcLbUrUKjy
nIJKsP/8OVMEMI6Y7u20m4lUx/fjz7ApJM4Q91JsEcDPVDtpqk83YrRjvgx8
EOJoSJqd5mYOLo4Y2KY8qsPquas/rCfnOfj5YzpWj5xn953T7usy4J60PtIm
lIbuo9GnIoTjNCq7pmqnCrBI7brGNxkKsd6LIlzSuGhnDhbMEWtBiLzJ2zmv
iG8cP3F/0n/X73nW7NfyZ0KroiMxbAeFV9+XvAlP46Gccy3oocvY9+Fa1nzi
RurRqAtYE9ggT+GN5rUdfs+5GDJzquu6SWEf53ycxD0+Jkl4p1qaduGy5/Tn
yocppJRO7RD5zUNiQN/ulOudaDvAG9IxIP8/4UHPtX08/PI27Z4iaMPfROfo
wgKS804W1yZtEiCV51F2n2Yiffs7ujacRkCGkouzMY2S/yPuzb+x+P//8ahQ
SQupkKRFodKiZOnWIi1EWkW0iyhLEqnslC1KCMlWlKVok1Cism/Z9+3aZy4h
WiSfx/MP8D6n73md8/1pTtOcx8zc77f7bbmuuYZwVl9iNg+vpUfbzYm+t2VV
TyvUIblYLSe/NrwJa5Z6Kr45QcNg5Z4Dz7o4yFlpo3Bifyck1OzubJEj51XT
KlDqYKOOw/fc1teCg3tuHKqK4uPHF2scI37txrrbDdZW4/soc6U86rEiH1+D
FfZ+aKXAmlWns1KcDfcs1Bfs5WNZYqykzUkapUzTal1rDlq8DEQb9GgIibbF
h4Zx0NQcnD9Ndvw6MwdeZJap8fH2kcT0DaSfAWlWczVi2Hhy/MOT+cJ8BE2/
8MviMIX2Dyed8l4x8UBF0ehvIYUj97Wq5uxjQdi6vzuyvA6qan3qAeY0hjJn
a7z9QXRFx0PzhX8nTgq2Tb5MeGzqzG8780i+Y/+Wj0jN6MLBP6lynZf4iIye
FmlHdDW7S6Kss5uLsbyQncxjJK99PxT9MJKGeqmExHQBLh7+FHl6zZkP+0vn
WI9IPpDPdtgpIsWD21d1z9v/8clQPtNYk4OiyKKyAtM2rClcaqVN5iqWe2WV
5GEestqOHhKS7kVb86UxfQPiS6LiotkPObBQKz9/R78DmdY/P1f8ofDF6B1P
UZuNIRmRnOjAJqRNXHC+6hfR+7k63uIb2UhY92TLQuMmCBn3qa88ycerm5+X
Fj+l8Ud4qdJcJS4KEyPMPMjcGdUdrNpK5m6784MoSzJ34sGX4p22ER/Vp7fH
3IYDa7FiRbX97VhbueBEjgcfk9XXdUas4ONFRtnCbw48tET9dKr5L4/YORru
Izy6cpffwuMG4//OMdaiXe9RMB+3jNoylpvxsUvrTnvSKA8vZg566Dnxsd6j
Nmy5IB+V4b8qjcX+e958g84eVT5E6l0XD06isSvmeVyOCxu+ExoUa19QGL5U
4jN5MgvaCftKzR7Xjnteeni6y7z/fg/+/pXjszc8sJ5UrO+Z9++/G9r/d6rX
3yTCG9N6TYUJP9seiTYZFutBhDmvdsIhPorKtCWKSY55ttLpvu0LDn6M+bWm
kflVOipX916bh/cm8ypoevzn4pwli7clPuDjTspRa+3bfHwZqZ905jrJx+Z1
9UE7+Jhkf3TIivRHJKPaIU56/Dqvj2HeOarPx2ulVlbiaRop8q+CptlzoNvK
mqg5l/DnndsKOW/YODfPRVXh4PjPeb5Pb/z54yiNJTMkXqoUcSBaL9I0Y2Yn
9igLfa4KIbyXWXgg9BQf0tySIwpTxueHBAMhacl9RK9Xbktbf57GgJtNsYwn
B8f29Ay1zeMjlTu5xv8+RfLdtm9mZ1hwpzdah4eTPI5FBecILh4d35RHbaVw
9NJqPQ/iu8QuLEtvIr7rl6fYVoR2gx2xn/91HR8pW23CrcdI3sn8ssP0AhuH
ajsDlb6SfGFZ8H3lHR5O6V9pOfimF7I7Pof0EF3Ojb9mqadMrqPD+m20bBu+
xsHbn/j/mIjUz8t0aMz59WPSoaWkj1u+L9vbR+PVz139V//wIKWvv6q2lIHY
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
cOxf5jbMgqnKr8IQi1bsq9xke8uAhuGf3ZPO+LCh+cF6qdGZdpwfOqVRGc9D
ocMdVdZ/uWdlP56oPnEfn1KTnfIpkMy5F1U225L45O+9o83nu+AZkCT5RJHk
ZUCYVn0ZC80ufo2Xolsg92usUZqf9O6BUTcXfQorXS5ctgieOH8Tfsgud95O
cmr5H5nn19lwZl5tW76wA0uk7r4R5uPh2Mdmkay1FKrW+jvpHGeQeRFb93M9
jeUdppFm+9gwbpcTOTrchmtiOc/0SW79kD8+KzKIRh2zVKT+NfGZs0OTVx7m
YZv/3NRy0ksa2pyoANuJdW7dLhZ5dhYPD64esEl6SkFpeFjx6j0m4g9wLL1K
KDyRODXn9kYm5ifeqfocU4eLqwuvfKYoDMTLCywcZ2L3HL/r+qcaEZZQLVxF
dDi7UlLrzQcmGulB14WZE59fWtZ1dKpwGOm//l8P22wifcLGwuTlU5K3Vx/v
m0fybNOma1otZ5lY9UDzjFtkPZyXZrtcyCX5WOZYPleVi0LdmLucuB7obeKX
/b6Lhu6UM19aHrKxrbTG0vxcB3y+1jkLJNG4qTG22fQD8TXzLamtmd34QDVX
MnSJn/fleM1X/O/65MyFvU9ZSLXYn7NkHo04ixPNeT9ZaEvvkhrXb0XPwI57
R3NoaFui6u9MLipmxIyphvWgtFIxaArxn9xG7wrbeyx4966x7Z068XVcbNHO
G1O9eKBTZq5r+0U46FKR4QEeOa6C0phQwuuCYs8r3wtzYG+X/73jaSeO1+l4
enykMYXreHTtCS4kNGaz79j3Iog/I6H5JYV372w6W5czsZrdm/Zldx2eezr8
+cOlcK1kqPT6CBOn6tYn4mgjehMnL25voHHeTnEPL5X4f9cn9aC+Xri/XBmx
yp7GsNXnjks9bNSeeG2ia9mJQJ9BtzBLGgqfAjfzET39OXjl165vHfib+vcn
Y5jCcWEZRW8dFm6t0R5NsWnCqIlQsBfRn933q9Nc7Dgw9dzfuzK+C3F/mjet
Jb1Cpm1J8FFBFqrUIu0Zlxthn5gQ/O49D3G6v2pvbWtDjk4qX/jYPnTtvBVS
3Ebhk/0dP5siJsrcbw96+DQgYqahlRnx7ZVPsi2mEo4o8lVxEC7mIFDeJV7m
GwXWkI7LOTEW8k6MRD572gj+vOtLOHNpLLm6MjL6BwvFW+1uepL2L2KyZPcr
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
f+wm/fv3lHe/6si2Jj4mVv+pp5FwqPHuigZX4Ym/D3UnoXEfI4FHeuyvBSzi
K+mnWRtPkLnvGdcp/0x8ynS1ZW40m403vx98az3cifzAxmkntHl4PnfzjO0i
NARkHs6WuMjC07US6VnEH/sNRYz2EN6XTZ2jV/Tk3+8ncGO/FDo0efipp5Ay
heTDRiPt2XOtWbjG7XuQkcyD9XZ5hX6il3VplKJ5LIUD35zOJq3iwdju9BFN
0nvCjAbODAWwsMBI46PJORpaG7NCrx3goNaI/4PvrS64P80d3/3f/Ykc13b0
9nHxIs86WCa2DwsXHjNxnMGDgYmdfPF/94lYkTf32f6JdTJ/k3y6nSIPk3ao
vVyVTPK5XXW7ogcTj0TTkoKI72018Q0/XUZ4wDC2d44HB8f+dMRuvEdjg8eL
3vReDnaL1E4V+NmN0tNbPmc100hx2HM4lujAW7VcUWNSH7xKfNY/XcADt6jE
0raOwglfxTk//zIx20bPkUOed/Q6FLKc5FSZfuwUZX7SAxa7RGbr87C3ZbrL
gbU0ni5wMt4hwsbG9R0njm0muWPk9rjIkMafr0enbZpL8r/BTHRBCg9ZTeJV
e24TX9TfMVr6cOLrycXLbdUkDXiI+P1X7M060lM7VGcxxNgohHFEFdGxqmlh
+wsNGlJPvo3r9JD+quPlEqLAw5B/1r4phNeOlsc9qHdh4pVQ+LFadxqNC+Z9
F5TnQC5/u4NiWyfEteaPPiT6Ebvoe30T0c8hvnkGUUQ/fgofc24RP+n8/cyo
VZSDTWJCcqdeTuwn/k2Pp2+4Q97n+/XCjls8FNhlHXp/+99/L4C/UvHkc2ui
h9TLp5wuE73UfRHL5E6c118cpw9VuJP1l/Qq3tlOY0GU9rSZ2RyEzon3jong
Qdn9/KJfW3lYGfBlft4nLnQC1futd/IQZRPgdMKJ8IjqEmX69P/uPj+FVw4Z
zQsiOe4iFHNVjQdD/vL6HYe48FR2FFUJ4eGNgDvfATLHfb6fEjSu/vt9MCZ6
zHnM+e7oysP8X5/0DlXR6MryvhEczcEVy5Wvlkwhn982ZtUZwpWnH90R2FvM
wNKp+Z1aZH5HLAsLEwRJ/voyMupPsbAoNOrbT1Ueos3/rs18TUHZvDUxvPx/
x4FfnzM9X/bTGEz9uVNtnAshv2a+uZX//n3tf330/3xY15vok3IaYD0jXOAp
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
jK+bFNLF9ccQN0rL2f5tjcXgqH+2zSsrMhj2hUsTJ3Bof7K0eCCdivLizppG
qxEoMXnJVJmDwz6B7S18BA0mbwRd9uKeAHnHhaVMJeT3YsrP9Scx0DcYdqnZ
RoEGlr4ny29xiLt5w/jjRjo0heS/5rsyAdVH6u6Xk3CwXXVlEhykg0ZrT3CU
Hzr/htM/lVgRr9qIDFgfw8BX+UrB3wQSdAMpQQ2dT57cyK7HqVSQeH/N9YvR
COBB62YFkf9Gc+cXisnRoCnRuvMn+3/3WT/bTYkOugS4q8Yzj+7EgSn1+8ev
FMbrrmL969x2xFfMhXmHn5vjYNdJWWowpQJ3p72cMsojCU92rCh0kqGxOvKK
YBfjPKI+nDRjXo+DTLHU+cDzdPilVvdT8NAkxD103xWaTEDte6Uz/54Xe+vZ
DX6TAAxy1f+YH6dgsGqzZugOjQy+3mwOv5V6ob6wVaRJkwDZlUvDDxCfco17
176toICCl+aVTMRtjbI3Wz854aBxwsOdjvK6ZvHztv3o/Y/d/FIKjshvtbWS
v15G+t0kkHQ8C/Gtn9HsyCQN+g1zuCLnx2GK6pym34ED9/QT7oRodJ41Qa0X
yyZBLfXv5N8XSAdeHZ/umKVBwfMzQr3C//25f6c+G155NIdDY97j4Whu5DMT
B/wKFqYgjmVzvfFn9LkeOyLUzehQJtdp6rB5EnhENapyJ3Gw2t1L0e+kAwjL
ntRznILvdAf2lF4cFnSdjT9n08F8Z/TYMDYJ+gXZCtTzBOyhRJTnfcAh/nQT
T6olDeKG+X/bodyr+sjyZLwkOk5eacH16Ak4N3sqgY3Awf70/t1ZS3So/DCf
p/tpCvCXvpucEf8UnM2Wcl8hQ4ZvXt2Vq71gzL3gO3uEgCfPH315hfgrQ0On
x0CBCgM/xH6GOiPetlLR8/5NhST75rPOsaPwuPD/tXbe31j//x+3o4zsZCRF
GQ2FhvHQEEVlpEKEJDOzEqVsClmVIiklSsOMCJWU1SB7u1zzNawyinyf7z/g
+pzTOd+fXuc413mN5/PxuN9v9+vpdT3VHLyRX/epnL1qjPw6sjoo9xnya42c
qM/PIgioeruu++NpFljuzX00mc++ngNe0YP2XUD9+1jA/QDipu25qUamPBhc
bgose/abgFmvT1v91uFg6LvnbqouDfzOeghIaZJQznA2X/4Lh+y6o0EelgyI
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
SPa84IwyASmSKZ8zv7Ovn/8DqUv8GQ==
   "], {{0, 0}, {193, 193}}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{{{192.5, 
       FormBox["1", TraditionalForm]}, {143.5, 
       FormBox["50", TraditionalForm]}, {93.5, 
       FormBox["100", TraditionalForm]}, {43.5, 
       FormBox["150", TraditionalForm]}, {0.5, 
       FormBox["193", TraditionalForm]}}, {{192.5, 
       FormBox["1", TraditionalForm]}, {143.5, 
       FormBox["50", TraditionalForm]}, {93.5, 
       FormBox["100", TraditionalForm]}, {43.5, 
       FormBox["150", TraditionalForm]}, {0.5, 
       FormBox["193", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {49.5, 
       FormBox["50", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}, {149.5, 
       FormBox["150", TraditionalForm]}, {192.5, 
       FormBox["193", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {49.5, 
       FormBox["50", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}, {149.5, 
       FormBox["150", TraditionalForm]}, {192.5, 
       FormBox["193", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{314.54541015625, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.8629119795292673`*^9, 3.8629124225295153`*^9, 
  3.862913914952311*^9},
 CellLabel->
  "Out[1038]=",ExpressionUUID->"11c70205-4020-4caf-98a0-f7fe87b3ef96"]
}, Open  ]],

Cell["Number of negative values in the matrix above:", "Text",
 CellChangeTimes->{{3.862913958484213*^9, 
  3.862913971115251*^9}},ExpressionUUID->"fb924e5a-572c-44a3-83f4-\
ac2785ecb149"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Sign", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"WPSMatrix", "[", "2020", "]"}], "]"}], "]"}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862913952930778*^9, 3.862913953810748*^9}},
 CellLabel->
  "In[1039]:=",ExpressionUUID->"6f5e541d-cbdf-4e4b-a16f-b4222eba3b96"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.862913954430395*^9},
 CellLabel->
  "Out[1039]=",ExpressionUUID->"c11e64bc-5b6f-4aba-87df-1827bc462790"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["International Trade Network (ITN)", "Subsubsection",
 CellChangeTimes->{{3.856208214872087*^9, 3.856208224255505*^9}, 
   3.856212615831685*^9, {3.871238282833179*^9, 
   3.8712382838052263`*^9}},ExpressionUUID->"eea8719c-7969-4f1e-85f2-\
2ccc7847ad4f"],

Cell["\<\
Display a graph of the international trade network for a given year. This \
shows each country\[CloseCurlyQuote]s primary trading partner.\
\>", "Text",
 CellChangeTimes->{{3.8562119349632187`*^9, 
  3.856211962400166*^9}},ExpressionUUID->"ffcc7274-2f57-46e0-8184-\
206a383dbfbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ITNGraph", "[", "year_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "T", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"OneHotEncodeMax", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"TradeMatrix", "[", "year", "]"}], "]"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"T", "=", 
      RowBox[{"Sign", "[", 
       RowBox[{"T", "+", 
        RowBox[{"Transpose", "[", "T", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AdjacencyGraph", "[", 
      RowBox[{"T", ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"First", "[", "#2", "]"}], "\[Rule]", 
            RowBox[{"CountryName", "[", "#1", "]"}]}], "&"}], ",", 
          RowBox[{"Range", "[", "193", "]"}]}], "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.856211965197557*^9, 3.8562120006333933`*^9}, {
  3.862428111207018*^9, 3.862428113073558*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"3b1f0423-899c-4ed3-85a7-f353078180f0"],

Cell["\<\
International Trade Network, 2020 (with Chinese, American, and German \
clusters).\
\>", "Text",
 CellChangeTimes->{{3.8562115400984592`*^9, 3.856211574015432*^9}, {
  3.856211628327057*^9, 
  3.8562116491095037`*^9}},ExpressionUUID->"2d37da66-5734-41ea-b069-\
ead341cff40e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ITNGraph", "[", "2020", "]"}]], "Input",
 CellChangeTimes->{{3.856212005071862*^9, 3.856212007746786*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"cbfdf811-749a-4783-8dae-293f7dbfa198"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
       108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
      122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
      136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 
      150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
      164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
      178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 
      192, 193}, {Null, 
       SparseArray[Automatic, {193, 193}, 0, {1, {CompressedData["
1:eJwt0mkvFwAAx/E/Lf7kyK1jy33kUaUn0mqjetjmJfSUSORWWs863kUoJE9a
ah6UTkWNTopEx9a6WDoNny2/7fMGfvumH6oqqwwJBAKDgf8LZQ1rCSOcIBFE
Ek0MsawnjngSSCSJZFJIZQMb2cRm0kgng0yyyCaHXPLIZysFlFPBYSqp4gjV
HKWGWo5RRz0NNNJEMy20cpwTtHGSU5zmDGc5x3na6aCTC1yki256uEQvl+nj
Clfp5xrXGeAGN1e/vcVt7nCXe9xniAc8ZJgRHvGYUcZ4wlOe8ZwXvGScCV7x
mkmmeMM0b5lhlne85wMf+cRnvvCVb3xnjnl+sMBPfvGbP/zlH4sssUyIgMII
J0gEkawjimhiiCWOeBJIJIlkUkhlCxlkk0MueRSwje3soJCdFLGLYnazh72U
UMo+9nOAg5RRSx31NNBIE820sALLelzH
          "], CompressedData["
1:eJwVTvlXTHEcfVNZJspWMiHCVRQlyVIPHypKvaiRUlqmxVoRFWYoRpa2V1IJ
yZuReeS1mPDmk8J/5uvce+65P9xz7411NBU6giRJclkkSVByf7HLw2Cbykh/
RnY2waqTFVZspC1dj+cg3ewBGECINdwWvWXrtu074ncn7j9w8NCRo8dOZJ8p
OHuuuLTcUX/56rXGptttroftj90vunrV/pFxzfPx81djeu6nyfOLf1gWNYQA
kcyM/0AGrId9wXHJ9Nr7DfCHRm1M2Jskn8yzl9XWOTu6+4ZGx977/CCRV+aF
kHNd5Kn7jCnxqJODVtANUaPCIKhGra7BT5UEaIBp94gI92HUq0EzlDWUjxkx
SD5YwEVstQkf4wU1L1uNkkvgWdYpGDLdMT8wEd5uQPWV1rt/0fBdbumBqWfQ
o01Vrz5NMiw6cLHi3kIBXC9ZPk418JgI24zrbyZ+/N7Dv5YsX7lqbUQsdu7a
l5KalpmVk6sUFp2/cPPWgydPBwbf6bMBnA4YMKH9Awn3lAI=
          "]}, Pattern}]}, {
      VertexLabels -> {
        117 -> "Morocco", 68 -> "Grenada", 146 -> "Saint Lucia", 83 -> 
         "Israel", 188 -> "Uzbekistan", 154 -> "Seychelles", 4 -> "Angola", 
         172 -> "Tanzania", 99 -> "Libya", 169 -> "Syrian Arab Republic", 57 -> 
         "Estonia", 11 -> "Azerbaijan", 152 -> "Senegal", 129 -> "Norway", 56 -> 
         "Eritrea", 116 -> "Montenegro", 39 -> "Comoros", 26 -> 
         "Brunei Darussalam", 145 -> "Saint Kitts and Nevis", 100 -> 
         "Lithuania", 32 -> "Cameroon", 50 -> "Dominican Republic", 85 -> 
         "Jamaica", 17 -> "Belgium", 125 -> "Nicaragua", 184 -> 
         "United Arab Emirates", 18 -> "Belize", 147 -> 
         "Saint Vincent and the Grenadines", 126 -> "Niger", 92 -> "Kuwait", 
         190 -> "Viet Nam", 72 -> "Guyana", 108 -> "Malta", 5 -> 
         "Antigua and Barbuda", 122 -> "Nepal", 132 -> "Palau", 135 -> 
         "Papua New Guinea", 66 -> "Ghana", 186 -> "United States", 153 -> 
         "Serbia", 139 -> "Poland", 138 -> "Philippines", 41 -> "Costa Rica", 
         109 -> "Marshall Islands", 165 -> "Sudan", 62 -> "Gabon", 130 -> 
         "Oman", 134 -> "Panama", 48 -> "Djibouti", 87 -> "Jordan", 112 -> 
         "Mexico", 27 -> "Bulgaria", 175 -> "Togo", 174 -> "Timor-Leste", 149 -> 
         "San Marino", 73 -> "Haiti", 171 -> "Tajikistan", 159 -> 
         "Solomon Islands", 136 -> "Paraguay", 55 -> "Equatorial Guinea", 157 -> 
         "Slovakia", 161 -> "South Africa", 42 -> "Cote d'Ivoire", 34 -> 
         "Central African Republic", 167 -> "Sweden", 142 -> "Romania", 187 -> 
         "Uruguay", 44 -> "Cuba", 69 -> "Guatemala", 78 -> "India", 127 -> 
         "Nigeria", 82 -> "Ireland", 166 -> "Suriname", 151 -> "Saudi Arabia",
          101 -> "Luxembourg", 143 -> "Russia", 59 -> "Fiji", 96 -> "Lebanon",
          189 -> "Vanuatu", 156 -> "Singapore", 95 -> "Latvia", 24 -> 
         "Botswana", 35 -> "Chad", 3 -> "Algeria", 61 -> "France", 40 -> 
         "Congo", 49 -> "Dominica", 123 -> "Netherlands", 168 -> 
         "Switzerland", 20 -> "Bermuda", 19 -> "Benin", 60 -> "Finland", 89 -> 
         "Kenya", 9 -> "Australia", 46 -> "Czech Republic", 140 -> "Portugal",
          176 -> "Tonga", 137 -> "Peru", 30 -> "Cabo Verde", 181 -> "Tuvalu", 
         114 -> "Moldova", 74 -> "Honduras", 170 -> "Taiwan", 1 -> 
         "Afghanistan", 38 -> "Colombia", 98 -> "Liberia", 65 -> "Germany", 
         173 -> "Thailand", 118 -> "Mozambique", 144 -> "Rwanda", 124 -> 
         "New Zealand", 2 -> "Albania", 43 -> "Croatia", 16 -> "Belarus", 12 -> 
         "Bahamas", 21 -> "Bhutan", 13 -> "Bahrain", 76 -> "Hungary", 37 -> 
         "China", 192 -> "Zambia", 103 -> "Madagascar", 113 -> "Micronesia", 
         63 -> "Gambia", 86 -> "Japan", 133 -> "Palestine", 90 -> "Kiribati", 
         128 -> "North Macedonia", 75 -> "Hong Kong", 91 -> "Kosovo", 94 -> 
         "Lao PDR", 28 -> "Burkina Faso", 77 -> "Iceland", 88 -> "Kazakhstan",
          119 -> "Myanmar", 163 -> "Spain", 97 -> "Lesotho", 80 -> "Iran", 
         102 -> "Macao", 121 -> "Nauru", 105 -> "Malaysia", 23 -> 
         "Bosnia and Herzegovina", 6 -> "Argentina", 14 -> "Bangladesh", 106 -> 
         "Maldives", 36 -> "Chile", 110 -> "Mauritania", 29 -> "Burundi", 177 -> 
         "Trinidad and Tobago", 10 -> "Austria", 162 -> "South Korea", 158 -> 
         "Slovenia", 70 -> "Guinea", 67 -> "Greece", 185 -> "United Kingdom", 
         104 -> "Malawi", 47 -> "Denmark", 193 -> "Zimbabwe", 22 -> "Bolivia",
          81 -> "Iraq", 148 -> "Samoa", 107 -> "Mali", 7 -> "Armenia", 79 -> 
         "Indonesia", 180 -> "Turkmenistan", 64 -> "Georgia", 120 -> 
         "Namibia", 178 -> "Tunisia", 191 -> "Yemen", 150 -> 
         "Sao Tome and Principe", 155 -> "Sierra Leone", 31 -> "Cambodia", 51 -> 
         "DR Congo", 54 -> "El Salvador", 53 -> "Egypt", 160 -> "Somalia", 71 -> 
         "Guinea-Bissau", 111 -> "Mauritius", 141 -> "Qatar", 131 -> 
         "Pakistan", 179 -> "Turkey", 93 -> "Kyrgyzstan", 25 -> "Brazil", 45 -> 
         "Cyprus", 15 -> "Barbados", 58 -> "Ethiopia", 183 -> "Ukraine", 182 -> 
         "Uganda", 164 -> "Sri Lanka", 84 -> "Italy", 115 -> "Mongolia", 33 -> 
         "Canada", 52 -> "Ecuador", 8 -> "Aruba"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxtWGk4le0WNrNttj2Yx723eVYaTNkriQhFJafMqUMoGU6SoaIRfU0kTUJK
IfkalD7ekCgkQxkyNkglJTJkOF3Xd8758a7zY/94rvta613Pve69hofjv9Nt
qyAfH1/575/Af37cZO9f/SaiMHNGLW6ruhLhLj25P3ITFQKNb/CLNMoSZNyw
quHD9GIhePKablyvqUo4eS9wHD6gAsvGzNzesTWIpWXHNtOyVMB9SXtQf70m
sd9vcXxjrAQM7Hu/+/lTXULCv0zcR4MJrdcCvTVv6iCceZePu15YFAJ8Yhbu
TtMjuPLCx4u2MEHkcEtyh6EUsS9mVFhwHx1irk2H+x9kEM3nqhr8fNlwfkqR
F9cjSew79jqxJIQNL82ye1uYDOLkOknKUAQTbEVrk3zuKhFjz4IVz3cwQC89
ve0gyBMplsPdzUt/8pzs5fqorixCbt9MsVYpPxgZ7h7IFWESS+myZps+s4Fu
NLwgdjkL+TceWTdt1SYMIXOTb5zbWSg+Mn5KkL8x4+Y8r2mVwmhVhgzCv3Xu
DSpaN8eLazjsnVUtTTzXesf5VKAAsSNltQ1DugTfJEXg/gIliP/isjG1SYfQ
D83lLOBnQy0ln+WRg/lX1Tub6VzIgc0ptbS3zTj+r/w/JMNTJCGEU/lpculY
hdGH/lJ/SUnwHP0rI3cNPyHpE3bNV48O2atLm9fPSKP7xa+Kemw5yQaxMwXH
dwRLI/920k/Oin/7ySswD6M92cNE/IoG+GQ3UbmQOB6icExbj6Apq1GT17Mh
KFqzw79fl+A/9/NQeR0HAkqYaXe0GMj/Xw56qndTNcHvXOHFn0tphI1LxqJs
IQ3IM52dm4+kE4MaJxXeRHPghOVbYXCRQvaxDlqr52I1QeGsb0/cNjqyV+C9
v7/CkgX3V4QHcL2wfr5HmLiuYSrA/KoNnyOP6KD8ZBQtT/lROMGzzbrSbxou
Rvywv6oaosAPITaUkWhFKvJH5peMby9q+URPZ0Djy7X55uVKRLZnY+7F9+Jg
niyc7vl/9Dckotdp2KQINL+9XqdctFF8Mfvtd95U0ITm4k0BXvpyhP4lr8K+
e+owK3ZheeovaSKJ4UCflZACq5HHD/OO/ET6CPtbN7z204bP0jK1iWIvmpov
hw+cjlk0JdRrE1+UNZfUTUhAdWb4oToqHcW3q//bpZ3DdHATvZIn04z1dajV
PcHGmgvThRKOk644/0vDGeKh1ixgdTICetWw/2ilbt4vLXG46COUEzfIRPiz
kS3ZBalMsLq0XiTdThLh5PNLt8GCu/U0sLOXlJKiSSB8Z/1cr+8gHWyP2VIO
6+B8nN720EDVkQqyu3WDe1RxvKGebUfvpjEga/EJq4U3qAhf+JoWy6NKQ4H0
OreGQGzvZOlS1xQvCRr1cZW7pnF8FVdzFq2IosK7o9e82lmYj1kRGX+mAxPk
p5zPEpk4flrgwHZhdQlgV1S792lgfkb+7Fj4j0cMuNloqLFAWAbhIW9mtcqr
KJDA59z/YgDXc+W0AY+6nyygRwZSt1Hx9zP/TBk+3keFSbEOnQ4rjL9rnBhd
nyAB3IXZtpFjFIRPx05G69dJgdnJ1r10KRrCTR/Yu1l00SFSK9gsk4P5L2IW
s1PiaeDZ2W1S/RXr9bbgqySf83QQ8aipLt2F77ett3gsYTMLUvftCXPiYP46
/tqb90JYGoZ+CQ86mOH8mBoaJdIfSIJ/9YjIQhP8/fZnXXKPgynw0mPw8rgK
tt9hoZfmK8oE6VfF5baPsH7iWu5bLMujwaV2o68SPpjfjUWXw89GSoJ4eGlE
fgT2vynfZlx6lglHArIarw/h+90zKpF9GsWCT7KDmqdHsX/GxW0b/G2ZkO42
Z7NkGPPvXv6vjqZhCnzsn2p5UoDxwlvLjBzUqKB4lF2pZorzu88jYseN57/n
j/6gUvdMzJ9IVGD3yCgDUsyja0R8MU6ej8j4iZXc4vyY3/X5RqejohX+fqjk
aouZVhqEzKcKXTDF/H/MbQ2pWEyBqteWamOvME7un0h/nqfP+XJZUDM7PCqr
gvldsmrl2KOLEuC36YbSKnsc35HnXzr3c8TBe1XTYxN3nD9y/0Lz2Ed2ebY4
DdwPRy0P2SKHcG8Z1zaXl3S412yVpdCA61OoVAiXnc8CmDPcQ2/F8XVCEqvW
jAmn0oLadFPw/SkdoNpVKQydrRVru/pwfhb5DzKK1tEhvDC05KEAzq/AIevX
0TQ6lCt6U2oS8f2cWFnbm6ylodU1bzvHBfND7o9If6T+RcZzy16aXRyiwxqd
rcaUKBx/X9f8dP5yFsykdCwSjML9KpDatTYsSAIqk0pzViZLE7daP9wOcOKA
0+iaGM03eP6LPVgm1xdAh7U/DDPPRWmj+XyKuXuf6XsO3Kqp3nhHF89Pt3d+
3RmnLw9fFRPtzk/j+SLeJGv/Z1kNyKw0PiXoIUpYtW2P9sjnwgGdnGbpNnGi
SoQlES2iBF1dJh/OLdJD9uPTNeob2lWge9ftzyKl2L+z/YdbU7U08H5lwrR+
pYPiZ3k0CVlEqYFiwKJC0zYaij9yyHAq7vd8Txssu1zZh/EML5OykXA2fO21
fCLwkopwt03fml98VwP9JPXMkDIJhE/fl1vcF6YB6uxioZ47WsTGpD/4Cga4
EPryrZeKjjY6Pzg4+Nk+mw3Fdjulw6pxPsj3J+O+5W4nY5zokOUZ9bH/Ft63
wmDOTa5EDPR62Ac2CGD7f8UcbQkd/l3/LwZU51B0iGUlf7zLdGbDj9z2Q4oX
DIjrY29bysxUYb5r/DzFXR/FUxViW/ZsmTKoZcZxVHg4X0ear278vlgVru8P
Ea08jO9D3l/IuA/4Z15MV4ZTIs8qDISwfd6eqSB9VwWolrd5dTlZC+Ezlo/1
th6QB1tFMNySi/cp8v5Bxpl9/Xd4G5XhE58xf6oR1ushaLiSEqUCrgzF929q
sf1T5w8RxG152HTXenPqd2zPKDp8wEVGFZYYbV6/xhzbuxRLBXcZK0EM/Z1u
jiPm3996rY/AkBxYtTysOz2F+Ym1NxfYclIBhmZrHZOv4vyQ9UfGyfkX6tMe
2Qoc2LIy3WP6Nh3pP6nnfMLa7WyoNzYgxC8w8X6oEGFw6owmmNz8Mtq3nIH2
L/lyut+tH3TwrOEG7XqhgOqjb+mFhykWbDjqsimJ+Izr21WdF9kFPRwQ2aZ5
6Z4UxoXcVLzsqzhwqvXNcbsBvH+S43F6WxUf8lwTHLX3mq3lx/si2T95Hg37
Zwbtng8Fxn7RXt9XFyKuvbE02p3DAd+DFSPdgpifuHoTq+YbXAiO1ph0mKAR
jcddvQJ1NMAuec/eO1skEI72I9L/6Yhw1tuCL6qgsODO8hJDDeJS1uXUh5Jc
qA0yPbMjAscfJpynfklTDfwW3zAouYXxb/7/sPyT/ZNXs0bl4LANnk98j/3z
j8QDAtDc2ZtQ9k0B9edvQ2cqErzHeA6SomJUOfw+UH+CFRD8ap5nrpu/k6GL
7cNy/ZRF5OWh5/HAFYcxDfT/r21OuFzH04Sp3h9uLbYyaL+dFmw8Ert0gses
lHQy2iCC5hvxosDN1RZqcLJ2sLVuFte//+6/03UG4rsjKched23ax4EkKihP
djjbr8bvKztG16xwXiAJj/zqzLW7FdH8tGJG71PcCQ6M25Qkxurh9y2huZhH
izZyoPoq43vVZayflt5EtSEjORDu3Wxom2CA6o/yxPcP702UIKWJpRdDM0T1
pfR6epjRaUFgPYqPqnLXxv1j1bfCIedp3vRKrgfnrTC6P8i47HY9NsaLXvdi
zKpBFOHP0kwDMhjzPDe+svgf/vIov+R5P7r8RNdrG2HwJZTbdEpFiEeyCYLj
HA488PIx52/A/bdKrs7EYp4D/OFXaXU03F/t3t8ub/BTAyEp9dzQJZi/dW83
Dz3lcqHdxMBaPhjj5PcOMj9ZwUsSa7rZcKBUb3RlIZ4fjFzTt0bu5wKxbP7m
sWAhIusTX6tiNgcULf2WXvtOIZrPXbc4Xvdbf2dO0yVCcf1K4XtqdWhAA3IK
HNRVkmWRvpXvGG9kNUqAU1Hj6oK4CaS/68GRD7Z3GPzv/e/vs97/znLxrV6U
DDZYz+h2r1iA3/fI+SyO0G/hpo3x6hcbhnXOiSM9z5UPxP8KpYKFmKPfwuOK
hM0F+fAlVyjgOdN7XSxjHMWnFPRmdj5NA06qnOv/noHfp8hnlUMDoxPumlAR
/3lqTBrzQY6frLc/+XLyx634wXaiTIOToIDyQbZnVof0/JUgBvJnbKr9n06i
+Mlnf7u8g3uyxeF699dFFSsnK8jzMNk/GdeYHZqXqVGHhY4nrEbeCRP/Bow9
xOs=
         "]]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.8988685262896903, -6.78456683640729}, 
          0.07582870843279127], 
         InsetBox["\<\"Afghanistan\"\>", 
          Offset[{2, 2}, {2.9746972347224814, -6.708738127974499}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.3778583138114975, -10.064241952373886}, 
          0.07582870843279127], 
         InsetBox["\<\"Albania\"\>", 
          Offset[{2, 2}, {7.453687022244289, -9.988413243941094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5609407291451025, -12.890224215283926}, 
          0.07582870843279127], 
         InsetBox["\<\"Algeria\"\>", 
          Offset[{2, 2}, {3.6367694375778936, -12.814395506851135}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.597345561085634, -3.897387592690282}, 
          0.07582870843279127], 
         InsetBox["\<\"Angola\"\>", 
          Offset[{2, 2}, {4.673174269518425, -3.821558884257491}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.188246183516558, -3.7336373262507556}, 
          0.07582870843279127], 
         InsetBox["\<\"Antigua and Barbuda\"\>", 
          Offset[{2, 2}, {8.264074891949349, -3.6578086178179645}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.613193646849042, -6.927122187336696}, 
          0.07582870843279127], 
         InsetBox["\<\"Argentina\"\>", 
          Offset[{2, 2}, {4.689022355281833, -6.851293478903905}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.38862883272279, -4.8291468633850165}, 
          0.07582870843279127], 
         InsetBox["\<\"Armenia\"\>", 
          Offset[{2, 2}, {1.4644575411555814, -4.753318154952225}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.459672692006377, -4.813950328923525}, 
          0.07582870843279127], 
         InsetBox["\<\"Aruba\"\>", 
          Offset[{2, 2}, {8.535501400439168, -4.738121620490734}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.729120212255928, -4.9612345244382645}, 
          0.07582870843279127], 
         InsetBox["\<\"Australia\"\>", 
          Offset[{2, 2}, {2.804948920688719, -4.885405816005473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.418861894178643, -12.956648133221954}, 
          0.07582870843279127], 
         InsetBox["\<\"Austria\"\>", 
          Offset[{2, 2}, {6.494690602611434, -12.880819424789163}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.002327967950427, -10.319031347641513}, 
          0.07582870843279127], 
         InsetBox["\<\"Azerbaijan\"\>", 
          Offset[{2, 2}, {8.078156676383218, -10.243202639208722}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.83848269553442, -4.955944281568999}, 0.07582870843279127],
          InsetBox["\<\"Bahamas\"\>", 
          Offset[{2, 2}, {8.914311403967211, -4.880115573136208}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6935769166741386, -1.26366512014837}, 
          0.07582870843279127], 
         InsetBox["\<\"Bahrain\"\>", 
          Offset[{2, 2}, {3.7694056251069297, -1.1878364117155786}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.041384330972289, -5.24641732454157}, 0.07582870843279127],
          InsetBox["\<\"Bangladesh\"\>", 
          Offset[{2, 2}, {4.1172130394050805, -5.170588616108779}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.484830899779123, -5.104913930209484}, 
          0.07582870843279127], 
         InsetBox["\<\"Barbados\"\>", 
          Offset[{2, 2}, {8.560659608211914, -5.029085221776693}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4336038521298788, -4.618915773009956}, 
          0.07582870843279127], 
         InsetBox["\<\"Belarus\"\>", 
          Offset[{2, 2}, {1.5094325605626702, -4.543087064577165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.02307612814367, -13.077225489187873}, 
          0.07582870843279127], 
         InsetBox["\<\"Belgium\"\>", 
          Offset[{2, 2}, {9.09890483657646, -13.001396780755082}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.894031732179885, -4.28779824186913}, 0.07582870843279127],
          InsetBox["\<\"Belize\"\>", 
          Offset[{2, 2}, {8.969860440612676, -4.2119695334363385}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.776772444402804, -3.7773258513072254}, 
          0.07582870843279127], 
         InsetBox["\<\"Benin\"\>", 
          Offset[{2, 2}, {10.852601152835595, -3.7014971428744343}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.736054228751938, -3.913208051678744}, 
          0.07582870843279127], 
         InsetBox["\<\"Bermuda\"\>", 
          Offset[{2, 2}, {8.811882937184729, -3.837379343245953}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.744127605842316, -4.100089525838279}, 
          0.07582870843279127], 
         InsetBox["\<\"Bhutan\"\>", 
          Offset[{2, 2}, {10.819956314275107, -4.024260817405488}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.8078755124731964, -6.8409515089742206}, 
          0.07582870843279127], 
         InsetBox["\<\"Bolivia\"\>", Offset[{2, 2}, 
          {4.8837042209059875, -6.7651228005414294}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.267880695898371, -12.266517023239883}, 
          0.07582870843279127], 
         InsetBox["\<\"Bosnia and Herzegovina\"\>", 
          Offset[{2, 2}, {6.343709404331162, -12.190688314807092}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4799685934803275, -3.0557630183648445}, 
          0.07582870843279127], 
         InsetBox["\<\"Botswana\"\>", 
          Offset[{2, 2}, {1.5557973019131188, -2.9799343099320534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.462505734280729, -6.063010537448955}, 
          0.07582870843279127], 
         InsetBox["\<\"Brazil\"\>", 
          Offset[{2, 2}, {4.53833444271352, -5.987181829016164}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3621170878864897, -4.9612906876453104}, 
          0.07582870843279127], 
         InsetBox["\<\"Brunei Darussalam\"\>", 
          Offset[{2, 2}, {3.4379457963192808, -4.885461979212519}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.703299912276386, -11.653460427580765}, 
          0.07582870843279127], 
         InsetBox["\<\"Bulgaria\"\>", 
          Offset[{2, 2}, {6.779128620709177, -11.577631719147973}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.550136067846996, -5.792348449740716}, 
          0.07582870843279127], 
         InsetBox["\<\"Burkina Faso\"\>", 
          Offset[{2, 2}, {10.625964776279787, -5.716519741307925}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.881342055539962, -1.4083621306626375}, 
          0.07582870843279127], 
         InsetBox["\<\"Burundi\"\>", 
          Offset[{2, 2}, {3.957170763972753, -1.3325334222298462}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2636651201483708, -11.8019240551602}, 
          0.07582870843279127], 
         InsetBox["\<\"Cabo Verde\"\>", 
          Offset[{2, 2}, {1.3394938285811622, -11.726095346727408}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6209892492366773, -4.011510945076854}, 
          0.07582870843279127], 
         InsetBox["\<\"Cambodia\"\>", 
          Offset[{2, 2}, {3.6968179576694684, -3.9356822366440625}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.231871112301051, -5.205160716608434}, 
          0.07582870843279127], 
         InsetBox["\<\"Cameroon\"\>", 
          Offset[{2, 2}, {4.307699820733842, -5.129332008175643}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.121601085042368, -4.330048710845853}, 
          0.07582870843279127], 
         InsetBox["\<\"Canada\"\>", 
          Offset[{2, 2}, {9.197429793475159, -4.254220002413062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.810962827029065, -4.031125606145468}, 
          0.07582870843279127], 
         InsetBox["\<\"Central African Republic\"\>", 
          Offset[{2, 2}, {4.886791535461856, -3.9552968977126772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.269033907828483, -4.726065203802048}, 
          0.07582870843279127], 
         InsetBox["\<\"Chad\"\>", 
          Offset[{2, 2}, {3.344862616261274, -4.650236495369257}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.638353860234881, -3.6594658369611164}, 
          0.07582870843279127], 
         InsetBox["\<\"Chile\"\>", 
          Offset[{2, 2}, {4.714182568667672, -3.5836371285283253}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.12501153271171, -4.380258366154402}, 0.07582870843279127],
          InsetBox["\<\"China\"\>", 
          Offset[{2, 2}, {4.200840241144501, -4.304429657721611}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.649205741336429, -4.964986716393991}, 
          0.07582870843279127], 
         InsetBox["\<\"Colombia\"\>", 
          Offset[{2, 2}, {8.72503444976922, -4.8891580079612}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.098511095829391, -11.729687517270264}, 
          0.07582870843279127], 
         InsetBox["\<\"Comoros\"\>", 
          Offset[{2, 2}, {4.174339804262182, -11.653858808837473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8499558933348017, -3.506864659874654}, 
          0.07582870843279127], 
         InsetBox["\<\"Congo\"\>", 
          Offset[{2, 2}, {3.925784601767593, -3.4310359514418627}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.94765855268041, -3.8953635079313567}, 
          0.07582870843279127], 
         InsetBox["\<\"Costa Rica\"\>", 
          Offset[{2, 2}, {9.023487261113202, -3.8195347994985656}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.225955486227675, -4.789577622230869}, 
          0.07582870843279127], 
         InsetBox["\<\"Cote d'Ivoire\"\>", 
          Offset[{2, 2}, {4.301784194660466, -4.713748913798078}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.042470692565915, -11.989465907577564}, 
          0.07582870843279127], 
         InsetBox["\<\"Croatia\"\>", 
          Offset[{2, 2}, {6.118299400998706, -11.913637199144773}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4111903662095044, -4.030145334630808}, 
          0.07582870843279127], 
         InsetBox["\<\"Cuba\"\>", 
          Offset[{2, 2}, {3.4870190746422955, -3.9543166261980165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.044765520862935, -2.9179755612206693}, 
          0.07582870843279127], 
         InsetBox["\<\"Cyprus\"\>", 
          Offset[{2, 2}, {10.120594229295726, -2.842146852787878}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.756317318593292, -13.102736657585345}, 
          0.07582870843279127], 
         InsetBox["\<\"Czech Republic\"\>", 
          Offset[{2, 2}, {6.832146027026083, -13.026907949152553}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.461262282390398, -11.85942780057024}, 
          0.07582870843279127], 
         InsetBox["\<\"Denmark\"\>", 
          Offset[{2, 2}, {7.537090990823189, -11.783599092137448}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8481324903631617, -12.418442314588159}, 
          0.07582870843279127], 
         InsetBox["\<\"Djibouti\"\>", 
          Offset[{2, 2}, {3.923961198795953, -12.342613606155368}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.86447913667327, -3.854102471505496}, 0.07582870843279127],
          InsetBox["\<\"Dominica\"\>", 
          Offset[{2, 2}, {7.940307845106061, -3.778273763072705}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.459945475439532, -3.8597462157457647}, 
          0.07582870843279127], 
         InsetBox["\<\"Dominican Republic\"\>", 
          Offset[{2, 2}, {8.535774183872324, -3.7839175073129736}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.396200326583409, -3.4581036311635245}, 
          0.07582870843279127], 
         InsetBox["\<\"DR Congo\"\>", 
          Offset[{2, 2}, {4.4720290350162, -3.3822749227307334}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.224485253957752, -3.477056065454227}, 
          0.07582870843279127], 
         InsetBox["\<\"Ecuador\"\>", 
          Offset[{2, 2}, {8.300313962390543, -3.401227357021436}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.010984362035559, -4.102345739670607}, 
          0.07582870843279127], 
         InsetBox["\<\"Egypt\"\>", 
          Offset[{2, 2}, {5.0868130704683505, -4.026517031237816}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.98614434806821, -3.5915157358254155}, 
          0.07582870843279127], 
         InsetBox["\<\"El Salvador\"\>", 
          Offset[{2, 2}, {8.061973056501001, -3.5156870273926244}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.686921665859165, -3.6222872919693305}, 
          0.07582870843279127], 
         InsetBox["\<\"Equatorial Guinea\"\>", 
          Offset[{2, 2}, {3.762750374291956, -3.5464585835365394}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.432257090801357, -4.519380057669398}, 
          0.07582870843279127], 
         InsetBox["\<\"Eritrea\"\>", 
          Offset[{2, 2}, {3.508085799234148, -4.443551349236607}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.220460566659302, -11.353256365298938}, 
          0.07582870843279127], 
         InsetBox["\<\"Estonia\"\>", 
          Offset[{2, 2}, {10.296289275092093, -11.277427656866147}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.571359188588528, -4.9011253014889675}, 
          0.07582870843279127], 
         InsetBox["\<\"Ethiopia\"\>", 
          Offset[{2, 2}, {4.647187897021319, -4.825296593056176}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.97939377279565, -5.399184973519553}, 0.07582870843279127],
          InsetBox["\<\"Fiji\"\>", 
          Offset[{2, 2}, {2.055222481228441, -5.323356265086762}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.442718522566947, -11.578349050578902}, 
          0.07582870843279127], 
         InsetBox["\<\"Finland\"\>", 
          Offset[{2, 2}, {9.518547230999738, -11.502520342146111}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.535518806158972, -12.334269476199474}, 
          0.07582870843279127], 
         InsetBox["\<\"France\"\>", 
          Offset[{2, 2}, {4.611347514591763, -12.258440767766682}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5171001768440027, -4.286012035139521}, 
          0.07582870843279127], 
         InsetBox["\<\"Gabon\"\>", 
          Offset[{2, 2}, {3.5929288852767938, -4.21018332670673}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.433934015786675, -5.255070271774154}, 
          0.07582870843279127], 
         InsetBox["\<\"Gambia\"\>", 
          Offset[{2, 2}, {4.509762724219466, -5.179241563341363}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.151572363415761, -14.304889882989732}, 
          0.07582870843279127], 
         InsetBox["\<\"Georgia\"\>", 
          Offset[{2, 2}, {8.227401071848552, -14.229061174556941}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.798549682482189, -12.407328346618893}, 
          0.07582870843279127], 
         InsetBox["\<\"Germany\"\>", 
          Offset[{2, 2}, {6.8743783909149805, -12.331499638186102}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2205775305006252, -3.985748062288678}, 
          0.07582870843279127], 
         InsetBox["\<\"Ghana\"\>", 
          Offset[{2, 2}, {3.2964062389334163, -3.9099193538558867}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.06034367184765, -11.623269125540046}, 
          0.07582870843279127], 
         InsetBox["\<\"Greece\"\>", 
          Offset[{2, 2}, {7.136172380280441, -11.547440417107255}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.625777696244775, -4.173806556865517}, 
          0.07582870843279127], 
         InsetBox["\<\"Grenada\"\>", 
          Offset[{2, 2}, {8.701606404677566, -4.097977848432726}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.207645404603007, -4.65238476056761}, 0.07582870843279127],
          InsetBox["\<\"Guatemala\"\>", 
          Offset[{2, 2}, {8.283474113035798, -4.576556052134819}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.991002453641411, -4.761131456613853}, 
          0.07582870843279127], 
         InsetBox["\<\"Guinea\"\>", 
          Offset[{2, 2}, {5.066831162074202, -4.685302748181062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.790177716303003, -4.31433467454444}, 
          0.07582870843279127], 
         InsetBox["\<\"Guinea-Bissau\"\>", 
          Offset[{2, 2}, {10.866006424735794, -4.238505966111649}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.237973705908665, -6.452581064937103}, 
          0.07582870843279127], 
         InsetBox["\<\"Guyana\"\>", 
          Offset[{2, 2}, {4.313802414341456, -6.376752356504312}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.114354926710973, -4.980226581584824}, 
          0.07582870843279127], 
         InsetBox["\<\"Haiti\"\>", 
          Offset[{2, 2}, {8.190183635143764, -4.904397873152033}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.934910857952056, -4.765345068962693}, 
          0.07582870843279127], 
         InsetBox["\<\"Honduras\"\>", Offset[{2, 2}, 
          {9.010739566384848, -4.689516360529902}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4846476133884154, -4.80942214798619}, 
          0.07582870843279127], 
         InsetBox["\<\"Hong Kong\"\>", 
          Offset[{2, 2}, {3.5604763218212065, -4.733593439553399}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.552678460594173, -12.265152198787135}, 
          0.07582870843279127], 
         InsetBox["\<\"Hungary\"\>", 
          Offset[{2, 2}, {7.628507169026964, -12.189323490354344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.881403837041042, -13.441944565255003}, 
          0.07582870843279127], 
         InsetBox["\<\"Iceland\"\>", 
          Offset[{2, 2}, {8.957232545473833, -13.366115856822212}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.009050029365543, -4.114257797435959}, 
          0.07582870843279127], 
         InsetBox["\<\"India\"\>", 
          Offset[{2, 2}, {10.084878737798334, -4.038429089003168}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5621737462878276, -3.244362388801407}, 
          0.07582870843279127], 
         InsetBox["\<\"Indonesia\"\>", 
          Offset[{2, 2}, {3.6380024547206187, -3.1685336803686157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9732274485428407, -3.75735565893606}, 
          0.07582870843279127], 
         InsetBox["\<\"Iran\"\>", 
          Offset[{2, 2}, {4.049056156975632, -3.681526950503269}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.2140896660114775, -3.391407433290448}, 
          0.07582870843279127], 
         InsetBox["\<\"Iraq\"\>", 
          Offset[{2, 2}, {4.289918374444269, -3.315578724857657}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.819268650824894, -4.503776308121218}, 
          0.07582870843279127], 
         InsetBox["\<\"Ireland\"\>", 
          Offset[{2, 2}, {8.895097359257685, -4.4279475996884265}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.333635216671832, -3.870746554005611}, 
          0.07582870843279127], 
         InsetBox["\<\"Israel\"\>", 
          Offset[{2, 2}, {9.409463925104623, -3.79491784557282}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.406304769842612, -10.9001572681838}, 0.07582870843279127],
          InsetBox["\<\"Italy\"\>", 
          Offset[{2, 2}, {7.482133478275403, -10.82432855975101}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.026813913093346, -4.112726512563718}, 
          0.07582870843279127], 
         InsetBox["\<\"Jamaica\"\>", 
          Offset[{2, 2}, {9.102642621526137, -4.036897804130927}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8117907098515706, -5.233170283833342}, 
          0.07582870843279127], 
         InsetBox["\<\"Japan\"\>", 
          Offset[{2, 2}, {3.8876194182843617, -5.157341575400551}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.786736065872319, -4.171578119171813}, 
          0.07582870843279127], 
         InsetBox["\<\"Jordan\"\>", 
          Offset[{2, 2}, {7.86256477430511, -4.095749410739022}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3829834287955087, -4.3153591918125525}, 
          0.07582870843279127], 
         InsetBox["\<\"Kazakhstan\"\>", 
          Offset[{2, 2}, {1.4588121372283, -4.239530483379761}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.151731563150791, -3.9305281994848}, 0.07582870843279127], 
         InsetBox["\<\"Kenya\"\>", 
          Offset[{2, 2}, {4.227560271583582, -3.854699491052009}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3137274936173498, -6.485090253866206}, 
          0.07582870843279127], 
         InsetBox["\<\"Kiribati\"\>", 
          Offset[{2, 2}, {2.389556202050141, -6.409261545433415}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.147085582968514, -12.008153909121834}, 
          0.07582870843279127], 
         InsetBox["\<\"Kosovo\"\>", 
          Offset[{2, 2}, {7.222914291401305, -11.932325200689043}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.839355300231409, -4.282518155494597}, 
          0.07582870843279127], 
         InsetBox["\<\"Kuwait\"\>", 
          Offset[{2, 2}, {4.9151840086642, -4.206689447061806}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2730710490856119, -4.522503018789686}, 
          0.07582870843279127], 
         InsetBox["\<\"Kyrgyzstan\"\>", 
          Offset[{2, 2}, {1.3488997575184032, -4.446674310356895}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9898485097156025, -6.290105576228876}, 
          0.07582870843279127], 
         InsetBox["\<\"Lao PDR\"\>", 
          Offset[{2, 2}, {2.0656772181483936, -6.214276867796085}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.023460811099639, -10.477124270372709}, 
          0.07582870843279127], 
         InsetBox["\<\"Latvia\"\>", 
          Offset[{2, 2}, {6.09928951953243, -10.401295561939918}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.624585136750639, -5.317212387213652}, 
          0.07582870843279127], 
         InsetBox["\<\"Lebanon\"\>", 
          Offset[{2, 2}, {10.70041384518343, -5.241383678780861}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4510464996276355, -2.7915922109316478}, 
          0.07582870843279127], 
         InsetBox["\<\"Lesotho\"\>", 
          Offset[{2, 2}, {1.5268752080604269, -2.7157635024988567}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.005674935629451, -4.5549694154169424}, 
          0.07582870843279127], 
         InsetBox["\<\"Liberia\"\>", 
          Offset[{2, 2}, {5.081503644062242, -4.479140706984151}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.8073896677629, -14.495680478376274}, 0.07582870843279127],
          InsetBox["\<\"Libya\"\>", 
          Offset[{2, 2}, {7.883218376195691, -14.419851769943483}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.3292671736257144, -11.272703834122133}, 
          0.07582870843279127], 
         InsetBox["\<\"Lithuania\"\>", 
          Offset[{2, 2}, {6.4050958820585056, -11.196875125689342}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.127339046520316, -12.821069158625626}, 
          0.07582870843279127], 
         InsetBox["\<\"Luxembourg\"\>", 
          Offset[{2, 2}, {6.203167754953107, -12.745240450192835}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.715363526198098, -5.047065838226532}, 
          0.07582870843279127], 
         InsetBox["\<\"Macao\"\>", 
          Offset[{2, 2}, {3.791192234630889, -4.9712371297937406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.177614389796286, -4.529257296080872}, 
          0.07582870843279127], 
         InsetBox["\<\"Madagascar\"\>", 
          Offset[{2, 2}, {3.253443098229077, -4.453428587648081}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2636651201483708, -3.1818676752966413}, 
          0.07582870843279127], 
         InsetBox["\<\"Malawi\"\>", 
          Offset[{2, 2}, {1.3394938285811622, -3.10603896686385}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.507204371168525, -4.183855990927913}, 
          0.07582870843279127], 
         InsetBox["\<\"Malaysia\"\>", 
          Offset[{2, 2}, {4.583033079601316, -4.108027282495122}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8311714732503206, -4.842822763070357}, 
          0.07582870843279127], 
         InsetBox["\<\"Maldives\"\>", 
          Offset[{2, 2}, {3.9070001816831117, -4.766994054637566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.439885918671298, -1.2683785477706868}, 
          0.07582870843279127], 
         InsetBox["\<\"Mali\"\>", 
          Offset[{2, 2}, {3.515714627104089, -1.1925498393378955}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.731128269807762, -10.089250615354603}, 
          0.07582870843279127], 
         InsetBox["\<\"Malta\"\>", 
          Offset[{2, 2}, {7.806956978240553, -10.013421906921812}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6490731486103902, -6.7159699467815095}, 
          0.07582870843279127], 
         InsetBox["\<\"Marshall Islands\"\>", Offset[{2, 2}, 
          {3.7249018570431813, -6.640141238348718}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.681929488657072, -4.612951095707567}, 
          0.07582870843279127], 
         InsetBox["\<\"Mauritania\"\>", 
          Offset[{2, 2}, {3.757758197089863, -4.537122387274776}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.747150261110017, -4.478183010615915}, 
          0.07582870843279127], 
         InsetBox["\<\"Mauritius\"\>", 
          Offset[{2, 2}, {4.822978969542808, -4.402354302183124}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.782210653064004, -3.645745304944621}, 
          0.07582870843279127], 
         InsetBox["\<\"Mexico\"\>", 
          Offset[{2, 2}, {8.858039361496795, -3.56991659651183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.670324220670416, -4.656020895673866}, 
          0.07582870843279127], 
         InsetBox["\<\"Micronesia\"\>", 
          Offset[{2, 2}, {8.746152929103207, -4.5801921872410745}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.795811169074983, -14.248567025627844}, 
          0.07582870843279127], 
         InsetBox["\<\"Moldova\"\>", 
          Offset[{2, 2}, {5.871639877507774, -14.172738317195053}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.86501727545299, -4.986889450292191}, 0.07582870843279127],
          InsetBox["\<\"Mongolia\"\>", 
          Offset[{2, 2}, {4.940845983885781, -4.9110607418594}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.797752007025135, -14.52827579013708}, 
          0.07582870843279127], 
         InsetBox["\<\"Montenegro\"\>", 
          Offset[{2, 2}, {6.873580715457926, -14.452447081704289}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.446865920636892, -11.66945998355917}, 
          0.07582870843279127], 
         InsetBox["\<\"Morocco\"\>", 
          Offset[{2, 2}, {2.522694629069683, -11.593631275126379}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6440216822124993, -2.735903442903461}, 
          0.07582870843279127], 
         InsetBox["\<\"Mozambique\"\>", 
          Offset[{2, 2}, {1.7198503906452907, -2.66007473447067}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.566781362903627, -3.490826152216253}, 
          0.07582870843279127], 
         InsetBox["\<\"Myanmar\"\>", 
          Offset[{2, 2}, {4.642610071336418, -3.414997443783462}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2837690983154317, -2.9752139211436166}, 
          0.07582870843279127], 
         InsetBox["\<\"Namibia\"\>", 
          Offset[{2, 2}, {1.359597806748223, -2.8993852127108255}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9417957224007858, -6.096631984866763}, 
          0.07582870843279127], 
         InsetBox["\<\"Nauru\"\>", 
          Offset[{2, 2}, {2.017624430833577, -6.020803276433972}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.897312127506346, -4.0012825799147524}, 
          0.07582870843279127], 
         InsetBox["\<\"Nepal\"\>", 
          Offset[{2, 2}, {10.973140835939137, -3.9254538714819613}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.165123317287023, -12.940207277130144}, 
          0.07582870843279127], 
         InsetBox["\<\"Netherlands\"\>", 
          Offset[{2, 2}, {8.240952025719814, -12.864378568697353}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.241121004997505, -3.4593617020257064}, 
          0.07582870843279127], 
         InsetBox["\<\"New Zealand\"\>", 
          Offset[{2, 2}, {3.3169497134302963, -3.3835329935929153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.566322430862208, -3.6000999910572458}, 
          0.07582870843279127], 
         InsetBox["\<\"Nicaragua\"\>", 
          Offset[{2, 2}, {8.642151139294999, -3.5242712826244547}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3902762997222085, -3.774962917917162}, 
          0.07582870843279127], 
         InsetBox["\<\"Niger\"\>", 
          Offset[{2, 2}, {3.4661050081549996, -3.699134209484371}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.698892331876891, -5.150721436941655}, 
          0.07582870843279127], 
         InsetBox["\<\"Nigeria\"\>", 
          Offset[{2, 2}, {4.774721040309682, -5.074892728508864}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.085203958784421, -13.090919529903164}, 
          0.07582870843279127], 
         InsetBox["\<\"North Macedonia\"\>", 
          Offset[{2, 2}, {7.161032667217212, -13.015090821470373}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.998490833804572, -11.528877694793666}, 
          0.07582870843279127], 
         InsetBox["\<\"Norway\"\>", 
          Offset[{2, 2}, {9.074319542237363, -11.453048986360875}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.487243136883313, -5.093775845611514}, 
          0.07582870843279127], 
         InsetBox["\<\"Oman\"\>", 
          Offset[{2, 2}, {4.563071845316104, -5.017947137178723}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.419167533286365, -5.701194787990836}, 
          0.07582870843279127], 
         InsetBox["\<\"Pakistan\"\>", 
          Offset[{2, 2}, {3.4949962417191562, -5.625366079558045}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.845511417014967, -4.553152622833071}, 
          0.07582870843279127], 
         InsetBox["\<\"Palau\"\>", 
          Offset[{2, 2}, {7.921340125447758, -4.47732391440028}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.078921238141813, -3.5486840864627167}, 
          0.07582870843279127], 
         InsetBox["\<\"Palestine\"\>", 
          Offset[{2, 2}, {10.154749946574604, -3.4728553780299256}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.067931454150004, -4.604584666678612}, 
          0.07582870843279127], 
         InsetBox["\<\"Panama\"\>", 
          Offset[{2, 2}, {9.143760162582796, -4.528755958245821}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8954300041638668, -5.192018010176409}, 
          0.07582870843279127], 
         InsetBox["\<\"Papua New Guinea\"\>", 
          Offset[{2, 2}, {1.971258712596658, -5.116189301743618}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.396548909349443, -6.935766835744699}, 
          0.07582870843279127], 
         InsetBox["\<\"Paraguay\"\>", 
          Offset[{2, 2}, {4.472377617782234, -6.859938127311908}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.369787933437138, -3.7793470237714706}, 
          0.07582870843279127], 
         InsetBox["\<\"Peru\"\>", 
          Offset[{2, 2}, {4.445616641869929, -3.7035183153386795}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.853996711173457, -4.050399848143439}, 
          0.07582870843279127], 
         InsetBox["\<\"Philippines\"\>", 
          Offset[{2, 2}, {3.929825419606248, -3.9745711397106476}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.364794281151381, -12.892310294563375}, 
          0.07582870843279127], 
         InsetBox["\<\"Poland\"\>", 
          Offset[{2, 2}, {7.440622989584172, -12.816481586130584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.016296618104853, -11.899412638803504}, 
          0.07582870843279127], 
         InsetBox["\<\"Portugal\"\>", 
          Offset[{2, 2}, {2.0921253265376443, -11.823583930370713}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1512440206903314, -4.20991562655212}, 
          0.07582870843279127], 
         InsetBox["\<\"Qatar\"\>", 
          Offset[{2, 2}, {3.2270727291231225, -4.134086918119329}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.173585711413984, -13.471781588940463}, 
          0.07582870843279127], 
         InsetBox["\<\"Romania\"\>", 
          Offset[{2, 2}, {6.249414419846775, -13.395952880507672}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2149175478989593, -4.506488359950977}, 
          0.07582870843279127], 
         InsetBox["\<\"Russia\"\>", 
          Offset[{2, 2}, {2.2907462563317504, -4.4306596515181855}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.783571624392764, -4.77840785577377}, 0.07582870843279127],
          InsetBox["\<\"Rwanda\"\>", 
          Offset[{2, 2}, {4.8594003328255555, -4.702579147340979}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.43315515555679, -3.4596060675895055}, 
          0.07582870843279127], 
         InsetBox["\<\"Saint Kitts and Nevis\"\>", 
          Offset[{2, 2}, {8.508983863989581, -3.3837773591567144}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.2528411622994, -2.552510589339107}, 0.07582870843279127], 
         InsetBox["\<\"Saint Lucia\"\>", 
          Offset[{2, 2}, {9.328669870732192, -2.476681880906316}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.94683162359293, -4.856491335876073}, 0.07582870843279127],
          InsetBox["\<\"Saint Vincent and the Grenadines\"\>", 
          Offset[{2, 2}, {8.02266033202572, -4.780662627443282}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.442430400173428, -5.635853339549757}, 
          0.07582870843279127], 
         InsetBox["\<\"Samoa\"\>", 
          Offset[{2, 2}, {10.51825910860622, -5.560024631116966}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.520807303935286, -12.611933361177858}, 
          0.07582870843279127], 
         InsetBox["\<\"San Marino\"\>", 
          Offset[{2, 2}, {7.596636012368077, -12.536104652745067}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.877601876875482, -13.291925027311386}, 
          0.07582870843279127], 
         InsetBox["\<\"Sao Tome and Principe\"\>", 
          Offset[{2, 2}, {2.953430585308273, -13.216096318878595}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.577020557751008, -3.7848055039751647}, 
          0.07582870843279127], 
         InsetBox["\<\"Saudi Arabia\"\>", 
          Offset[{2, 2}, {3.6528492661837992, -3.7089767955423736}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.074686308551094, -12.843520416571039}, 
          0.07582870843279127], 
         InsetBox["\<\"Senegal\"\>", 
          Offset[{2, 2}, {4.150515016983885, -12.767691708138248}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.796735451538622, -13.645776089753998}, 
          0.07582870843279127], 
         InsetBox["\<\"Serbia\"\>", 
          Offset[{2, 2}, {6.872564159971413, -13.569947381321207}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6006228267128915, -1.4681818925117964}, 
          0.07582870843279127], 
         InsetBox["\<\"Seychelles\"\>", 
          Offset[{2, 2}, {3.6764515351456826, -1.392353184079005}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{14.424642367803088, -1.26366512014837}, 
          0.07582870843279127], 
         InsetBox["\<\"Sierra Leone\"\>", 
          Offset[{2, 2}, {14.500471076235879, -1.1878364117155786}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.29694646090415, -5.048110442817288}, 0.07582870843279127],
          InsetBox["\<\"Singapore\"\>", 
          Offset[{2, 2}, {8.372775169336942, -4.972281734384497}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.977548112175642, -12.487455658012202}, 
          0.07582870843279127], 
         InsetBox["\<\"Slovakia\"\>", 
          Offset[{2, 2}, {6.053376820608433, -12.41162694957941}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.39197925066571, -11.82332833961023}, 0.07582870843279127],
          InsetBox["\<\"Slovenia\"\>", 
          Offset[{2, 2}, {6.467807959098501, -11.747499631177439}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2663609603418458, -4.334170368516508}, 
          0.07582870843279127], 
         InsetBox["\<\"Solomon Islands\"\>", 
          Offset[{2, 2}, {3.342189668774637, -4.258341660083717}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.424642367803088, -1.26366512014837}, 
          0.07582870843279127], 
         InsetBox["\<\"Somalia\"\>", 
          Offset[{2, 2}, {13.500471076235879, -1.1878364117155786}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1374132532300734, -3.387925975294186}, 
          0.07582870843279127], 
         InsetBox["\<\"South Africa\"\>", 
          Offset[{2, 2}, {2.2132419616628645, -3.312097266861395}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.75519321954662, -5.847092650221233}, 0.07582870843279127],
          InsetBox["\<\"South Korea\"\>", 
          Offset[{2, 2}, {3.8310219279794113, -5.771263941788442}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0869585498658623, -12.004558626663385}, 
          0.07582870843279127], 
         InsetBox["\<\"Spain\"\>", 
          Offset[{2, 2}, {3.1627872582986534, -11.928729918230594}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.204402287553732, -3.6001465338289007}, 
          0.07582870843279127], 
         InsetBox["\<\"Sri Lanka\"\>", 
          Offset[{2, 2}, {4.280230995986523, -3.5243178253961096}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2037171281586163, -1.3496176335027235}, 
          0.07582870843279127], 
         InsetBox["\<\"Sudan\"\>", 
          Offset[{2, 2}, {3.2795458365914074, -1.2737889250699321}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.2929686862522, -5.899360203714779}, 0.07582870843279127],
          InsetBox["\<\"Suriname\"\>", 
          Offset[{2, 2}, {10.368797394684991, -5.823531495281988}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.31695496751023, -11.883667601188193}, 
          0.07582870843279127], 
         InsetBox["\<\"Sweden\"\>", 
          Offset[{2, 2}, {8.39278367594302, -11.807838892755402}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.857182901075324, -5.2456560374723695}, 
          0.07582870843279127], 
         InsetBox["\<\"Switzerland\"\>", 
          Offset[{2, 2}, {9.933011609508116, -5.169827329039578}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.915161645741915, -3.8535470454369545}, 
          0.07582870843279127], 
         InsetBox["\<\"Syrian Arab Republic\"\>", 
          Offset[{2, 2}, {4.9909903541747065, -3.7777183370041634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5263574630302146, -7.5369117120771465}, 
          0.07582870843279127], 
         InsetBox["\<\"Taiwan\"\>", 
          Offset[{2, 2}, {2.6021861714630057, -7.461083003644355}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.669860448982087, -5.520465760229569}, 
          0.07582870843279127], 
         InsetBox["\<\"Tajikistan\"\>", 
          Offset[{2, 2}, {10.745689157414878, -5.444637051796778}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.5554507302733445, -4.636878332681038}, 
          0.07582870843279127], 
         InsetBox["\<\"Tanzania\"\>", 
          Offset[{2, 2}, {4.631279438706136, -4.561049624248247}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.720144497255323, -5.7195866219601275}, 
          0.07582870843279127], 
         InsetBox["\<\"Thailand\"\>", 
          Offset[{2, 2}, {2.795973205688114, -5.643757913527336}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.171733964944842, -2.5174404908607304}, 
          0.07582870843279127], 
         InsetBox["\<\"Timor-Leste\"\>", 
          Offset[{2, 2}, {3.247562673377633, -2.4416117824279393}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0817187116122575, -5.002665317482171}, 
          0.07582870843279127], 
         InsetBox["\<\"Togo\"\>", 
          Offset[{2, 2}, {4.157547420045049, -4.92683660904938}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.657638278345811, -2.8399216317557574}, 
          0.07582870843279127], 
         InsetBox["\<\"Tonga\"\>", 
          Offset[{2, 2}, {2.733466986778602, -2.7640929233229663}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.816610932456854, -3.242994721083403}, 
          0.07582870843279127], 
         InsetBox["\<\"Trinidad and Tobago\"\>", 
          Offset[{2, 2}, {8.892439640889645, -3.167166012650612}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8659321333246295, -12.01882756927699}, 
          0.07582870843279127], 
         InsetBox["\<\"Tunisia\"\>", 
          Offset[{2, 2}, {3.9417608417574206, -11.942998860844199}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.555404005802451, -13.668042062532548}, 
          0.07582870843279127], 
         InsetBox["\<\"Turkey\"\>", 
          Offset[{2, 2}, {7.631232714235242, -13.592213354099757}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0141328460608765, -3.4393425685733225}, 
          0.07582870843279127], 
         InsetBox["\<\"Turkmenistan\"\>", 
          Offset[{2, 2}, {4.089961554493668, -3.3635138601405314}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.42870234612917, -6.6388640595851545}, 
          0.07582870843279127], 
         InsetBox["\<\"Tuvalu\"\>", 
          Offset[{2, 2}, {3.5045310545619612, -6.563035351152363}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0623738648359984, -1.5486781755837509}, 
          0.07582870843279127], 
         InsetBox["\<\"Uganda\"\>", 
          Offset[{2, 2}, {3.1382025732687895, -1.4728494671509595}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.06134192087195, -4.3262993492139294}, 
          0.07582870843279127], 
         InsetBox["\<\"Ukraine\"\>", 
          Offset[{2, 2}, {5.137170629304741, -4.250470640781138}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6315359538973757, -2.163888161942209}, 
          0.07582870843279127], 
         InsetBox["\<\"United Arab Emirates\"\>", 
          Offset[{2, 2}, {3.707364662330167, -2.088059453509418}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.330753100434428, -3.354043622593111}, 
          0.07582870843279127], 
         InsetBox["\<\"United Kingdom\"\>", 
          Offset[{2, 2}, {9.40658180886722, -3.27821491416032}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.212299461423072, -4.268386358524553}, 
          0.07582870843279127], 
         InsetBox["\<\"United States\"\>", 
          Offset[{2, 2}, {8.288128169855863, -4.192557650091762}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.228138816643796, -5.614292851018106}, 
          0.07582870843279127], 
         InsetBox["\<\"Uruguay\"\>", 
          Offset[{2, 2}, {4.303967525076587, -5.5384641425853145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.88688659411725, -2.7367844325574646}, 
          0.07582870843279127], 
         InsetBox["\<\"Uzbekistan\"\>", 
          Offset[{2, 2}, {9.962715302550041, -2.6609557241246735}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.154765439307164, -6.374149869892623}, 
          0.07582870843279127], 
         InsetBox["\<\"Vanuatu\"\>", 
          Offset[{2, 2}, {2.230594147739955, -6.298321161459832}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.814124986521136, -3.6821350220576488}, 
          0.07582870843279127], 
         InsetBox["\<\"Viet Nam\"\>", 
          Offset[{2, 2}, {4.8899536949539275, -3.6063063136248577}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.329333347451027, -1.5170280521104846}, 
          0.07582870843279127], 
         InsetBox["\<\"Yemen\"\>", 
          Offset[{2, 2}, {3.4051620558838183, -1.4411993436776933}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5514837567183584, -5.136007841240998}, 
          0.07582870843279127], 
         InsetBox["\<\"Zambia\"\>", 
          Offset[{2, 2}, {3.6273124651511495, -5.060179132808207}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2864101647203192, -3.3744400752827683}, 
          0.07582870843279127], 
         InsetBox["\<\"Zimbabwe\"\>", 
          Offset[{2, 2}, {1.3622388731531105, -3.2986113668499772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1169.51220703125, Automatic}]], "Output",
 CellChangeTimes->{3.856212008497164*^9, 3.862428118006633*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"1f053f97-ff6c-4bc5-a8d6-2ef86eeb0ddf"]
}, Open  ]],

Cell["\<\
International Trade Network, 1996 (with American, European, and Chinese \
clusters).\
\>", "Text",
 CellChangeTimes->{{3.856211529249782*^9, 3.856211534950618*^9}, {
  3.8562116064302998`*^9, 
  3.856211624582617*^9}},ExpressionUUID->"9fca30b5-4352-45e5-b555-\
3fd51da95520"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ITNGraph", "[", "1996", "]"}]], "Input",
 CellChangeTimes->{{3.8562084731439743`*^9, 3.856208480348016*^9}, {
   3.8562107725976458`*^9, 3.85621077483853*^9}, 3.8562110272297173`*^9, {
   3.856211481357738*^9, 3.856211509858219*^9}, {3.85621201916325*^9, 
   3.856212022136478*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"9aab06bc-3059-41db-bcaf-ffd99e60c495"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
       108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
      122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
      136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 
      150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
      164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
      178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 
      192, 193}, {Null, 
       SparseArray[Automatic, {193, 193}, 0, {1, {CompressedData["
1:eJwt0ulPzwEAx/FvtghdHhTd/dIhnYhNjmGODjnqP/CI2vKEyfHImSNb0TzR
f2BMiFquEBKFhsyRxIP4D1K8tny211/weYd27a2uDwuCoCeY3hzmEkkU0cQQ
yzzms4AEEkkimRRSSSOdEBksJJMssskjnwIKKaKYJSxlGSUsZwUrKWUVq1nD
Wtaxng1sZBOb2UIZ5VRQyVaq2MZ2drCTGnazh1rqOMoxjnOCk5yikdOc4Szn
aOI8zbRwgYu0conLtHGFq1zjOu3c4Ca36OA2d+iki27uco/7PODh/58e8Zgn
9PKUZzynjxf085JXDDDIa97wliHe8Z4PDPORT3zmC18Z4RujfGeMH/xknF/8
ZoI/TDLFXwJhhTGDcGYyiwhmE0kU0cQQSxzxJJBIEsmkkEoa6YTIIJMssslh
EbksJo98CiiimFL2sZ8DNHCQQxzmCP8Al8NU9A==
          "], CompressedData["
1:eJwdTok3lVEc/K42X2knPZWIV6GkPXLVT0ipp/hcpPUptKosLV6kReLlZuuh
1/L1RCklLdyhxX/WZc7MmXNmzpwz0e7KPHeQYRgeZhiaRsnVG9WPunuHvsDi
gENir/A86RohCR8gOThcSGic2/wcE0Jy8vp1xJFT9nfaeDhJRa9IL2dAqWQm
06yly1dHrYvZsDE+icovX6up7wl8HYWS89ckJG7Zk5LKDxyxLtTdb2xtk68H
P3xXpJdeLSepsLsQolA9RhCVXvkIMyL3mPvipQfP3gyP4/ef45C/FBjksASE
9V6Sk9tCcItxHUvJuO0PeFxk3tG3aSUJsHyYDv0r8uCLgKB5C5as2rSfik6d
OX+zamxSFzCZd+FbcAasvYVEEr6KWvybAr/tRSmILDapxGnGTXAaU8Xyh9i8
L/1oXnHl559gs+cEhyxavCx0hSM6dn3c1m3bd+zctTstIzMr+9BhV36BKDxx
8uy56/caHjY9bWnv6PT1vfTb7/oHvimH/CSE07b/A+NWoc8=
          "]}, Pattern}]}, {
      VertexLabels -> {
        117 -> "Morocco", 68 -> "Grenada", 146 -> "Saint Lucia", 83 -> 
         "Israel", 188 -> "Uzbekistan", 154 -> "Seychelles", 4 -> "Angola", 
         172 -> "Tanzania", 99 -> "Libya", 169 -> "Syrian Arab Republic", 57 -> 
         "Estonia", 11 -> "Azerbaijan", 152 -> "Senegal", 129 -> "Norway", 56 -> 
         "Eritrea", 116 -> "Montenegro", 39 -> "Comoros", 26 -> 
         "Brunei Darussalam", 145 -> "Saint Kitts and Nevis", 100 -> 
         "Lithuania", 32 -> "Cameroon", 50 -> "Dominican Republic", 85 -> 
         "Jamaica", 17 -> "Belgium", 125 -> "Nicaragua", 184 -> 
         "United Arab Emirates", 18 -> "Belize", 147 -> 
         "Saint Vincent and the Grenadines", 126 -> "Niger", 92 -> "Kuwait", 
         190 -> "Viet Nam", 72 -> "Guyana", 108 -> "Malta", 5 -> 
         "Antigua and Barbuda", 122 -> "Nepal", 132 -> "Palau", 135 -> 
         "Papua New Guinea", 66 -> "Ghana", 186 -> "United States", 153 -> 
         "Serbia", 139 -> "Poland", 138 -> "Philippines", 41 -> "Costa Rica", 
         109 -> "Marshall Islands", 165 -> "Sudan", 62 -> "Gabon", 130 -> 
         "Oman", 134 -> "Panama", 48 -> "Djibouti", 87 -> "Jordan", 112 -> 
         "Mexico", 27 -> "Bulgaria", 175 -> "Togo", 174 -> "Timor-Leste", 149 -> 
         "San Marino", 73 -> "Haiti", 171 -> "Tajikistan", 159 -> 
         "Solomon Islands", 136 -> "Paraguay", 55 -> "Equatorial Guinea", 157 -> 
         "Slovakia", 161 -> "South Africa", 42 -> "Cote d'Ivoire", 34 -> 
         "Central African Republic", 167 -> "Sweden", 142 -> "Romania", 187 -> 
         "Uruguay", 44 -> "Cuba", 69 -> "Guatemala", 78 -> "India", 127 -> 
         "Nigeria", 82 -> "Ireland", 166 -> "Suriname", 151 -> "Saudi Arabia",
          101 -> "Luxembourg", 143 -> "Russia", 59 -> "Fiji", 96 -> "Lebanon",
          189 -> "Vanuatu", 156 -> "Singapore", 95 -> "Latvia", 24 -> 
         "Botswana", 35 -> "Chad", 3 -> "Algeria", 61 -> "France", 40 -> 
         "Congo", 49 -> "Dominica", 123 -> "Netherlands", 168 -> 
         "Switzerland", 20 -> "Bermuda", 19 -> "Benin", 60 -> "Finland", 89 -> 
         "Kenya", 9 -> "Australia", 46 -> "Czech Republic", 140 -> "Portugal",
          176 -> "Tonga", 137 -> "Peru", 30 -> "Cabo Verde", 181 -> "Tuvalu", 
         114 -> "Moldova", 74 -> "Honduras", 170 -> "Taiwan", 1 -> 
         "Afghanistan", 38 -> "Colombia", 98 -> "Liberia", 65 -> "Germany", 
         173 -> "Thailand", 118 -> "Mozambique", 144 -> "Rwanda", 124 -> 
         "New Zealand", 2 -> "Albania", 43 -> "Croatia", 16 -> "Belarus", 12 -> 
         "Bahamas", 21 -> "Bhutan", 13 -> "Bahrain", 76 -> "Hungary", 37 -> 
         "China", 192 -> "Zambia", 103 -> "Madagascar", 113 -> "Micronesia", 
         63 -> "Gambia", 86 -> "Japan", 133 -> "Palestine", 90 -> "Kiribati", 
         128 -> "North Macedonia", 75 -> "Hong Kong", 91 -> "Kosovo", 94 -> 
         "Lao PDR", 28 -> "Burkina Faso", 77 -> "Iceland", 88 -> "Kazakhstan",
          119 -> "Myanmar", 163 -> "Spain", 97 -> "Lesotho", 80 -> "Iran", 
         102 -> "Macao", 121 -> "Nauru", 105 -> "Malaysia", 23 -> 
         "Bosnia and Herzegovina", 6 -> "Argentina", 14 -> "Bangladesh", 106 -> 
         "Maldives", 36 -> "Chile", 110 -> "Mauritania", 29 -> "Burundi", 177 -> 
         "Trinidad and Tobago", 10 -> "Austria", 162 -> "South Korea", 158 -> 
         "Slovenia", 70 -> "Guinea", 67 -> "Greece", 185 -> "United Kingdom", 
         104 -> "Malawi", 47 -> "Denmark", 193 -> "Zimbabwe", 22 -> "Bolivia",
          81 -> "Iraq", 148 -> "Samoa", 107 -> "Mali", 7 -> "Armenia", 79 -> 
         "Indonesia", 180 -> "Turkmenistan", 64 -> "Georgia", 120 -> 
         "Namibia", 178 -> "Tunisia", 191 -> "Yemen", 150 -> 
         "Sao Tome and Principe", 155 -> "Sierra Leone", 31 -> "Cambodia", 51 -> 
         "DR Congo", 54 -> "El Salvador", 53 -> "Egypt", 160 -> "Somalia", 71 -> 
         "Guinea-Bissau", 111 -> "Mauritius", 141 -> "Qatar", 131 -> 
         "Pakistan", 179 -> "Turkey", 93 -> "Kyrgyzstan", 25 -> "Brazil", 45 -> 
         "Cyprus", 15 -> "Barbados", 58 -> "Ethiopia", 183 -> "Ukraine", 182 -> 
         "Uganda", 164 -> "Sri Lanka", 84 -> "Italy", 115 -> "Mongolia", 33 -> 
         "Canada", 52 -> "Ecuador", 8 -> "Aruba"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{10.213809952666173, -11.658459074747078}, 
          0.0844279056857918], 
         InsetBox["\<\"Afghanistan\"\>", 
          Offset[{2, 2}, {10.298237858351964, -11.574031169061287}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.280996127971305, -2.7511512752044096}, 
          0.0844279056857918], 
         InsetBox["\<\"Albania\"\>", 
          Offset[{2, 2}, {6.365424033657097, -2.6667233695186177}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.059335900768934, -6.025581743876308}, 
          0.0844279056857918], 
         InsetBox["\<\"Algeria\"\>", 
          Offset[{2, 2}, {10.143763806454725, -5.941153838190516}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.651960087895501, -12.803856133817778}, 
          0.0844279056857918], 
         InsetBox["\<\"Angola\"\>", 
          Offset[{2, 2}, {7.736387993581293, -12.719428228131987}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.681056882802103, -14.275432680007565}, 
          0.0844279056857918], 
         InsetBox["\<\"Antigua and Barbuda\"\>", 
          Offset[{2, 2}, {8.765484788487894, -14.191004774321774}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.512880319401788, -16.195569853316336}, 
          0.0844279056857918], 
         InsetBox["\<\"Argentina\"\>", 
          Offset[{2, 2}, {8.597308225087579, -16.111141947630543}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5732829435685836, -6.944908118194942}, 
          0.0844279056857918], 
         InsetBox["\<\"Armenia\"\>", 
          Offset[{2, 2}, {3.6577108492543755, -6.86048021250915}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.18850807678811, -12.813798774026159}, 0.0844279056857918],
          InsetBox["\<\"Aruba\"\>", 
          Offset[{2, 2}, {9.272935982473902, -12.729370868340368}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.378660490096385, -13.439230122425863}, 
          0.0844279056857918], 
         InsetBox["\<\"Australia\"\>", 
          Offset[{2, 2}, {3.4630883957821768, -13.354802216740072}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.65585338030101, -5.644083697178856}, 0.0844279056857918], 
         InsetBox["\<\"Austria\"\>", 
          Offset[{2, 2}, {5.740281285986802, -5.559655791493064}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.219719886810501, -6.194939136918925}, 0.0844279056857918],
          InsetBox["\<\"Azerbaijan\"\>", 
          Offset[{2, 2}, {3.304147792496293, -6.110511231233133}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.346858662099784, -12.468391132385882}, 
          0.0844279056857918], 
         InsetBox["\<\"Bahamas\"\>", 
          Offset[{2, 2}, {8.431286567785575, -12.383963226700091}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.011908228902943, -11.175399392624243}, 
          0.0844279056857918], 
         InsetBox["\<\"Bahrain\"\>", 
          Offset[{2, 2}, {9.096336134588734, -11.090971486938452}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.903607246851052, -12.748634494659369}, 
          0.0844279056857918], 
         InsetBox["\<\"Bangladesh\"\>", 
          Offset[{2, 2}, {7.988035152536844, -12.664206588973578}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.702357463410857, -13.77355050260066}, 0.0844279056857918],
          InsetBox["\<\"Barbados\"\>", 
          Offset[{2, 2}, {7.786785369096649, -13.689122596914869}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8848502315565154, -6.311454724204127}, 
          0.0844279056857918], 
         InsetBox["\<\"Belarus\"\>", 
          Offset[{2, 2}, {2.9692781372423074, -6.227026818518335}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.246019927686705, -5.376101364197307}, 
          0.0844279056857918], 
         InsetBox["\<\"Belgium\"\>", 
          Offset[{2, 2}, {10.330447833372496, -5.291673458511515}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.374600499908642, -13.264057105289911}, 
          0.0844279056857918], 
         InsetBox["\<\"Belize\"\>", 
          Offset[{2, 2}, {9.459028405594433, -13.17962919960412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.766128443107462, -5.0437455919053855}, 
          0.0844279056857918], 
         InsetBox["\<\"Benin\"\>", 
          Offset[{2, 2}, {9.850556348793253, -4.959317686219594}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.303812167064645, -12.917688997571634}, 
          0.0844279056857918], 
         InsetBox["\<\"Bermuda\"\>", 
          Offset[{2, 2}, {8.388240072750436, -12.833261091885843}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.750069496293325, -13.242930620832736}, 
          0.0844279056857918], 
         InsetBox["\<\"Bhutan\"\>", 
          Offset[{2, 2}, {10.834497401979116, -13.158502715146945}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.401194936362346, -13.514567251142816}, 
          0.0844279056857918], 
         InsetBox["\<\"Bolivia\"\>", 
          Offset[{2, 2}, {9.485622842048137, -13.430139345457025}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.695369825586049, -4.395539131807131}, 0.0844279056857918],
          InsetBox["\<\"Bosnia and Herzegovina\"\>", 
          Offset[{2, 2}, {4.779797731271841, -4.311111226121339}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.197628047561534, -7.3678840340485685}, 
          0.0844279056857918], 
         InsetBox["\<\"Botswana\"\>", 
          Offset[{2, 2}, {6.282055953247326, -7.283456128362777}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.551545564510956, -15.302987704368823}, 
          0.0844279056857918], 
         InsetBox["\<\"Brazil\"\>", 
          Offset[{2, 2}, {8.635973470196747, -15.218559798683032}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.888650415192003, -13.914702175434867}, 
          0.0844279056857918], 
         InsetBox["\<\"Brunei Darussalam\"\>", 
          Offset[{2, 2}, {4.973078320877795, -13.830274269749076}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1080364119554114, -5.791733788434259}, 
          0.0844279056857918], 
         InsetBox["\<\"Bulgaria\"\>", 
          Offset[{2, 2}, {3.1924643176412033, -5.707305882748467}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.445198050411536, -6.800621143310242}, 0.0844279056857918],
          InsetBox["\<\"Burkina Faso\"\>", 
          Offset[{2, 2}, {9.529625956097327, -6.71619323762445}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.871506204141384, -4.856564489107815}, 0.0844279056857918],
          InsetBox["\<\"Burundi\"\>", 
          Offset[{2, 2}, {6.955934109827176, -4.772136583422023}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.4183665741835, -5.9845015855648365}, 0.0844279056857918],
          InsetBox["\<\"Cabo Verde\"\>", 
          Offset[{2, 2}, {13.50279447986929, -5.9000736798790445}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.071634680261239, -15.344433931394514}, 
          0.0844279056857918], 
         InsetBox["\<\"Cambodia\"\>", 
          Offset[{2, 2}, {7.156062585947031, -15.260006025708723}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.348082883259563, -6.217676715769127}, 
          0.0844279056857918], 
         InsetBox["\<\"Cameroon\"\>", 
          Offset[{2, 2}, {10.432510788945354, -6.133248810083335}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.84226755350645, -12.608749379888266}, 0.0844279056857918],
          InsetBox["\<\"Canada\"\>", 
          Offset[{2, 2}, {8.92669545919224, -12.524321474202475}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.158857235539752, -5.518047851525901}, 0.0844279056857918],
          InsetBox["\<\"Central African Republic\"\>", 
          Offset[{2, 2}, {9.243285141225543, -5.433619945840109}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.055477234811656, -6.181986854224035}, 0.0844279056857918],
          InsetBox["\<\"Chad\"\>", 
          Offset[{2, 2}, {9.139905140497447, -6.097558948538243}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.646668234334323, -12.506200851448757}, 
          0.0844279056857918], 
         InsetBox["\<\"Chile\"\>", 
          Offset[{2, 2}, {8.731096140020114, -12.421772945762966}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{17.497997117849003, -2.0764265329064284}, 
          0.0844279056857918], 
         InsetBox["\<\"China\"\>", 
          Offset[{2, 2}, {17.582425023534796, -1.9919986272206367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.879204591015457, -12.558821788698424}, 
          0.0844279056857918], 
         InsetBox["\<\"Colombia\"\>", 
          Offset[{2, 2}, {7.963632496701249, -12.474393883012633}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.003373698921111, -6.682099606833234}, 
          0.0844279056857918], 
         InsetBox["\<\"Comoros\"\>", 
          Offset[{2, 2}, {10.087801604606902, -6.597671701147442}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.401407384530948, -5.159128993796304}, 0.0844279056857918],
          InsetBox["\<\"Congo\"\>", 
          Offset[{2, 2}, {9.48583529021674, -5.074701088110512}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.663518900078277, -13.052491157045772}, 
          0.0844279056857918], 
         InsetBox["\<\"Costa Rica\"\>", 
          Offset[{2, 2}, {8.747946805764068, -12.96806325135998}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.05828493188567, -5.189039837234462}, 0.0844279056857918],
          InsetBox["\<\"Cote d'Ivoire\"\>", 
          Offset[{2, 2}, {10.14271283757146, -5.10461193154867}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.377677338830933, -4.843190919055617}, 0.0844279056857918],
          InsetBox["\<\"Croatia\"\>", 
          Offset[{2, 2}, {5.462105244516725, -4.758763013369825}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8742407021742933, -6.643992930593472}, 
          0.0844279056857918], 
         InsetBox["\<\"Cuba\"\>", 
          Offset[{2, 2}, {2.9586686078600852, -6.5595650249076805}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.492052884297676, -14.922499308371274}, 
          0.0844279056857918], 
         InsetBox["\<\"Cyprus\"\>", 
          Offset[{2, 2}, {11.576480789983467, -14.838071402685483}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.70756918386787, -4.473441966797037}, 0.0844279056857918], 
         InsetBox["\<\"Czech Republic\"\>", 
          Offset[{2, 2}, {5.791997089553662, -4.389014061111245}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.842814470664498, -5.969670672489367}, 0.0844279056857918],
          InsetBox["\<\"Denmark\"\>", 
          Offset[{2, 2}, {6.92724237635029, -5.885242766803575}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.938204449128218, -6.353301355616256}, 0.0844279056857918],
          InsetBox["\<\"Djibouti\"\>", 
          Offset[{2, 2}, {10.022632354814009, -6.268873449930464}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.826804883323171, -13.516916538213698}, 
          0.0844279056857918], 
         InsetBox["\<\"Dominica\"\>", 
          Offset[{2, 2}, {7.911232789008963, -13.432488632527907}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.5495936723765835, -12.987223259652179}, 
          0.0844279056857918], 
         InsetBox["\<\"Dominican Republic\"\>", 
          Offset[{2, 2}, {7.6340215780623755, -12.902795353966388}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.710753557627172, -14.07530477402019}, 0.0844279056857918],
          InsetBox["\<\"DR Congo\"\>", 
          Offset[{2, 2}, {7.795181463312964, -13.990876868334398}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.092085532718176, -13.725895656269214}, 
          0.0844279056857918], 
         InsetBox["\<\"Ecuador\"\>", 
          Offset[{2, 2}, {9.176513438403967, -13.641467750583423}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.666739895910528, -13.20417709119926}, 0.0844279056857918],
          InsetBox["\<\"Egypt\"\>", 
          Offset[{2, 2}, {7.75116780159632, -13.119749185513468}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.436950389483595, -13.248858202233793}, 
          0.0844279056857918], 
         InsetBox["\<\"El Salvador\"\>", 
          Offset[{2, 2}, {7.521378295169387, -13.164430296548002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.133704592034686, -13.170453515476904}, 
          0.0844279056857918], 
         InsetBox["\<\"Equatorial Guinea\"\>", 
          Offset[{2, 2}, {9.218132497720477, -13.086025609791113}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.822047594636891, -5.104189189142211}, 0.0844279056857918],
          InsetBox["\<\"Eritrea\"\>", 
          Offset[{2, 2}, {5.906475500322683, -5.019761283456419}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.090875686376416, -3.617225580230535}, 0.0844279056857918],
          InsetBox["\<\"Estonia\"\>", 
          Offset[{2, 2}, {7.175303592062208, -3.532797674544743}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.096447520600685, -6.126380680049509}, 0.0844279056857918],
          InsetBox["\<\"Ethiopia\"\>", 
          Offset[{2, 2}, {6.180875426286477, -6.041952774363717}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.763440475784999, -13.06909413565215}, 0.0844279056857918],
          InsetBox["\<\"Fiji\"\>", 
          Offset[{2, 2}, {2.847868381470791, -12.98466622996636}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.786836972662275, -4.350170652252656}, 0.0844279056857918],
          InsetBox["\<\"Finland\"\>", 
          Offset[{2, 2}, {6.871264878348067, -4.265742746566864}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.456854976323813, -5.903977970366823}, 0.0844279056857918],
          InsetBox["\<\"France\"\>", 
          Offset[{2, 2}, {9.541282882009604, -5.819550064681031}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.130058292279353, -12.500069869323678}, 
          0.0844279056857918], 
         InsetBox["\<\"Gabon\"\>", 
          Offset[{2, 2}, {8.214486197965144, -12.415641963637887}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.182197877956595, -15.131698776619286}, 
          0.0844279056857918], 
         InsetBox["\<\"Gambia\"\>", 
          Offset[{2, 2}, {11.266625783642386, -15.047270870933495}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4358059707570066, -5.809839177570022}, 
          0.0844279056857918], 
         InsetBox["\<\"Georgia\"\>", 
          Offset[{2, 2}, {3.5202338764427985, -5.72541127188423}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.366729368628204, -5.406372414733381}, 0.0844279056857918],
          InsetBox["\<\"Germany\"\>", 
          Offset[{2, 2}, {6.451157274313996, -5.321944509047589}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.396842767665984, -14.68564534459582}, 
          0.0844279056857918], 
         InsetBox["\<\"Ghana\"\>", 
          Offset[{2, 2}, {11.481270673351775, -14.601217438910028}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.631977499328962, -5.347740779906159}, 0.0844279056857918],
          InsetBox["\<\"Greece\"\>", 
          Offset[{2, 2}, {5.716405405014754, -5.263312874220367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.927110415904662, -13.973590477789102}, 
          0.0844279056857918], 
         InsetBox["\<\"Grenada\"\>", 
          Offset[{2, 2}, {8.011538321590454, -13.889162572103311}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.327400999156206, -13.741263227786398}, 
          0.0844279056857918], 
         InsetBox["\<\"Guatemala\"\>", 
          Offset[{2, 2}, {9.411828904841997, -13.656835322100607}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.920795388341692, -14.239831265356043}, 
          0.0844279056857918], 
         InsetBox["\<\"Guinea\"\>", 
          Offset[{2, 2}, {8.005223294027484, -14.155403359670252}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.353367575292305, -6.618891544737945}, 
          0.0844279056857918], 
         InsetBox["\<\"Guinea-Bissau\"\>", 
          Offset[{2, 2}, {13.437795480978096, -6.534463639052153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.361349437320616, -14.166869508336084}, 
          0.0844279056857918], 
         InsetBox["\<\"Guyana\"\>", 
          Offset[{2, 2}, {8.445777343006407, -14.082441602650293}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.549361435458608, -13.434044196386584}, 
          0.0844279056857918], 
         InsetBox["\<\"Haiti\"\>", 
          Offset[{2, 2}, {7.6337893411444, -13.349616290700792}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.546684176147991, -13.884338203352119}, 
          0.0844279056857918], 
         InsetBox["\<\"Honduras\"\>", 
          Offset[{2, 2}, {7.631112081833783, -13.799910297666328}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{18.368831192373715, -1.5860684483801992}, 
          0.0844279056857918], 
         InsetBox["\<\"Hong Kong\"\>", 
          Offset[{2, 2}, {18.453259098059508, -1.5016405426944075}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.043543266089624, -5.786389076812884}, 0.0844279056857918],
          InsetBox["\<\"Hungary\"\>", 
          Offset[{2, 2}, {6.127971171775416, -5.701961171127092}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.307085270117799, -15.344353354282761}, 
          0.0844279056857918], 
         InsetBox["\<\"Iceland\"\>", 
          Offset[{2, 2}, {11.39151317580359, -15.25992544859697}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.912808346632483, -13.221683863665806}, 
          0.0844279056857918], 
         InsetBox["\<\"India\"\>", 
          Offset[{2, 2}, {9.997236252318274, -13.137255957980015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.998868317809671, -12.919903369862801}, 
          0.0844279056857918], 
         InsetBox["\<\"Indonesia\"\>", 
          Offset[{2, 2}, {5.083296223495463, -12.83547546417701}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.762657676190516, -13.578131071306188}, 
          0.0844279056857918], 
         InsetBox["\<\"Iran\"\>", 
          Offset[{2, 2}, {4.847085581876308, -13.493703165620397}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.832398794698992, -14.953129720923224}, 
          0.0844279056857918], 
         InsetBox["\<\"Iraq\"\>", 
          Offset[{2, 2}, {9.916826700384783, -14.868701815237433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.535072490360793, -14.456652139069188}, 
          0.0844279056857918], 
         InsetBox["\<\"Ireland\"\>", 
          Offset[{2, 2}, {11.619500396046584, -14.372224233383397}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.962684545550813, -14.56802811239555}, 0.0844279056857918],
          InsetBox["\<\"Israel\"\>", 
          Offset[{2, 2}, {9.047112451236604, -14.48360020670976}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.045169786805104, -3.520024606216439}, 0.0844279056857918],
          InsetBox["\<\"Italy\"\>", 
          Offset[{2, 2}, {6.129597692490896, -3.435596700530647}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.019218802242019, -12.665128982288776}, 
          0.0844279056857918], 
         InsetBox["\<\"Jamaica\"\>", 
          Offset[{2, 2}, {9.10364670792781, -12.580701076602985}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.273539513204637, -13.504183118647742}, 
          0.0844279056857918], 
         InsetBox["\<\"Japan\"\>", 
          Offset[{2, 2}, {5.357967418890429, -13.41975521296195}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.29417266520171, -14.331540900576579}, 0.0844279056857918],
          InsetBox["\<\"Jordan\"\>", 
          Offset[{2, 2}, {9.378600570887501, -14.247112994890788}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6070130906151814, -7.265288358250715}, 
          0.0844279056857918], 
         InsetBox["\<\"Kazakhstan\"\>", 
          Offset[{2, 2}, {3.6914409963009733, -7.180860452564923}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.823752321511122, -15.204280052191674}, 
          0.0844279056857918], 
         InsetBox["\<\"Kenya\"\>", 
          Offset[{2, 2}, {11.908180227196913, -15.119852146505883}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.47875477045665, -13.618396739771356}, 0.0844279056857918],
          InsetBox["\<\"Kiribati\"\>", 
          Offset[{2, 2}, {7.563182676142442, -13.533968834085565}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.897347557751539, -11.51856376356673}, 
          0.0844279056857918], 
         InsetBox["\<\"Kosovo\"\>", 
          Offset[{2, 2}, {10.98177546343733, -11.43413585788094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.988191405436081, -13.232903814900945}, 
          0.0844279056857918], 
         InsetBox["\<\"Kuwait\"\>", 
          Offset[{2, 2}, {8.072619311121873, -13.148475909215154}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2651162622787493, -7.196820867737445}, 
          0.0844279056857918], 
         InsetBox["\<\"Kyrgyzstan\"\>", 
          Offset[{2, 2}, {3.3495441679645412, -7.112392962051653}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5984346002803758, -14.393179486448135}, 
          0.0844279056857918], 
         InsetBox["\<\"Lao PDR\"\>", 
          Offset[{2, 2}, {3.6828625059661677, -14.308751580762344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2115083483629707, -6.653764671230162}, 
          0.0844279056857918], 
         InsetBox["\<\"Latvia\"\>", 
          Offset[{2, 2}, {3.2959362540487627, -6.56933676554437}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.331080547608805, -13.861494981908042}, 
          0.0844279056857918], 
         InsetBox["\<\"Lebanon\"\>", 
          Offset[{2, 2}, {8.415508453294596, -13.77706707622225}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.704282723552922, -13.883202564672464}, 
          0.0844279056857918], 
         InsetBox["\<\"Lesotho\"\>", 
          Offset[{2, 2}, {8.788710629238713, -13.798774658986673}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.588576330561349, -12.98910843651758}, 0.0844279056857918],
          InsetBox["\<\"Liberia\"\>", 
          Offset[{2, 2}, {4.673004236247141, -12.904680530831788}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.80950574642021, -2.355247103262907}, 0.0844279056857918], 
         InsetBox["\<\"Libya\"\>", 
          Offset[{2, 2}, {5.893933652106002, -2.270819197577115}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.92089179856448, -7.0344663725580885}, 0.0844279056857918],
          InsetBox["\<\"Lithuania\"\>", 
          Offset[{2, 2}, {4.0053197042502715, -6.9500384668722965}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.3914222135030005, -4.667972807478656}, 
          0.0844279056857918], 
         InsetBox["\<\"Luxembourg\"\>", 
          Offset[{2, 2}, {6.4758501191887925, -4.583544901792864}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{17.48916592851695, -3.076631631814619}, 0.0844279056857918],
          InsetBox["\<\"Macao\"\>", 
          Offset[{2, 2}, {17.573593834202743, -2.9922037261288272}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.154047166723375, -6.58872449404487}, 0.0844279056857918], 
         InsetBox["\<\"Madagascar\"\>", 
          Offset[{2, 2}, {9.238475072409166, -6.504296588359078}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.685759044797629, -10.778903520622611}, 
          0.0844279056857918], 
         InsetBox["\<\"Malawi\"\>", 
          Offset[{2, 2}, {7.770186950483421, -10.69447561493682}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.984674241268293, -14.172788109387945}, 
          0.0844279056857918], 
         InsetBox["\<\"Malaysia\"\>", 
          Offset[{2, 2}, {5.069102146954085, -14.088360203702154}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.472815015373549, -13.212993515569792}, 
          0.0844279056857918], 
         InsetBox["\<\"Maldives\"\>", 
          Offset[{2, 2}, {4.557242921059341, -13.128565609884001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.361606267998715, -5.636583994227365}, 
          0.0844279056857918], 
         InsetBox["\<\"Mali\"\>", 
          Offset[{2, 2}, {10.446034173684506, -5.552156088541573}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.577905077268011, -2.8666980969138542}, 
          0.0844279056857918], 
         InsetBox["\<\"Malta\"\>", 
          Offset[{2, 2}, {5.662332982953803, -2.7822701912280623}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.666734044079329, -10.837579691311872}, 
          0.0844279056857918], 
         InsetBox["\<\"Marshall Islands\"\>", 
          Offset[{2, 2}, {10.75116194976512, -10.75315178562608}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.998423291877913, -5.648034490244633}, 0.0844279056857918],
          InsetBox["\<\"Mauritania\"\>", 
          Offset[{2, 2}, {10.082851197563704, -5.563606584558841}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.644385151433402, -14.721383808449714}, 
          0.0844279056857918], 
         InsetBox["\<\"Mauritius\"\>", 
          Offset[{2, 2}, {11.728813057119194, -14.636955902763923}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.869828060088152, -12.994378564300973}, 
          0.0844279056857918], 
         InsetBox["\<\"Mexico\"\>", 
          Offset[{2, 2}, {7.954255965773944, -12.909950658615182}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.86937469049545, -10.975886245631822}, 
          0.0844279056857918], 
         InsetBox["\<\"Micronesia\"\>", 
          Offset[{2, 2}, {10.95380259618124, -10.89145833994603}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.883265677457759, -5.998290040384575}, 0.0844279056857918],
          InsetBox["\<\"Moldova\"\>", 
          Offset[{2, 2}, {2.967693583143551, -5.913862134698783}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0784098767204187, -6.9567757366860645}, 
          0.0844279056857918], 
         InsetBox["\<\"Mongolia\"\>", 
          Offset[{2, 2}, {3.1628377824062106, -6.872347831000273}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.603029347570333, -11.121298719142237}, 
          0.0844279056857918], 
         InsetBox["\<\"Montenegro\"\>", 
          Offset[{2, 2}, {10.687457253256124, -11.036870813456446}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.240410552780224, -6.499074760868487}, 
          0.0844279056857918], 
         InsetBox["\<\"Morocco\"\>", 
          Offset[{2, 2}, {10.324838458466015, -6.414646855182695}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.4945085907535836, -10.856756084102518}, 
          0.0844279056857918], 
         InsetBox["\<\"Mozambique\"\>", 
          Offset[{2, 2}, {7.5789364964393755, -10.772328178416727}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.29178176809347, -15.49931520908263}, 0.0844279056857918], 
         InsetBox["\<\"Myanmar\"\>", 
          Offset[{2, 2}, {7.376209673779262, -15.414887303396839}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.01504259507739, -6.163250597572116}, 0.0844279056857918],
          InsetBox["\<\"Namibia\"\>", 
          Offset[{2, 2}, {12.09947050076318, -6.078822691886324}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5680515403405675, -13.370201119428192}, 
          0.0844279056857918], 
         InsetBox["\<\"Nauru\"\>", 
          Offset[{2, 2}, {1.6524794460263592, -13.2857732137424}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.71898653000595, -12.97666384778335}, 0.0844279056857918],
          InsetBox["\<\"Nepal\"\>", 
          Offset[{2, 2}, {10.80341443569174, -12.892235942097559}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.528806524394032, -4.963410192922121}, 0.0844279056857918],
          InsetBox["\<\"Netherlands\"\>", 
          Offset[{2, 2}, {6.613234430079824, -4.878982287236329}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2937827999521145, -13.406493472617363}, 
          0.0844279056857918], 
         InsetBox["\<\"New Zealand\"\>", 
          Offset[{2, 2}, {2.3782107056379065, -13.322065566931572}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.008690369807812, -13.69755918384634}, 0.0844279056857918],
          InsetBox["\<\"Nicaragua\"\>", 
          Offset[{2, 2}, {8.093118275493604, -13.61313127816055}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.714744606547022, -5.3708266569276795}, 
          0.0844279056857918], 
         InsetBox["\<\"Niger\"\>", 
          Offset[{2, 2}, {9.799172512232813, -5.2863987512418875}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.11272087196081, -14.18595499318877}, 0.0844279056857918], 
         InsetBox["\<\"Nigeria\"\>", 
          Offset[{2, 2}, {8.197148777646602, -14.101527087502978}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.561217378166098, -6.204870939177656}, 0.0844279056857918],
          InsetBox["\<\"North Macedonia\"\>", 
          Offset[{2, 2}, {6.64564528385189, -6.120443033491864}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.265087124492247, -6.569159723912803}, 0.0844279056857918],
          InsetBox["\<\"Norway\"\>", 
          Offset[{2, 2}, {6.349515030178039, -6.484731818227011}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.4717648789051285, -13.628963254138412}, 
          0.0844279056857918], 
         InsetBox["\<\"Oman\"\>", 
          Offset[{2, 2}, {4.5561927845909205, -13.544535348452621}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.107302087892606, -12.78776531555597}, 0.0844279056857918],
          InsetBox["\<\"Pakistan\"\>", 
          Offset[{2, 2}, {8.191729993578397, -12.703337409870178}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.10570095218481, -11.475611841639797}, 
          0.0844279056857918], 
         InsetBox["\<\"Palau\"\>", 
          Offset[{2, 2}, {11.1901288578706, -11.391183935954006}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.319513536397857, -15.339416849015926}, 
          0.0844279056857918], 
         InsetBox["\<\"Palestine\"\>", 
          Offset[{2, 2}, {9.403941442083648, -15.254988943330135}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.218353807093356, -14.39219580350361}, 0.0844279056857918],
          InsetBox["\<\"Panama\"\>", 
          Offset[{2, 2}, {8.302781712779147, -14.307767897817818}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7311429520234567, -13.7653557015203}, 0.0844279056857918],
          InsetBox["\<\"Papua New Guinea\"\>", 
          Offset[{2, 2}, {2.8155708577092486, -13.680927795834508}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.900592448738205, -16.068913305509845}, 
          0.0844279056857918], 
         InsetBox["\<\"Paraguay\"\>", 
          Offset[{2, 2}, {8.985020354423996, -15.984485399824054}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.846936752528519, -13.347360418335077}, 
          0.0844279056857918], 
         InsetBox["\<\"Peru\"\>", 
          Offset[{2, 2}, {8.93136465821431, -13.262932512649286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.202659791381805, -13.945292354562406}, 
          0.0844279056857918], 
         InsetBox["\<\"Philippines\"\>", 
          Offset[{2, 2}, {9.287087697067596, -13.860864448876615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.999115924299038, -5.696079624144995}, 0.0844279056857918],
          InsetBox["\<\"Poland\"\>", 
          Offset[{2, 2}, {7.08354382998483, -5.611651718459203}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.714485764236999, -6.23633049102367}, 0.0844279056857918],
          InsetBox["\<\"Portugal\"\>", 
          Offset[{2, 2}, {12.79891366992279, -6.151902585337878}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.580863462636131, -13.845419413283048}, 
          0.0844279056857918], 
         InsetBox["\<\"Qatar\"\>", 
          Offset[{2, 2}, {4.665291368321923, -13.760991507597257}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.023481142395616, -5.390111152979072}, 0.0844279056857918],
          InsetBox["\<\"Romania\"\>", 
          Offset[{2, 2}, {7.1079090480814076, -5.30568324729328}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.718887988766583, -6.388844169502089}, 0.0844279056857918],
          InsetBox["\<\"Russia\"\>", 
          Offset[{2, 2}, {3.803315894452375, -6.3044162638162975}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.300734270362964, -16.11084989806841}, 0.0844279056857918],
          InsetBox["\<\"Rwanda\"\>", 
          Offset[{2, 2}, {8.385162176048755, -16.026421992382616}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.443611080982887, -12.657226291437897}, 
          0.0844279056857918], 
         InsetBox["\<\"Saint Kitts and Nevis\"\>", 
          Offset[{2, 2}, {8.528038986668678, -12.572798385752106}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.672331340526132, -14.087071061197237}, 
          0.0844279056857918], 
         InsetBox["\<\"Saint Lucia\"\>", 
          Offset[{2, 2}, {8.756759246211923, -14.002643155511446}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.1692901567355, -13.474378961334853}, 0.0844279056857918], 
         InsetBox["\<\"Saint Vincent and the Grenadines\"\>", 
          Offset[{2, 2}, {9.25371806242129, -13.389951055649062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.6699706153680545, -13.294468936116257}, 
          0.0844279056857918], 
         InsetBox["\<\"Samoa\"\>", 
          Offset[{2, 2}, {2.7543985210538464, -13.210041030430466}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.818464077033568, -11.244820253812229}, 
          0.0844279056857918], 
         InsetBox["\<\"San Marino\"\>", 
          Offset[{2, 2}, {10.902891982719359, -11.160392348126438}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.500346823874738, -6.316460434097701}, 
          0.0844279056857918], 
         InsetBox["\<\"Sao Tome and Principe\"\>", 
          Offset[{2, 2}, {13.584774729560529, -6.232032528411909}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.733556246769556, -11.963179492353202}, 
          0.0844279056857918], 
         InsetBox["\<\"Saudi Arabia\"\>", 
          Offset[{2, 2}, {8.817984152455347, -11.878751586667411}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.749895570541577, -6.799527393230413}, 0.0844279056857918],
          InsetBox["\<\"Senegal\"\>", 
          Offset[{2, 2}, {9.834323476227368, -6.715099487544621}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.44311140389854, -10.793219012857683}, 
          0.0844279056857918], 
         InsetBox["\<\"Serbia\"\>", 
          Offset[{2, 2}, {10.52753930958433, -10.708791107171892}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.609783470450889, -12.805779025583156}, 
          0.0844279056857918], 
         InsetBox["\<\"Seychelles\"\>", 
          Offset[{2, 2}, {8.69421137613668, -12.721351119897365}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.970962145588413, -14.127139817619774}, 
          0.0844279056857918], 
         InsetBox["\<\"Sierra Leone\"\>", 
          Offset[{2, 2}, {9.055390051274204, -14.042711911933983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.630474141204483, -14.705048401500935}, 
          0.0844279056857918], 
         InsetBox["\<\"Singapore\"\>", 
          Offset[{2, 2}, {7.714902046890275, -14.620620495815144}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.1979612474459564, -3.8337462080227134}, 
          0.0844279056857918], 
         InsetBox["\<\"Slovakia\"\>", 
          Offset[{2, 2}, {5.282389153131748, -3.7493183023369214}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.039697182520187, -4.801843567259567}, 0.0844279056857918],
          InsetBox["\<\"Slovenia\"\>", 
          Offset[{2, 2}, {6.124125088205979, -4.717415661573775}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.452775171784382, -13.407040134919917}, 
          0.0844279056857918], 
         InsetBox["\<\"Solomon Islands\"\>", 
          Offset[{2, 2}, {4.537203077470174, -13.322612229234126}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.756729705941119, -11.107067253096703}, 
          0.0844279056857918], 
         InsetBox["\<\"Somalia\"\>", 
          Offset[{2, 2}, {8.84115761162691, -11.022639347410912}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.85901252450171, -11.642401127742318}, 0.0844279056857918],
          InsetBox["\<\"South Africa\"\>", 
          Offset[{2, 2}, {7.943440430187502, -11.557973222056527}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.947748465065708, -12.93303824381075}, 0.0844279056857918],
          InsetBox["\<\"South Korea\"\>", 
          Offset[{2, 2}, {9.032176370751499, -12.848610338124958}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.276849861384026, -6.092762078418261}, 
          0.0844279056857918], 
         InsetBox["\<\"Spain\"\>", 
          Offset[{2, 2}, {11.361277767069817, -6.008334172732469}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.844509164038797, -13.72558374021051}, 0.0844279056857918],
          InsetBox["\<\"Sri Lanka\"\>", 
          Offset[{2, 2}, {8.928937069724588, -13.641155834524719}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.646645051500676, -1.5680515403405684}, 
          0.0844279056857918], 
         InsetBox["\<\"Sudan\"\>", 
          Offset[{2, 2}, {5.731072957186468, -1.4836236346547766}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.301792496300411, -12.996914695739378}, 
          0.0844279056857918], 
         InsetBox["\<\"Suriname\"\>", 
          Offset[{2, 2}, {9.386220401986202, -12.912486790053586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.761635086477261, -5.964295763621598}, 0.0844279056857918],
          InsetBox["\<\"Sweden\"\>", 
          Offset[{2, 2}, {5.846062992163053, -5.879867857935806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.486321286148505, -5.876218316938545}, 0.0844279056857918],
          InsetBox["\<\"Switzerland\"\>", 
          Offset[{2, 2}, {6.570749191834297, -5.791790411252753}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.932491568357596, -2.768498902649637}, 0.0844279056857918],
          InsetBox["\<\"Syrian Arab Republic\"\>", 
          Offset[{2, 2}, {6.016919474043388, -2.684070996963845}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.039867624040054, -11.19453719754504}, 
          0.0844279056857918], 
         InsetBox["\<\"Taiwan\"\>", 
          Offset[{2, 2}, {11.124295529725845, -11.11010929185925}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5680515403405675, -6.462768923192044}, 
          0.0844279056857918], 
         InsetBox["\<\"Tajikistan\"\>", 
          Offset[{2, 2}, {1.6524794460263592, -6.378341017506252}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.471937702047356, -15.127361169593472}, 
          0.0844279056857918], 
         InsetBox["\<\"Tanzania\"\>", 
          Offset[{2, 2}, {11.556365607733147, -15.042933263907681}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.258265183243218, -14.019683053841879}, 
          0.0844279056857918], 
         InsetBox["\<\"Thailand\"\>", 
          Offset[{2, 2}, {4.34269308892901, -13.935255148156088}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.313022109535039, -10.945476858255411}, 
          0.0844279056857918], 
         InsetBox["\<\"Timor-Leste\"\>", 
          Offset[{2, 2}, {10.39745001522083, -10.86104895256962}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.52752108449084, -6.479477970747703}, 0.0844279056857918], 
         InsetBox["\<\"Togo\"\>", 
          Offset[{2, 2}, {9.61194899017663, -6.395050065061911}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.650586865459987, -13.523012590643177}, 
          0.0844279056857918], 
         InsetBox["\<\"Tonga\"\>", 
          Offset[{2, 2}, {2.735014771145779, -13.438584684957386}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.48499391263497, -14.385322187528416}, 0.0844279056857918],
          InsetBox["\<\"Trinidad and Tobago\"\>", 
          Offset[{2, 2}, {8.56942181832076, -14.300894281842625}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.398728529199479, -5.907712874176071}, 
          0.0844279056857918], 
         InsetBox["\<\"Tunisia\"\>", 
          Offset[{2, 2}, {10.48315643488527, -5.823284968490279}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.037594193882065, -5.092357487672473}, 0.0844279056857918],
          InsetBox["\<\"Turkey\"\>", 
          Offset[{2, 2}, {7.122022099567857, -5.007929581986681}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9877832351823672, -7.6428004399414755}, 
          0.0844279056857918], 
         InsetBox["\<\"Turkmenistan\"\>", 
          Offset[{2, 2}, {2.072211140868159, -7.558372534255684}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.031346885127304, -15.4002060862261}, 0.0844279056857918],
          InsetBox["\<\"Tuvalu\"\>", 
          Offset[{2, 2}, {11.115774790813095, -15.31577818054031}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.536376613393509, -15.590962431528016}, 
          0.0844279056857918], 
         InsetBox["\<\"Uganda\"\>", 
          Offset[{2, 2}, {12.6208045190793, -15.506534525842225}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.689198742643775, -7.150569806857612}, 0.0844279056857918],
          InsetBox["\<\"Ukraine\"\>", 
          Offset[{2, 2}, {2.773626648329567, -7.06614190117182}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.772869373155018, -13.23494671191242}, 0.0844279056857918],
          InsetBox["\<\"United Arab Emirates\"\>", 
          Offset[{2, 2}, {4.85729727884081, -13.150518806226628}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.738056788123048, -14.636310468209166}, 
          0.0844279056857918], 
         InsetBox["\<\"United Kingdom\"\>", 
          Offset[{2, 2}, {10.822484693808839, -14.551882562523375}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.44473525081569, -13.422053220856473}, 0.0844279056857918],
          InsetBox["\<\"United States\"\>", 
          Offset[{2, 2}, {8.52916315650148, -13.337625315170682}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.702330607140759, -16.139163536565647}, 
          0.0844279056857918], 
         InsetBox["\<\"Uruguay\"\>", 
          Offset[{2, 2}, {8.78675851282655, -16.054735630879854}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4325339164113444, -6.422187619933961}, 
          0.0844279056857918], 
         InsetBox["\<\"Uzbekistan\"\>", 
          Offset[{2, 2}, {2.5169618220971364, -6.337759714248169}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.715713245328324, -14.102186053270431}, 
          0.0844279056857918], 
         InsetBox["\<\"Vanuatu\"\>", 
          Offset[{2, 2}, {4.800141151014116, -14.01775814758464}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.7677099300970855, -12.870445170448152}, 
          0.0844279056857918], 
         InsetBox["\<\"Viet Nam\"\>", 
          Offset[{2, 2}, {4.8521378357828775, -12.78601726476236}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{16.636449904555874, -1.568051540340568}, 
          0.0844279056857918], 
         InsetBox["\<\"Yemen\"\>", 
          Offset[{2, 2}, {16.720877810241667, -1.4836236346547762}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.900799597712782, -10.803785314585083}, 
          0.0844279056857918], 
         InsetBox["\<\"Zambia\"\>", 
          Offset[{2, 2}, {7.985227503398574, -10.719357408899292}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.3367207857903844, -11.001742469193244}, 
          0.0844279056857918], 
         InsetBox["\<\"Zimbabwe\"\>", 
          Offset[{2, 2}, {7.421148691476176, -10.917314563507453}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1097.5115356445312`, Automatic}]], "Output",
 CellChangeTimes->{{3.856211500885099*^9, 3.856211511540332*^9}, 
   3.8562120231480083`*^9, 3.8624281259092283`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"582ff1e3-0751-4095-b114-198147a8c90e"],

Cell[GraphicsData["PDF", "\<\
\>"], "Graphics",
 ImageSize->{350, 350},
 ImageMargins->0,
 ImageRegion->{{0., 1.}, {0., 
  1.}},ExpressionUUID->"1cce0115-a8df-4159-a039-c96737067aac"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Current trajectory: US and China", "Subsubsection",
 CellChangeTimes->{{3.862923371765204*^9, 
  3.8629233772667503`*^9}},ExpressionUUID->"287df545-587f-4c00-9cdd-\
0a1f2e27cbe5"],

Cell["Current growth trajectories of the U.S. and China.", "Text",
 CellChangeTimes->{{3.872110400947598*^9, 
  3.872110409696312*^9}},ExpressionUUID->"8c5903f1-2f19-4d11-9c21-\
bfecff65ca03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"SimulateLawOfMotionS", "[", 
    RowBox[{
     RowBox[{"WorldPowerStructure", "[", "2020", "]"}], ",", "25"}], "]"}]}], 
  ";", 
  RowBox[{"SizeSeriesSubsetPlot", "[", 
   RowBox[{"sim", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"CountryID", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<United States\>\"", ",", "\"\<China\>\""}], "}"}]}], 
     "]"}], ",", "2020", ",", "\"\<\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.862867670281186*^9, 3.862867694085764*^9}, {
   3.862867746930325*^9, 3.862867808154854*^9}, {3.862867843768877*^9, 
   3.86286784705441*^9}, {3.8628678958097677`*^9, 3.862867904221582*^9}, 
   3.862868271477491*^9, {3.8628683579726677`*^9, 3.86286837388091*^9}, {
   3.8629213799730883`*^9, 3.862921382249091*^9}, {3.862922016289006*^9, 
   3.8629220313520823`*^9}, 3.872107281158759*^9, 3.872107323835827*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[85]:=",ExpressionUUID->"2f2c0ba8-c018-4bd1-8de0-45c3efca9980"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtx08owwEYxvFfDkr8tDhoiwPiwIGVctG8lgvKSiRGjKbMQVObFjuQsnEw
a4pae4fRDpRCWSgHaWlErdnGtM3MtMWmpVmSP6+nvj19igdG26QZDMPwfvr9
v+kQGCYzX6JxCf9sQCiV5LCs6oa8jFDZbXROTLrJRoRU+ziX1XvIZgTxijnX
YfOSLQiDPKuKk7wlWxG2Pzqm+hp85C2E5hPPRs/aPXkHIe9yuC6Q7SfvIezy
tfNV1/8+QCg4Y+q1qwHyEcJFsjw1pA6STxAWOsvSTdIH8inCdG1/+LArRLYj
FNbMZInEj2QHgmJWoTPJwuQrhOPN2fNWzRPZibDODyrZ/QjZjVDNVRTpE8/k
OwSRIi03CaJkP4K3wmX7MsbIIQTlmEowx76QIwhqK2MvXXwlxxCWpCWcXkOc
HEf49DSKLLIEOYkgH3n3RVvehN/oL5IT
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtzztIQgEYBeCbYGAgBTVENwcJh4iENFrvj01FNGg0RBBetUXSoYaGaCho
aXFIkBL/hoagkCSHoMiQoIRAIwMHg4J8lc/rq8we5u+Bw+Ebj5y3ak0ihmH6
Gv3fZmwIDLN7jmsxTdM7CGK7b/BJHSc7EFyKXDtTadmJUO9XOMv+BHkfwcSX
eHYvST5AGBUy6uh6inyIMP0jQbfljXyMYNXqmB7zO/kEQbrBiRwrabIXwadi
DaHtDPkMYYB7jM97suQLhJtvhT8Ry5GvEFSegLLbnidfIyyKHy7NXIF8i5Da
9M7xQst3CPfxMb3eLZBDCLLgSy2yXCSHEYKfSzPceIkcQZiqdwhdsjI5imBM
Fn9DbRXyc+PPQu+sRGj5FSE8vFWYzFbJSQRLNTChrH6Q0whyXD3SSWvkfOM/
yzoMI1/kEoLh1DXUaaxr/gCv6JdK
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.2187662463147906`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.2187662463147906`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.2187662463147906`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.2187662463147906`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.2187662463147906`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.2187662463147906`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.2187662463147906`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.2187662463147906`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{76., 6.500000000000017}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{76., -6.499999999999983}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., -6.499999999999997}, {2046.552517361111, 
             3.2187662463147906`*^14}], 
            Offset[{10., 6.500000000000003}, {2046.552517361111, 
             3.2187662463147906`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"United States\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{43., 9.547918011776346*^-15}, \
{2046.552517361111, 3.2187662463147906*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.994572291878942*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.994572291878942*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.994572291878942*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.994572291878942*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.994572291878942*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.994572291878942*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.994572291878942*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.994572291878942*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.994572291878942*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{42., 6.500000000000009}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{42., -6.499999999999991}, {2046.552517361111, 
             4.994572291878942*^14}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             2046.552517361111, 4.994572291878942*^14}], 
            Offset[{10., 6.500000000000002}, {2046.552517361111, 
             4.994572291878942*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26., 5.773159728050814*^-15}, \
{2046.552517361111, 4.994572291878942*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2019.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 94.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\"", TraditionalForm],
  PlotRange->{{2019.4791666666665`, 2045.}, {0, 4.994572291878942*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8721073168150587`*^9, 3.872107325264174*^9}, 
   3.872108156570178*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0f259ca8-1e36-4ed0-a978-bcaac245f32c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hypothetical ITN: Representative scenario from Swing States", \
"Subsubsection",
 CellChangeTimes->{{3.862866591631341*^9, 3.862866596125926*^9}, {
  3.863200204080508*^9, 
  3.8632002401824636`*^9}},ExpressionUUID->"dfeb0a89-d6cb-4219-86e2-\
97edd6c0a41e"],

Cell[TextData[{
 "Predicted growth of the U.S.- and China-led coalitions, given a likely \
scenario. Reference is to: Poulshock, Michael. ",
 StyleBox["Swing States in Great Power Competition",
  FontSlant->"Italic"],
 " (2022). Available at: \
https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4124778."
}], "Text",
 CellChangeTimes->{{3.872110421042425*^9, 
  3.872110500632917*^9}},ExpressionUUID->"a0411c48-9889-4c48-aff1-\
d89e1a2397a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"us", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"CountryID", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Afghanistan\>\"", ",", "\"\<Algeria\>\"", ",", 
       "\"\<Antigua and Barbuda\>\"", ",", "\"\<Aruba\>\"", ",", 
       "\"\<Bahamas\>\"", ",", "\"\<Bahrain\>\"", ",", "\"\<Barbados\>\"", 
       ",", "\"\<Bermuda\>\"", ",", "\"\<Canada\>\"", ",", 
       "\"\<Costa Rica\>\"", ",", "\"\<Cyprus\>\"", ",", "\"\<Dominica\>\"", 
       ",", "\"\<Dominican Republic\>\"", ",", "\"\<Ecuador\>\"", ",", 
       "\"\<Gabon\>\"", ",", "\"\<Guatemala\>\"", ",", "\"\<Haiti\>\"", ",", 
       "\"\<Iceland\>\"", ",", "\"\<Maldives\>\"", ",", "\"\<Mexico\>\"", 
       ",", "\"\<Micronesia\>\"", ",", "\"\<Panama\>\"", ",", 
       "\"\<Saint Kitts and Nevis\>\"", ",", "\"\<Saint Lucia\>\"", ",", 
       "\"\<Saint Vincent and the Grenadines\>\"", ",", "\"\<Samoa\>\"", ",", 
       "\"\<Seychelles\>\"", ",", "\"\<Singapore\>\"", ",", "\"\<Taiwan\>\"", 
       ",", "\"\<Trinidad and Tobago\>\"", ",", "\"\<Tuvalu\>\"", ",", 
       "\"\<United States\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"china", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"CountryID", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Albania\>\"", ",", "\"\<Angola\>\"", ",", "\"\<Armenia\>\"", ",", 
       "\"\<Australia\>\"", ",", "\"\<Austria\>\"", ",", "\"\<Azerbaijan\>\"",
        ",", "\"\<Belgium\>\"", ",", "\"\<Bosnia and Herzegovina\>\"", ",", 
       "\"\<Brunei Darussalam\>\"", ",", "\"\<Burkina Faso\>\"", ",", 
       "\"\<Burundi\>\"", ",", "\"\<Cambodia\>\"", ",", "\"\<Cameroon\>\"", 
       ",", "\"\<Central African Republic\>\"", ",", "\"\<China\>\"", ",", 
       "\"\<Colombia\>\"", ",", "\"\<Comoros\>\"", ",", "\"\<Congo\>\"", ",", 
       "\"\<Croatia\>\"", ",", "\"\<Czech Republic\>\"", ",", 
       "\"\<DR Congo\>\"", ",", "\"\<Equatorial Guinea\>\"", ",", 
       "\"\<Georgia\>\"", ",", "\"\<Guinea\>\"", ",", "\"\<Guinea-Bissau\>\"",
        ",", "\"\<Hong Kong\>\"", ",", "\"\<Hungary\>\"", ",", 
       "\"\<Indonesia\>\"", ",", "\"\<Iraq\>\"", ",", "\"\<Ireland\>\"", ",", 
       "\"\<Jamaica\>\"", ",", "\"\<Kazakhstan\>\"", ",", "\"\<Kiribati\>\"", 
       ",", "\"\<Kosovo\>\"", ",", "\"\<Kyrgyzstan\>\"", ",", 
       "\"\<Lao PDR\>\"", ",", "\"\<Lesotho\>\"", ",", "\"\<Liberia\>\"", 
       ",", "\"\<Mali\>\"", ",", "\"\<Mauritius\>\"", ",", "\"\<Moldova\>\"", 
       ",", "\"\<Myanmar\>\"", ",", "\"\<Namibia\>\"", ",", "\"\<Nauru\>\"", 
       ",", "\"\<Nepal\>\"", ",", "\"\<Netherlands\>\"", ",", "\"\<Niger\>\"",
        ",", "\"\<North Macedonia\>\"", ",", "\"\<Palestine\>\"", ",", 
       "\"\<Romania\>\"", ",", "\"\<Rwanda\>\"", ",", "\"\<Serbia\>\"", ",", 
       "\"\<Slovakia\>\"", ",", "\"\<Solomon Islands\>\"", ",", 
       "\"\<South Africa\>\"", ",", "\"\<Sri Lanka\>\"", ",", 
       "\"\<Tanzania\>\"", ",", "\"\<Turkmenistan\>\"", ",", "\"\<Uganda\>\"",
        ",", "\"\<Uruguay\>\"", ",", "\"\<Uzbekistan\>\"", ",", 
       "\"\<Yemen\>\"", ",", "\"\<Zambia\>\"", ",", "\"\<Zimbabwe\>\""}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"TradeMatrix", "[", "2020", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pct", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allies", "=", "us"}], ";", " ", 
  RowBox[{"opps", "=", "china"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newT", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"ReallocateTrade", ",", "T", ",", "allies"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allies", "=", "china"}], ";", 
  RowBox[{"opps", "=", "us"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newT", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"ReallocateTrade", ",", "newT", ",", "allies"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8555138996762247`*^9, 3.855513925272188*^9}, {
   3.85551397506365*^9, 3.8555139756509438`*^9}, {3.855514297903702*^9, 
   3.855514303391714*^9}, {3.855514337446329*^9, 3.855514349016232*^9}, {
   3.855515040153593*^9, 3.855515054806979*^9}, {3.855515086814733*^9, 
   3.855515093481839*^9}, {3.855515478895151*^9, 3.855515509366889*^9}, {
   3.855515579631802*^9, 3.855515597166844*^9}, {3.8555157173820457`*^9, 
   3.855515718255637*^9}, {3.855515781680902*^9, 3.855515810726684*^9}, {
   3.8555158503277683`*^9, 3.855515885515648*^9}, {3.855516164981388*^9, 
   3.8555161653537197`*^9}, {3.855516228839775*^9, 3.8555162494554462`*^9}, {
   3.855516341095805*^9, 3.855516341297091*^9}, 3.8555163724880543`*^9, 
   3.855611033091496*^9, {3.8556118429529467`*^9, 3.855611843136241*^9}, 
   3.85561199157685*^9, {3.862866022524021*^9, 3.862866104684312*^9}, {
   3.862866135962159*^9, 3.862866200351619*^9}, {3.8628663060063753`*^9, 
   3.862866338641762*^9}, {3.862866398313897*^9, 3.862866454337503*^9}, {
   3.862866526689681*^9, 3.862866559690432*^9}, {3.8628666159023027`*^9, 
   3.862866682015929*^9}, 3.86286671756866*^9, {3.862866883715208*^9, 
   3.862866887116384*^9}, {3.862866977496244*^9, 3.86286699213498*^9}, {
   3.862867092478818*^9, 3.862867137304385*^9}, {3.8628673868783493`*^9, 
   3.86286739962521*^9}, {3.862867865957419*^9, 3.862867876417845*^9}, {
   3.862868728347522*^9, 3.8628687984856377`*^9}, {3.8629231108985777`*^9, 
   3.862923135577366*^9}, {3.8629234045745163`*^9, 3.862923404716722*^9}, 
   3.862923784504991*^9, 3.862923923454042*^9, {3.863200282593115*^9, 
   3.8632002905417852`*^9}, 3.8632007319529676`*^9, 3.863200778855095*^9, 
   3.871239172415983*^9, 3.871239204556159*^9, {3.871239234707046*^9, 
   3.871239239734776*^9}, {3.871239401434453*^9, 3.871239434906046*^9}, {
   3.871239708596407*^9, 3.871239712029924*^9}, 3.871240951380437*^9, {
   3.871241252234584*^9, 3.871241252559497*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[86]:=",ExpressionUUID->"32b948af-51a8-45a7-b0f3-da68ecab9d71"],

Cell["Growth of China and U.S. in simulation", "Text",
 CellChangeTimes->{{3.8629238572471027`*^9, 
  3.862923869833131*^9}},ExpressionUUID->"ef8f0cdc-7261-45fd-b62e-\
8e5240ae1176"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"PowerStructure", "[", 
    RowBox[{
     RowBox[{"WealthVector", "[", "2020", "]"}], ",", 
     RowBox[{"NormalizeT", "[", 
      RowBox[{
       RowBox[{"NormalizationVector", "[", "2020", "]"}], ",", "newT"}], 
      "]"}], ",", 
     RowBox[{"Tneg", "[", "2020", "]"}]}], "]"}]}], ";", 
  RowBox[{"sim", "=", 
   RowBox[{"SimulateLawOfMotionS", "[", 
    RowBox[{"ps", ",", "25"}], "]"}]}], ";", 
  RowBox[{"SizeSeriesSubsetPlot", "[", 
   RowBox[{"sim", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"CountryID", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<United States\>\"", ",", "\"\<China\>\""}], "}"}]}], 
     "]"}], ",", "2020", ",", "\"\<\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.862867670281186*^9, 3.862867694085764*^9}, {
   3.862867746930325*^9, 3.862867757128916*^9}, {3.86286781586078*^9, 
   3.862867849017482*^9}, {3.862867894384514*^9, 3.862867901375332*^9}, 
   3.862868267260745*^9, 3.8628683891306553`*^9, 3.862923990163322*^9, {
   3.8721076018238497`*^9, 3.872107616070356*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[94]:=",ExpressionUUID->"fae7a79f-80ca-4562-8514-f12e94f348f3"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwt0E0ogwEcBvC3HSgpB7nMZcu2cnBxQtLfjg7E3HCgTRvFRTvQyuE9WGbN
fESZv8MmmUTTkk3kI9NktmYfbBrel9e2Zoujg9nfU09Pv+sjHRrv0YgYhhEX
+7elWBAYRnYl2r9XlryI4HhcDuiXIuQVhKZGnOufjZLXEBTZOrPNGiNvILRu
q2oMzjjZjqA1ef3ayAN5C8FvLECmOkHeQQj2BVoc6iR5D6FyMz3acf1EPkAY
4cK5LmmKfIjgEYZtx8K/vQi6XXXvoOeZfIpQ9tNscK++kC8Qzic/3MC+kn0I
grxWYpriyDcILv7W3DDNk+8Q1gcsoTPrGzmMIE2KmS/XOzmGoJkIXI5xAjmB
UG+I+PKyNDmFMOMyVrXpM2QOoT2o1yniWbKAEC0/4dnOHDmLMB+q6IboJzmP
kJGkk/KjPPm7+L/TzqoWCspfbdycZg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtzT1IQgEUBeCnQQ8ccgpBg8waMqjJreXiEIFDJRmEtAhBiBFBe2AETVEQ
WKJdEYcGw4w3ZBn0MMpIKJ5FBQUOVs+fUvMnU4jM64HD4ZtOj2XBOCtlGEbZ
6P82s4HAMJoOWeFV3/QWgtjpXuU9b+RthHr4crzb/E52IUxy1he5WiR7EPoD
AYWYa9mHULvSmGTXKfIegiU69psMpsl+BEHLOQq+DPkAYcKrHOJ8WTKHINWK
bSfBD/JR4/9QZduNfZLDCClDvE9SyZHPECIJYW3UkSefI2ymVS77cIEcRXDO
BJxyseUYgpV5ujC5v8i3CF1hXTtvLpLvELyWHUWkt0R+RMgOsDfxcsvPCJKV
0+lFoUxOIFQeErz6uEJOIiytQ2R+/5ssIgwuG6Yy/io5izASMrK60A85j3A/
VzSmhRq5hGCzl9lQra7/Azf8nKQ=
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.091913450646343*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.091913450646343*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.091913450646343*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.091913450646343*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.091913450646343*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.091913450646343*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.091913450646343*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.091913450646343*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.091913450646343*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{76., 6.500000000000017}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{76., -6.499999999999983}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., -6.499999999999997}, {2046.552517361111, 
             3.091913450646343*^14}], 
            Offset[{10., 6.500000000000003}, {2046.552517361111, 
             3.091913450646343*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"United States\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{43., 9.547918011776346*^-15}, \
{2046.552517361111, 3.091913450646343*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.9221856128823075`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.9221856128823075`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.9221856128823075`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.9221856128823075`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.9221856128823075`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.9221856128823075`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.9221856128823075`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.9221856128823075`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{42., 6.500000000000009}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{42., -6.499999999999991}, {2046.552517361111, 
             4.9221856128823075`*^14}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             2046.552517361111, 4.9221856128823075`*^14}], 
            Offset[{10., 6.500000000000002}, {2046.552517361111, 
             4.9221856128823075`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26., 5.773159728050814*^-15}, \
{2046.552517361111, 4.9221856128823075*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2019.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 94.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\"", TraditionalForm],
  PlotRange->{{2019.4791666666665`, 2045.}, {0, 4.9221856128823075`*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8721076173560762`*^9, 3.872107624851974*^9}, 
   3.872108162385844*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"aba72447-b9a2-4324-9bb8-4898acfd8e03"]
}, Open  ]],

Cell["Total wealth of each coalition", "Text",
 CellChangeTimes->{{3.862923564992827*^9, 
  3.862923568393668*^9}},ExpressionUUID->"8db4a201-10ec-4539-9b9b-\
fef0a4a63dee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"blue", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "sim", "]"}], "[", 
     RowBox[{"[", "us", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"red", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "sim", "]"}], "[", 
     RowBox[{"[", "china", "]"}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"2020", ",", 
           RowBox[{"2020", "+", 
            RowBox[{"Length", "[", "sim", "]"}], "-", "1"}]}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"blue", ",", "red"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<U.S.-led coalition\>\"", ",", "\"\<China-led coalition\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Likely Coalitions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8629235059634457`*^9, 3.8629235729946527`*^9}, {
  3.862923829624352*^9, 3.86292383810341*^9}, {3.8632007164042377`*^9, 
  3.86320072412572*^9}, {3.871239505149317*^9, 3.871239508801571*^9}, {
  3.871239756509066*^9, 3.87123976857761*^9}, {3.871241226604817*^9, 
  3.871241238052518*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[95]:=",ExpressionUUID->"7ad05d26-e77e-4f17-8ff8-236619c42eb7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYT5jswJIRckK2/7wTmT5nvcDPwR8jWvAcQ/oz5
DvHL+jnENR5C+HPmO8QUa9icfQ3lLwDybc52Ge56BOEvme/Qz30rauPkxxD+
ivkOSStfTTxe8QTCXzPfIWqV5eyfmU8h/A3zHezydCSvpT+D8LfMd1g30THr
S9FzCH8HUH3v5xlful9A+HvmO8i9N55Yv/klhH9gvoM+x6ZG91evIPwj8x2y
Vk56w274BsI/AXRfiotxW8dbCP/MfIfNVUkckz6+g/AvzHdgi1T/2mT2AcK/
Mt/h25F3lx7/hfJvAMPnW15ByvmPEP6d+Q5uzC7Xm1d/gvAfzHeYpPN07fFJ
nyH8J/MdWFm/Ru5p/QLhvwDaX78s+2vLVwj/zXyH10q/vvNO/Abhf5jvILJ6
3vcVq75D+F/mO1iW7l5VeOmHEwDUBpq8
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYT5jswfNhSH370rROYP2W+QwyzeeDmd+8g/Bnz
Hew/RPbPEPwA4c+Z79C0g50jeROUv2C+w8rJHy7ERn2E8JfMdzh5fP5Paa5P
EP6K+Q4SWiIe6oeg/DXzHSRVtGtYmz9D+BvmO+Qvethp7fsFwt8CNO/N2d3+
il8h/B3zHW4/YzD8/B/K3zPf4bH2l49yr75B+AeA+hkULO/c/w7hH5nvIH5G
r+zwwx8Q/on5Djp/HHuKP/yE8M/Md3jLtLFoEs9vCP/CfId9i+xPnzX7A+Ff
me/QfP1m4e38vxD+jfkO8aKPOap2/IPw78x3+HTR9MgODgZnMP/BfAfl55dF
T+2F8p/Md9g0IVnufjUjhP8CaN4rheZsZyYI/818h/ZN/FteiDBD+B/mO8xf
9Njy2gco/8t8h/cv/7Ptus7iDACxiJZd
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.3667406741281956`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.3667406741281956`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.3667406741281956`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.3667406741281956`*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.3667406741281956`*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.3667406741281956`*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.3667406741281956`*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.3667406741281956`*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{91., 6.50000000000002}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{91., -6.49999999999998}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., -6.499999999999997}, {2046.552517361111, 
             4.3667406741281956`*^14}], 
            Offset[{10., 6.500000000000003}, {2046.552517361111, 
             4.3667406741281956`*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"U.S.-led coalition\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{50.5, 1.1213252548714081*^-14}, \
{2046.552517361111, 4.3667406741281956*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 7.333366894421099*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 7.333366894421099*^14}], 
            Offset[{0, 0}, {2046.552517361111, 7.333366894421099*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.333366894421099*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 7.333366894421099*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.333366894421099*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 7.333366894421099*^14}], 
            Offset[{0, 0}, {2046.552517361111, 7.333366894421099*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.333366894421099*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{98., 6.500000000000021}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{98., -6.499999999999979}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., -6.499999999999998}, {2046.552517361111, 
             7.333366894421099*^14}], 
            Offset[{10., 6.500000000000002}, {2046.552517361111, 
             7.333366894421099*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China-led coalition\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{54., 1.199040866595169*^-14}, \
{2046.552517361111, 7.333366894421099*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2019.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 116.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Likely Coalitions\"", TraditionalForm],
  PlotRange->{{2019.4791666666665`, 2045.}, {0, 7.333366894421099*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.871241640582428*^9, 3.872107692102992*^9, 
  3.87210816366931*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"89df5bb3-ee41-469a-9671-1a9f0a061254"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hypothetical ITN: Balancing Coalition from Swing States", \
"Subsubsection",
 CellChangeTimes->{{3.862866591631341*^9, 3.862866596125926*^9}, {
  3.863200204080508*^9, 3.863200209685925*^9}, {3.8721105271121693`*^9, 
  3.872110528605268*^9}},ExpressionUUID->"8c347135-bc43-46eb-ad2d-\
8190be94cfed"],

Cell[TextData[{
 "Predicted growth of the U.S.- and China-led coalitions, given a balancing \
scenario. Reference is to: Poulshock, Michael. ",
 StyleBox["Swing States in Great Power Competition",
  FontSlant->"Italic"],
 " (2022). Available at: \
https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4124778."
}], "Text",
 CellChangeTimes->{{3.872110421042425*^9, 
  3.87211052179991*^9}},ExpressionUUID->"85801cc7-8b1e-492b-a990-\
3a4e5ff56e02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"us", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"CountryID", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<United States\>\"", ",", "\"\<Canada\>\"", ",", "\"\<Japan\>\"", 
       ",", "\"\<Germany\>\"", ",", "\"\<South Korea\>\"", ",", 
       "\"\<France\>\"", ",", "\"\<Taiwan\>\"", ",", "\"\<United Kingdom\>\"",
        ",", "\"\<Spain\>\"", ",", "\"\<Australia\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"china", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"CountryID", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<China\>\"", ",", "\"\<Russia\>\"", ",", "\"\<Iran\>\"", ",", 
       "\"\<Pakistan\>\"", ",", "\"\<Indonesia\>\"", ",", 
       "\"\<United Arab Emirates\>\"", ",", "\"\<Nigeria\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"TradeMatrix", "[", "2020", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pct", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allies", "=", "us"}], ";", " ", 
  RowBox[{"opps", "=", "china"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newT", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"ReallocateTrade", ",", "T", ",", "allies"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allies", "=", "china"}], ";", 
  RowBox[{"opps", "=", "us"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newT", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"ReallocateTrade", ",", "newT", ",", "allies"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8555138996762247`*^9, 3.855513925272188*^9}, {
   3.85551397506365*^9, 3.8555139756509438`*^9}, {3.855514297903702*^9, 
   3.855514303391714*^9}, {3.855514337446329*^9, 3.855514349016232*^9}, {
   3.855515040153593*^9, 3.855515054806979*^9}, {3.855515086814733*^9, 
   3.855515093481839*^9}, {3.855515478895151*^9, 3.855515509366889*^9}, {
   3.855515579631802*^9, 3.855515597166844*^9}, {3.8555157173820457`*^9, 
   3.855515718255637*^9}, {3.855515781680902*^9, 3.855515810726684*^9}, {
   3.8555158503277683`*^9, 3.855515885515648*^9}, {3.855516164981388*^9, 
   3.8555161653537197`*^9}, {3.855516228839775*^9, 3.8555162494554462`*^9}, {
   3.855516341095805*^9, 3.855516341297091*^9}, 3.8555163724880543`*^9, 
   3.855611033091496*^9, {3.8556118429529467`*^9, 3.855611843136241*^9}, 
   3.85561199157685*^9, {3.862866022524021*^9, 3.862866104684312*^9}, {
   3.862866135962159*^9, 3.862866200351619*^9}, {3.8628663060063753`*^9, 
   3.862866338641762*^9}, {3.862866398313897*^9, 3.862866454337503*^9}, {
   3.862866526689681*^9, 3.862866559690432*^9}, {3.8628666159023027`*^9, 
   3.862866682015929*^9}, 3.86286671756866*^9, {3.862866883715208*^9, 
   3.862866887116384*^9}, {3.862866977496244*^9, 3.86286699213498*^9}, {
   3.862867092478818*^9, 3.862867137304385*^9}, {3.8628673868783493`*^9, 
   3.86286739962521*^9}, {3.862867865957419*^9, 3.862867876417845*^9}, {
   3.862868728347522*^9, 3.8628687984856377`*^9}, {3.8629231108985777`*^9, 
   3.862923135577366*^9}, {3.8629234045745163`*^9, 3.862923404716722*^9}, 
   3.862923784504991*^9, 3.862923923454042*^9, {3.863200282593115*^9, 
   3.8632002905417852`*^9}, 3.8632007319529676`*^9, 3.863200778855095*^9, 
   3.871239172415983*^9, 3.871239204556159*^9, {3.871239234707046*^9, 
   3.871239239734776*^9}, {3.871239401434453*^9, 3.871239434906046*^9}, {
   3.871239533579659*^9, 3.8712395387226057`*^9}, {3.871239721328693*^9, 
   3.871239721554987*^9}, 3.871240969097735*^9, {3.8712412614344053`*^9, 
   3.871241261594429*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[98]:=",ExpressionUUID->"793db871-3b6c-44af-8fc0-cf17424b6a68"],

Cell["Growth of China and U.S. in simulation", "Text",
 CellChangeTimes->{{3.8629238572471027`*^9, 
  3.862923869833131*^9}},ExpressionUUID->"1e5af7ed-8c54-48a3-b790-\
7114f1bca73d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"PowerStructure", "[", 
    RowBox[{
     RowBox[{"WealthVector", "[", "2020", "]"}], ",", 
     RowBox[{"NormalizeT", "[", 
      RowBox[{
       RowBox[{"NormalizationVector", "[", "2020", "]"}], ",", "newT"}], 
      "]"}], ",", 
     RowBox[{"Tneg", "[", "2020", "]"}]}], "]"}]}], ";", 
  RowBox[{"sim", "=", 
   RowBox[{"SimulateLawOfMotionS", "[", 
    RowBox[{"ps", ",", "25"}], "]"}]}], ";", 
  RowBox[{"SizeSeriesSubsetPlot", "[", 
   RowBox[{"sim", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"CountryID", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<United States\>\"", ",", "\"\<China\>\""}], "}"}]}], 
     "]"}], ",", "2020", ",", "\"\<\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.862867670281186*^9, 3.862867694085764*^9}, {
   3.862867746930325*^9, 3.862867757128916*^9}, {3.86286781586078*^9, 
   3.862867849017482*^9}, {3.862867894384514*^9, 3.862867901375332*^9}, 
   3.862868267260745*^9, 3.8628683891306553`*^9, 3.862923990163322*^9, {
   3.8721076018238497`*^9, 3.872107616070356*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[106]:=",ExpressionUUID->"9fcc1731-24b1-4748-b811-095611f671a2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtx00owwEYx/F/u2jTUqulTDQmtyVCbk/LYTspxWFRtlqRg0gUS1HMlJfD
bKzV42DlZWSa2mFqi7LW0pTZaGav2IxGk5Us7Nmvvv36CJUj3SoWwzBVf/1/
cWsIDCO6YFn9kqJ1CAOeZpnccEPeQKgb1UiXVgNkEwKX7drt2QyStxAa5tt4
OdsteRshKmU0V7E78g6CXHHZP10fIlsQeAsflYbJe/IRwiDby4QfwmQbQmHq
cGVZHCHbEVRfbiE/X7IDQcmDz29vlOxEyPB795wHMfI5wk9LRU3aGCe7EfSz
M6dl6wmyF8HhY7uspiTZh4DuuTHt8SP5GkFd7Vd3BJ7IQYQ+rr5zojxFDiGI
81pZoStNjiCEzFad0fxCTiAIkilRLfeV/IwQ3G8dGta8kTMInvi44oSTJWcR
ko2CRU6o5BxC05kF2+3vkl9qD5Yk
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtzlsogwEUB/CveeJBYUzswa3w5vLm9p3WavEgMS2NZOVRX1JEywttbyMm
i+lMyWXtYQ9LmktiJCQt5VpbDLML24yxKWZnp/79+738O4UKrrWXxzBMXjz/
nbhJBIYpSk8LPooS1iL0uwqW/fhE1iFkRq15go5nsh5heu3MOiJ0kw0I8u2e
Ks6T9BLCLb9NLdt/Ia8iVEy4ThZXPGQTQn6DV3446yWbEXYUtZxE6yNbECpj
v/fmBT95A8Ft7CzXWV7JW/H9mwyr/vqNvItQP9zdYlEFyDaEmuz1PllZkHyE
UN0sac+xJ32KwGkHQtLxEPkcQTWYZVKy7+QLBOexce4nJUy+QnA0Fdsa7Unf
IUh5KoXD+EF2xv9n97pYzSfZhZDLj5SGlBGyG0FclypWD32RfQiCMXZ+ZvSb
HEB4MDkvN6ei5DCCpkR4YLDERH/Zupg2
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.11726477855795*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.11726477855795*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.11726477855795*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.11726477855795*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 3.11726477855795*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 3.11726477855795*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 3.11726477855795*^14}], 
            Offset[{0, 0}, {2046.552517361111, 3.11726477855795*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             3.11726477855795*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{76., 6.500000000000017}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{76., -6.499999999999983}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., -6.499999999999997}, {2046.552517361111, 
             3.11726477855795*^14}], 
            Offset[{10., 6.500000000000003}, {2046.552517361111, 
             3.11726477855795*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"United States\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], Offset[{43., 9.547918011776346*^-15}, 
          {2046.552517361111, 3.11726477855795*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.874016853694169*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.874016853694169*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.874016853694169*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.874016853694169*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 4.874016853694169*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 4.874016853694169*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 4.874016853694169*^14}], 
            Offset[{0, 0}, {2046.552517361111, 4.874016853694169*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             4.874016853694169*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{42., 6.500000000000009}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{42., -6.499999999999991}, {2046.552517361111, 
             4.874016853694169*^14}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             2046.552517361111, 4.874016853694169*^14}], 
            Offset[{10., 6.500000000000002}, {2046.552517361111, 
             4.874016853694169*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{26., 5.773159728050814*^-15}, \
{2046.552517361111, 4.874016853694169*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2019.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 94.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\"", TraditionalForm],
  PlotRange->{{2019.4791666666665`, 2045.}, {0, 4.874016853694169*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872107861205921*^9, 3.8721081696196613`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"b2924880-68d8-468d-8c02-f9d504785fd2"]
}, Open  ]],

Cell["Total wealth of each coalition", "Text",
 CellChangeTimes->{{3.862923564992827*^9, 
  3.862923568393668*^9}},ExpressionUUID->"e9fdff9d-893e-4457-bb70-\
bda7444bd6cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"blue", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "sim", "]"}], "[", 
     RowBox[{"[", "us", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"red", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "sim", "]"}], "[", 
     RowBox[{"[", "china", "]"}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"2020", ",", 
           RowBox[{"2020", "+", 
            RowBox[{"Length", "[", "sim", "]"}], "-", "1"}]}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"blue", ",", "red"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<U.S.-led coalition\>\"", ",", "\"\<China-led coalition\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", "\"\<USD 2020\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Balancing Coalition\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8629235059634457`*^9, 3.8629235729946527`*^9}, {
   3.862923829624352*^9, 3.86292383810341*^9}, {3.8712397377967987`*^9, 
   3.871239742733336*^9}, 3.871239781851714*^9, {3.8712400076550007`*^9, 
   3.871240008909101*^9}, {3.871241174993713*^9, 3.8712412138443527`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[107]:=",ExpressionUUID->"1d1f1654-a357-4ae6-a095-00bd787e2a27"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwlzk0owwEYBvC/2RwcHbS2NFbkYhflMh9v5rBSO+wgX6lpSGhM6e+CUkML
S6sh9e5ADav/0moK+VyWluazNQ6Kg2XLZjOL2czep56efrenrFun7uExDCPK
9n9zMSEwU9uTx/5gY85mhHrbxpyk5I28jOBNmjiWDZHXELZ6DzscwTDZiuAW
6/Sx4XfyOsKOZfy5cyZCtiGMiQdc95oo2Y4wXaV5UCk/yA6EfplLUCuPkZ0I
1XopI5XHybsIqVaNwaT8JO8jFN4l96TaBPkIwVrKJiYWvshnCIaaxboWT5Ls
QXBecvPaom+yN/tXxPJGhn7IPoRN9YlQFUiRbxGu7c38QFua7M/+4yqLM6EM
+RHBdtMkbr9gFDk/IQgHZZ60LY/8grBikfQllnjkVwRjw3nYN5tPDiH8XkXd
5UY+OYIgOuAqzKsCchyhKykbPXUVKP4AcZGTxA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtx08ogwEYx/F3EjI3tJotpMSuTK0d9jRTU1NjtdsKZRcHRZJc3nCYZCkr
a9TjQFk5rJlokaUpmWWNsrI0TUv2spnZPzHs2a++/fq0jk4MjVUwDCP86/9L
W0VgWP+csRhXlmxBkNzxMysxjmxFKPRM2jvvX8mbCPWCGoc//EbeQui7dmm5
eIK8jXA6YjUvLCbJuwjnNtmaXvhO3kPQBcUNJ4dlOxA2dur4fEOK7EI40Cam
bLUf5CMEk0rV7/OUfYyAMiVTyabJHoSq/XijU/1J9iJo3NY2dVOGfIFwxl0q
FLmyrxBm2t1SQSRLDiDIm+1e/U2OfIswWD0cWw7mySGE6Mu4SPNQIIcRjAV5
oDv7RY4gqPIWESf+Jj8hDNjmZS26H/IzgsLPGEzrRTKH4JyVWVLTTG/JSQSf
pMvMdvDIaYRHKbsUivJ6fwH0SZSs
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 7.993124458247798*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 7.993124458247798*^14}], 
            Offset[{0, 0}, {2046.552517361111, 7.993124458247798*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.993124458247798*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 7.993124458247798*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 7.993124458247798*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 7.993124458247798*^14}], 
            Offset[{0, 0}, {2046.552517361111, 7.993124458247798*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             7.993124458247798*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{91., 6.50000000000002}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{91., -6.49999999999998}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., -6.499999999999997}, {2046.552517361111, 
             7.993124458247798*^14}], 
            Offset[{10., 6.500000000000003}, {2046.552517361111, 
             7.993124458247798*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"U.S.-led coalition\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{50.5, 1.1213252548714081*^-14}, \
{2046.552517361111, 7.993124458247798*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 6.294492204254041*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 6.294492204254041*^14}], 
            Offset[{0, 0}, {2046.552517361111, 6.294492204254041*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             6.294492204254041*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {2045.5316840277778`, 6.294492204254041*^14}], 
            Offset[{0, 0}, {2045.5316840277778`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2045.7868923611113`, 6.294492204254041*^14}], 
            Offset[{0., 0.}, {2046.0421006944446`, 6.294492204254041*^14}], 
            Offset[{0, 0}, {2046.552517361111, 6.294492204254041*^14}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., 2.220446049250313*^-15}, {2046.552517361111, 
             6.294492204254041*^14}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{98., 6.500000000000021}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{98., -6.499999999999979}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., -6.499999999999998}, {2046.552517361111, 
             6.294492204254041*^14}], 
            Offset[{10., 6.500000000000002}, {2046.552517361111, 
             6.294492204254041*^14}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"China-led coalition\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{54., 1.199040866595169*^-14}, \
{2046.552517361111, 6.294492204254041*^14}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Year\"", TraditionalForm], 
    FormBox["\"USD 2020\"", TraditionalForm]},
  AxesOrigin->{2019.4791666666665`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 116.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Balancing Coalition\"", TraditionalForm],
  PlotRange->{{2019.4791666666665`, 2045.}, {0, 7.993124458247798*^14}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.871241648400858*^9, 3.8721078649457817`*^9, 
  3.872108170921372*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"bf572a2b-ae61-4a02-b630-31d82222984a"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1088, 1027},
WindowMargins->{{Automatic, -1140}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3805e846-a897-4b7d-85fd-22cbd95c6066"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 67, "Section",ExpressionUUID->"3eb21de9-e109-4e74-bdb2-e916c14dc927"],
Cell[CellGroupData[{
Cell[784, 29, 158, 3, 54, "Subsection",ExpressionUUID->"ce10cf7b-b377-4e64-be58-dd71ddf44f3e"],
Cell[945, 34, 343, 8, 35, "Text",ExpressionUUID->"824844c1-f90e-4bb7-b2b8-693ac65b07ca"]
}, Closed]],
Cell[CellGroupData[{
Cell[1325, 47, 168, 3, 38, "Subsection",ExpressionUUID->"b6a0c799-a86b-4d1b-8e1d-8b1b99fcb1b1"],
Cell[CellGroupData[{
Cell[1518, 54, 148, 3, 45, "Subsubsection",ExpressionUUID->"2bf0e9d1-63ae-4d41-b96b-de018458a981"],
Cell[1669, 59, 307, 7, 35, "Text",ExpressionUUID->"89f5dcdc-cf6d-46ea-96a1-a15f0596ac06"],
Cell[1979, 68, 1118, 28, 89, "Input",ExpressionUUID->"5e178a94-8d9b-442e-a72c-6ec40d08571b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[3134, 101, 167, 3, 37, "Subsubsection",ExpressionUUID->"ea48a862-5a2c-416a-9b00-2f1dd46aef70"],
Cell[3304, 106, 273, 6, 35, "Text",ExpressionUUID->"8512759e-1a0e-425a-b281-108bd2cebcb9"],
Cell[3580, 114, 467, 10, 46, "Input",ExpressionUUID->"e24ebb38-8e34-4c9e-99ab-b54b0ced867d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[4084, 129, 142, 3, 37, "Subsubsection",ExpressionUUID->"365b7fa5-8939-4635-b767-90988de55508"],
Cell[4229, 134, 265, 6, 35, "Text",ExpressionUUID->"31d653c4-f23c-4273-bb77-ce5ef6fdbdfa"],
Cell[4497, 142, 725, 16, 46, "Input",ExpressionUUID->"63982af8-d5b8-4f91-a300-b485e0bde41f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[5259, 163, 139, 2, 37, "Subsubsection",ExpressionUUID->"8b9e268c-ab14-41b1-83a1-ee94ab82a65e"],
Cell[5401, 167, 379, 8, 35, "Text",ExpressionUUID->"c48e304f-ddd1-4876-a253-36feb5c3b45d"],
Cell[5783, 177, 394, 8, 46, "Input",ExpressionUUID->"4e87bec6-106f-4e9a-82b7-2b9051353b11",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[6214, 190, 140, 3, 37, "Subsubsection",ExpressionUUID->"009e2bca-589b-4bfd-b2db-a73ced2e44f8"],
Cell[6357, 195, 326, 8, 35, "Text",ExpressionUUID->"a1f043da-9764-4b39-9eda-7818e541143e"],
Cell[6686, 205, 1034, 23, 110, "Input",ExpressionUUID->"8cb4c876-c5fe-4246-8f52-6d61eeb52179",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[7769, 234, 185, 3, 38, "Subsection",ExpressionUUID->"b7131a6a-e653-4338-8424-f80acc87060e"],
Cell[CellGroupData[{
Cell[7979, 241, 162, 3, 45, "Subsubsection",ExpressionUUID->"220c3504-903c-4f77-a39c-934013417b76"],
Cell[8144, 246, 474, 10, 46, "Input",ExpressionUUID->"562d34cd-0616-445d-9f6b-16833660c7c8",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[8655, 261, 221, 4, 37, "Subsubsection",ExpressionUUID->"84646e0e-58fe-492e-8dc7-64ddb7a351e8"],
Cell[8879, 267, 474, 10, 46, "Input",ExpressionUUID->"d83d65ca-47ab-4a97-8fb3-fb20d1ceaaf6",
 InitializationCell->True],
Cell[9356, 279, 464, 12, 46, "Input",ExpressionUUID->"f424d70b-bd59-4734-b722-66e39cd71930",
 InitializationCell->True],
Cell[9823, 293, 320, 7, 46, "Input",ExpressionUUID->"e75659e0-8c33-4f04-9a8d-17feeba3502c",
 InitializationCell->True],
Cell[10146, 302, 429, 9, 46, "Input",ExpressionUUID->"14cf26f8-c72d-4e0c-87c6-7f6b3d5155f8",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10612, 316, 222, 4, 37, "Subsubsection",ExpressionUUID->"8850eb8b-56ba-4bee-958a-a0cfb2315478"],
Cell[10837, 322, 216, 5, 35, "Text",ExpressionUUID->"021c71a0-951c-478e-9653-f673ef550958"],
Cell[CellGroupData[{
Cell[11078, 331, 462, 10, 46, "Input",ExpressionUUID->"f3b2bc3b-8c0b-41f9-a2be-2ee3516059f2",
 InitializationCell->True],
Cell[11543, 343, 11896, 287, 70, "Output",ExpressionUUID->"d6657cdd-ea63-4931-ae64-382e447aae50"]
}, Open  ]],
Cell[23454, 633, 219, 5, 35, "Text",ExpressionUUID->"4c3bcb50-a7a1-41b5-a639-8a5001a69d2f"],
Cell[23676, 640, 1193, 31, 110, "Input",ExpressionUUID->"57fa66fc-89e3-454a-9e03-5c965b77895d",
 InitializationCell->True],
Cell[24872, 673, 232, 6, 35, "Text",ExpressionUUID->"63802c22-7818-4019-b039-11005091bb6c"],
Cell[25107, 681, 607, 15, 46, "Input",ExpressionUUID->"08daeca3-c33b-4040-97ba-55d6b1aee5ce",
 InitializationCell->True],
Cell[25717, 698, 268, 6, 35, "Text",ExpressionUUID->"77a2947a-223f-422a-88a4-c8cf2754c248"],
Cell[25988, 706, 395, 9, 46, "Input",ExpressionUUID->"324ec18d-e194-4a9f-8fc1-43ed14a311a4",
 InitializationCell->True],
Cell[26386, 717, 298, 8, 35, "Text",ExpressionUUID->"ea717e27-1a16-4b3e-85f0-b87fd2cda731"],
Cell[26687, 727, 484, 12, 46, "Input",ExpressionUUID->"d77db4a7-26a1-404c-ba7a-9f416ccdf48d",
 InitializationCell->True],
Cell[27174, 741, 297, 7, 35, "Text",ExpressionUUID->"8ea24933-496e-4d57-92cd-b2b58b5694cc"],
Cell[27474, 750, 609, 15, 68, "Input",ExpressionUUID->"4f9904f0-0a4a-46d8-b5b7-b969bbf62d1e",
 InitializationCell->True],
Cell[28086, 767, 261, 6, 35, "Text",ExpressionUUID->"5f1464e1-012e-43fd-9311-d50375cebe43"],
Cell[28350, 775, 527, 13, 46, "Input",ExpressionUUID->"0d29bac8-372b-433a-85b9-7b3abbcb7cb6",
 InitializationCell->True],
Cell[28880, 790, 342, 7, 35, "Text",ExpressionUUID->"910218fc-aa94-47ae-9ea0-0ac6430c668f"],
Cell[29225, 799, 511, 13, 46, "Input",ExpressionUUID->"2856251a-c073-4863-878d-454668da0091",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[29773, 817, 234, 4, 37, "Subsubsection",ExpressionUUID->"cebf2359-82b7-45c3-a961-dd1db612f39c"],
Cell[30010, 823, 171, 3, 35, "Text",ExpressionUUID->"b5d451bb-1bdb-4123-9304-ed9ec437fc65"],
Cell[30184, 828, 561, 12, 46, "Input",ExpressionUUID->"779fa1b3-5bc4-4bbe-8ef0-4cc7c9d6ec19",
 InitializationCell->True],
Cell[30748, 842, 281, 7, 35, "Text",ExpressionUUID->"600a6c1c-ab2f-43c7-94aa-5ad7948569ec"],
Cell[31032, 851, 827, 22, 46, "Input",ExpressionUUID->"a685ff40-15f2-44e2-99a4-0ed5878fdb7d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[31884, 877, 269, 5, 30, "Input",ExpressionUUID->"f905e367-766f-4a29-b9c1-add920b73eb5"],
Cell[32156, 884, 11196, 290, 163, "Output",ExpressionUUID->"be5ac171-5071-444f-8dd2-94af054824d6"]
}, Open  ]],
Cell[43367, 1177, 193, 3, 35, "Text",ExpressionUUID->"30455f55-7d45-4b1b-b3b3-da0efef2597e"],
Cell[43563, 1182, 851, 18, 46, "Input",ExpressionUUID->"515667f9-f080-471d-8808-5151f7cb7a6f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[44451, 1205, 181, 3, 37, "Subsubsection",ExpressionUUID->"1c70f933-1901-446f-acb5-0fd54738a4b6"],
Cell[44635, 1210, 236, 4, 35, "Text",ExpressionUUID->"319499f8-2898-45c7-a118-b41a2f25cf1c"],
Cell[CellGroupData[{
Cell[44896, 1218, 531, 11, 46, "Input",ExpressionUUID->"714dbedf-2a73-4093-97a9-acc9888416e3",
 InitializationCell->True],
Cell[45430, 1231, 11403, 289, 70, "Output",ExpressionUUID->"844b6b21-c09a-4767-9b51-770767205fb5"]
}, Open  ]],
Cell[56848, 1523, 241, 4, 35, "Text",ExpressionUUID->"b28474e0-c37b-43e3-9b28-595e759d0c7c"],
Cell[57092, 1529, 529, 14, 46, "Input",ExpressionUUID->"964818da-f1a9-408b-8391-9517617c46a6",
 InitializationCell->True],
Cell[57624, 1545, 291, 7, 35, "Text",ExpressionUUID->"9aab6271-d1c9-48fd-a168-2cd5d9453027"],
Cell[57918, 1554, 847, 21, 46, "Input",ExpressionUUID->"63ff6fab-e609-4dc9-bbe5-68bbdd77a64a",
 InitializationCell->True],
Cell[58768, 1577, 235, 4, 35, "Text",ExpressionUUID->"29f437fa-fe25-44ce-90b7-2742989cfc7f"],
Cell[59006, 1583, 824, 18, 46, "Input",ExpressionUUID->"ef027bb1-314c-4af9-83b4-da364ab47e0c",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[59867, 1606, 183, 3, 37, "Subsubsection",ExpressionUUID->"d03625ed-00cd-4070-9a29-e971e35e99e1"],
Cell[60053, 1611, 245, 4, 35, "Text",ExpressionUUID->"86132393-5e12-41fa-a0f7-8a801813e20d"],
Cell[CellGroupData[{
Cell[60323, 1619, 550, 12, 46, "Input",ExpressionUUID->"a13fe408-50bf-401c-8c4d-b490fc2172d5",
 InitializationCell->True],
Cell[60876, 1633, 12061, 298, 70, "Output",ExpressionUUID->"5f40d0e2-5e48-43d8-8b58-51772f3e1b56"]
}, Open  ]],
Cell[72952, 1934, 261, 7, 35, "Text",ExpressionUUID->"8aeb5b20-f8a2-477f-b92b-bb3e6a388444"],
Cell[73216, 1943, 873, 22, 46, "Input",ExpressionUUID->"1c62708a-d361-469b-a44b-f35a39fc74ff",
 InitializationCell->True],
Cell[74092, 1967, 254, 4, 35, "Text",ExpressionUUID->"ac202321-e215-49bb-b926-004f62d24605"],
Cell[74349, 1973, 812, 18, 46, "Input",ExpressionUUID->"ff39f7fd-8878-4488-b44a-6ecf4f6ffec9",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[75198, 1996, 177, 3, 37, "Subsubsection",ExpressionUUID->"c2eb3627-0f55-4393-b82f-23ffa30bcbcf"],
Cell[75378, 2001, 305, 7, 35, "Text",ExpressionUUID->"45660ec0-3e16-4c7e-8a5b-8a21fa9615e4"],
Cell[75686, 2010, 583, 14, 46, "Input",ExpressionUUID->"1f1f6a8d-5900-42f3-a98e-cf4b547764a2",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[76306, 2029, 264, 4, 37, "Subsubsection",ExpressionUUID->"bcbe4152-3197-4f04-aded-9a06b9e6ca65"],
Cell[76573, 2035, 171, 3, 35, "Text",ExpressionUUID->"fbe0f288-73f8-4c4d-8e0e-8b4689ac8253"],
Cell[76747, 2040, 556, 13, 46, "Input",ExpressionUUID->"6ee72562-61d3-4632-8018-bba206867964",
 InitializationCell->True],
Cell[77306, 2055, 276, 6, 35, "Text",ExpressionUUID->"b7e3f8e9-0813-4808-81ce-ca24c3a57b49"],
Cell[77585, 2063, 658, 14, 46, "Input",ExpressionUUID->"bae609e1-ddcf-4056-a17d-eb7946a94c70"],
Cell[78246, 2079, 172, 3, 35, "Text",ExpressionUUID->"9837158e-0d0f-481f-b2dd-bf4897531631"],
Cell[78421, 2084, 459, 12, 46, "Input",ExpressionUUID->"59c696a3-dcd3-41b7-9454-9dcd00ccba86",
 InitializationCell->True],
Cell[78883, 2098, 191, 3, 35, "Text",ExpressionUUID->"9271a9b8-46ad-44f0-8f1a-b2c199a39bb0"],
Cell[79077, 2103, 1132, 29, 46, "Input",ExpressionUUID->"c4f9b87b-654f-4bd1-83af-94beaa0bc129",
 InitializationCell->True],
Cell[80212, 2134, 245, 4, 35, "Text",ExpressionUUID->"4875e8c4-5cc7-4a10-9153-80856ab27c83"],
Cell[80460, 2140, 436, 9, 46, "Input",ExpressionUUID->"09712d80-053a-4989-b52e-01aac9b52609",
 InitializationCell->True],
Cell[80899, 2151, 286, 7, 35, "Text",ExpressionUUID->"bd7e269e-b463-4686-a923-e6eefd672c02"],
Cell[81188, 2160, 589, 11, 46, "Input",ExpressionUUID->"5d487d7c-5130-4b72-81af-6d995fdd7b58",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[81814, 2176, 170, 3, 37, "Subsubsection",ExpressionUUID->"932eb4a9-8580-4c27-9166-bfe34a67f9c1"],
Cell[81987, 2181, 193, 3, 35, "Text",ExpressionUUID->"d16b46e9-1e62-4c4d-9ee8-0202e9f75315"],
Cell[CellGroupData[{
Cell[82205, 2188, 473, 10, 46, "Input",ExpressionUUID->"bdeeb075-4486-4fe6-9524-adfc2202aa48",
 InitializationCell->True],
Cell[82681, 2200, 2550, 69, 70, "Output",ExpressionUUID->"b1744127-ddea-4258-8417-060b7c96df43"]
}, Open  ]],
Cell[85246, 2272, 222, 5, 35, "Text",ExpressionUUID->"aac04211-8857-4ca1-9c1c-1adb7cf140da"],
Cell[85471, 2279, 623, 16, 46, "Input",ExpressionUUID->"e4552f70-989d-48d7-9f96-1349d8edb418",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[86131, 2300, 269, 4, 37, "Subsubsection",ExpressionUUID->"0c2eba95-7c6e-4064-9811-30d157c16e75"],
Cell[86403, 2306, 328, 7, 35, "Text",ExpressionUUID->"207bc56e-812b-4d5c-9a14-767317a147ee"],
Cell[86734, 2315, 775, 18, 68, "Input",ExpressionUUID->"e6ba978c-9fa1-4a41-aaac-f4360066d3f2",
 InitializationCell->True],
Cell[87512, 2335, 354, 8, 35, "Text",ExpressionUUID->"c2ef92f8-8bbe-40f3-831f-ec2eef71efc8"],
Cell[87869, 2345, 442, 9, 46, "Input",ExpressionUUID->"5603211b-1afb-4ba3-93c4-9cc7e12ba0f5",
 InitializationCell->True],
Cell[88314, 2356, 281, 7, 35, "Text",ExpressionUUID->"01c76738-b37b-4d6a-9bb7-710298da79a7"],
Cell[88598, 2365, 705, 18, 46, "Input",ExpressionUUID->"8a2d8470-9ec0-4965-8c3d-08067f21a1bf",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[89340, 2388, 241, 4, 37, "Subsubsection",ExpressionUUID->"d47ba68e-5f9d-4375-9490-9c9ce67d20d7"],
Cell[CellGroupData[{
Cell[89606, 2396, 242, 6, 32, "ItemNumbered",ExpressionUUID->"2cb2eead-571b-4efb-bac5-77c22d999693"],
Cell[89851, 2404, 204, 3, 32, "ItemNumbered",ExpressionUUID->"3d7f2d81-ca32-4ab9-abf1-a7681fb5e774"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[90116, 2414, 290, 5, 38, "Subsection",ExpressionUUID->"49aff420-c4a4-46f6-9573-4962822dd7bd"],
Cell[CellGroupData[{
Cell[90431, 2423, 161, 3, 45, "Subsubsection",ExpressionUUID->"e976860f-1034-4282-8bc7-3cc484ab332b"],
Cell[90595, 2428, 304, 7, 35, "Text",ExpressionUUID->"58fff410-2914-4c88-b752-20cfc57b0837"],
Cell[90902, 2437, 469, 12, 46, "Input",ExpressionUUID->"f8163046-9ba4-47a4-84cf-1c4f671f8bda",
 InitializationCell->True],
Cell[91374, 2451, 408, 8, 58, "Text",ExpressionUUID->"288dda97-f458-4b91-b933-f90669bc9611"],
Cell[91785, 2461, 538, 13, 46, "Input",ExpressionUUID->"4cbdaf6f-fb0d-450d-a260-aca88d9b78a1",
 InitializationCell->True],
Cell[92326, 2476, 283, 4, 35, "Text",ExpressionUUID->"61687601-d700-4891-a30c-64bb7ee47474"],
Cell[92612, 2482, 519, 11, 46, "Input",ExpressionUUID->"f0340322-2c32-4e1f-8aec-ae3f9d98ccec",
 InitializationCell->True],
Cell[93134, 2495, 297, 4, 35, "Text",ExpressionUUID->"7b2bb64e-571c-4c6e-8653-8220343ec7df"],
Cell[93434, 2501, 546, 13, 46, "Input",ExpressionUUID->"f69650c3-8ade-4491-bbee-06dddeea82b8",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[94017, 2519, 178, 3, 37, "Subsubsection",ExpressionUUID->"6fd28e0b-ac7b-4a35-855c-537c8dc049b8"],
Cell[94198, 2524, 1063, 22, 58, "Text",ExpressionUUID->"f2e76d68-3a0f-48cc-8055-5f115fbbb689"],
Cell[95264, 2548, 836, 16, 46, "Input",ExpressionUUID->"55040f6d-4489-4efa-9093-0b9393cce99d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[96137, 2569, 157, 3, 37, "Subsubsection",ExpressionUUID->"552b7a1b-94ff-4ed3-9cb7-21c285562bb0"],
Cell[96297, 2574, 344, 7, 35, "Text",ExpressionUUID->"c8807a48-1496-4a9d-bbc4-8cf0dc285d42"],
Cell[96644, 2583, 744, 15, 46, "Input",ExpressionUUID->"25e244ed-a692-44a0-b849-c93c637a6f5e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[97425, 2603, 155, 3, 37, "Subsubsection",ExpressionUUID->"91bed078-cb0e-4d88-aa1e-6a36c29f7234"],
Cell[97583, 2608, 260, 6, 35, "Text",ExpressionUUID->"ca7e327b-da78-4a69-94f1-d3ecbec4b934"],
Cell[97846, 2616, 701, 14, 46, "Input",ExpressionUUID->"52c4ceb6-c2f3-4cd5-afac-19c1f6b2e54d",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[98596, 2636, 169, 3, 38, "Subsection",ExpressionUUID->"cf58a631-03be-46cc-b05d-fb320c6875dc"],
Cell[CellGroupData[{
Cell[98790, 2643, 231, 4, 45, "Subsubsection",ExpressionUUID->"2df4aebc-15a4-4735-9d17-9c6af30137af"],
Cell[99024, 2649, 407, 13, 35, "Text",ExpressionUUID->"3ceceb62-86d8-491f-b5b9-33061227ab39"],
Cell[99434, 2664, 477, 10, 46, "Input",ExpressionUUID->"b9385d43-46c7-49fc-a353-7fc43cef0cd3"],
Cell[99914, 2676, 503, 13, 35, "Text",ExpressionUUID->"6b636f66-1820-4b26-8204-9740748ce10d"],
Cell[100420, 2691, 879, 20, 68, "Input",ExpressionUUID->"ac74852d-db39-47c6-9806-91de018f1369",
 InitializationCell->True],
Cell[101302, 2713, 222, 5, 35, "Text",ExpressionUUID->"96d67d0e-ad51-4541-87e8-fcff8d23c094"],
Cell[101527, 2720, 404, 8, 46, "Input",ExpressionUUID->"aa928420-7f94-43e2-93df-5499f4e50344",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[101968, 2733, 197, 3, 37, "Subsubsection",ExpressionUUID->"3d65f212-c850-49f5-890a-c24ddc9a8ec8"],
Cell[102168, 2738, 864, 14, 81, "Text",ExpressionUUID->"f41630ae-b969-49a7-abcc-041372b0d1a8"],
Cell[103035, 2754, 1186, 26, 68, "Input",ExpressionUUID->"2eb67872-72a9-4f06-bbed-e015a75f499f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[104258, 2785, 146, 3, 37, "Subsubsection",ExpressionUUID->"a42bdf56-358c-4625-a426-110109b198da"],
Cell[104407, 2790, 248, 5, 35, "Text",ExpressionUUID->"372021f2-bc17-4022-8a35-5f0c119aac26"],
Cell[104658, 2797, 526, 10, 46, "Input",ExpressionUUID->"dbbb8a16-8c7f-4fb3-b53d-4ee7014d27f0",
 InitializationCell->True],
Cell[105187, 2809, 241, 6, 35, "Text",ExpressionUUID->"bada8dad-2e96-4e92-b65e-4b1de98e4487"],
Cell[105431, 2817, 661, 14, 46, "Input",ExpressionUUID->"8f4c1012-f452-46e7-a1e4-a887462cf6e3",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[106141, 2837, 158, 3, 38, "Subsection",ExpressionUUID->"2eb52d11-d03b-42e8-9064-8eca77f4140a"],
Cell[CellGroupData[{
Cell[106324, 2844, 158, 3, 45, "Subsubsection",ExpressionUUID->"9e7925bc-3b9b-4de2-8ac4-d67cd97654e0"],
Cell[106485, 2849, 463, 9, 35, "Text",ExpressionUUID->"ed750ea5-0a08-4732-9ce8-96ba067b3474"],
Cell[106951, 2860, 477, 10, 89, "Input",ExpressionUUID->"24e0763d-f338-4a12-ac2e-0ca5439cfd39",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[107465, 2875, 265, 4, 37, "Subsubsection",ExpressionUUID->"44957b6e-82c0-403e-a264-5bee54779b74"],
Cell[107733, 2881, 459, 8, 58, "Text",ExpressionUUID->"e58e4863-ab3f-4f9c-b9eb-0ef84cab1306"],
Cell[CellGroupData[{
Cell[108217, 2893, 1769, 49, 131, "Input",ExpressionUUID->"3cbaf16d-07c7-447d-836a-971bd739c7cf"],
Cell[109989, 2944, 386, 7, 34, "Output",ExpressionUUID->"40a3cebe-d3aa-4b37-9892-af6175b85025"],
Cell[110378, 2953, 92078, 1529, 239, "Output",ExpressionUUID->"dc223941-e6a9-4491-8892-7b0e6fd6381d"]
}, Open  ]],
Cell[202471, 4485, 467, 9, 58, "Text",ExpressionUUID->"50390711-9e36-4755-ad3a-cbf7daf92609"],
Cell[CellGroupData[{
Cell[202963, 4498, 303, 7, 30, "Input",ExpressionUUID->"aadb2942-5d36-4b94-a518-b464b8c292e0"],
Cell[203269, 4507, 224, 4, 34, "Output",ExpressionUUID->"dd3b0f85-4b95-45e7-bc1b-3d92e0e46061"]
}, Open  ]],
Cell[203508, 4514, 237, 4, 35, "Text",ExpressionUUID->"115d170a-7e90-4809-8c63-e5f955fe3e58"],
Cell[CellGroupData[{
Cell[203770, 4522, 250, 5, 30, "Input",ExpressionUUID->"3b4dd578-19b0-4116-8b23-240295ef9feb"],
Cell[204023, 4529, 195, 3, 34, "Output",ExpressionUUID->"76ee6777-3b2b-4f74-966b-ef26d6802e00"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[204267, 4538, 451, 7, 37, "Subsubsection",ExpressionUUID->"0b000926-db98-4098-9272-b353a73dbf49"],
Cell[204721, 4547, 1139, 20, 58, "Text",ExpressionUUID->"53bbff46-2a33-42dc-b37b-81428a558e19"],
Cell[205863, 4569, 1560, 31, 152, "Input",ExpressionUUID->"0effe31e-b628-480d-9eb0-7a62f97826da",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[207448, 4604, 780, 19, 68, "Input",ExpressionUUID->"8b653706-1647-444d-a582-efdf1b381177"],
Cell[208231, 4625, 4877, 96, 216, "Output",ExpressionUUID->"65e07f8c-34de-48ec-9e54-cc6edc7cbd6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213145, 4726, 307, 9, 46, "Input",ExpressionUUID->"e4f89efa-f724-4102-bcab-bd4070a7339a"],
Cell[213455, 4737, 1135, 30, 60, "Output",ExpressionUUID->"40cb8d04-7c0a-4396-948b-82ea6003735b"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[214651, 4774, 163, 3, 38, "Subsection",ExpressionUUID->"b40ba676-ecb9-40c5-9f74-ac23a246cd07"],
Cell[CellGroupData[{
Cell[214839, 4781, 234, 4, 45, "Subsubsection",ExpressionUUID->"2e3df3f0-a768-4a81-963e-394bb34e0e8c"],
Cell[215076, 4787, 479, 9, 58, "Text",ExpressionUUID->"24bc8c8b-617d-4e70-9d28-15b1eaa12698"],
Cell[215558, 4798, 931, 21, 46, "Input",ExpressionUUID->"0addd814-a3e7-4065-b1aa-28e3ae6e47c9",
 InitializationCell->True],
Cell[216492, 4821, 331, 7, 35, "Text",ExpressionUUID->"734a9d59-0a90-4bb4-b177-236269dad795"],
Cell[216826, 4830, 699, 14, 46, "Input",ExpressionUUID->"b07ce124-9243-40b7-b291-f3f98523ada3",
 InitializationCell->True],
Cell[217528, 4846, 303, 6, 35, "Text",ExpressionUUID->"f8bacd7b-d1c4-485f-a351-7bdef010434e"],
Cell[217834, 4854, 757, 15, 46, "Input",ExpressionUUID->"433b2ffe-efd8-4c33-8913-ecaf8eeba1b3",
 InitializationCell->True],
Cell[218594, 4871, 410, 8, 58, "Text",ExpressionUUID->"ccf587b3-97e8-4207-b476-f524ce2f6473"],
Cell[219007, 4881, 1383, 26, 46, "Input",ExpressionUUID->"1f7e4bab-fe6a-4a71-acb0-3564fb4f8f58",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[220427, 4912, 199, 3, 37, "Subsubsection",ExpressionUUID->"449ae723-b253-4c8e-b89f-08a26f40c2ca"],
Cell[220629, 4917, 277, 6, 35, "Text",ExpressionUUID->"f7d56b14-4b63-4068-bf26-49f4bea8f5b0"],
Cell[220909, 4925, 1450, 27, 68, "Input",ExpressionUUID->"500bf8e7-af1e-4401-8ba2-6746b826ea57",
 InitializationCell->True],
Cell[222362, 4954, 1390, 24, 46, "Input",ExpressionUUID->"c4702c2e-0a42-4142-a532-cb8ce2b2907a",
 InitializationCell->True],
Cell[223755, 4980, 636, 11, 58, "Text",ExpressionUUID->"48bb0454-77e0-456f-88d3-9c7e3d6c5e8f"],
Cell[224394, 4993, 1058, 19, 46, "Input",ExpressionUUID->"747cc45b-599f-41fa-97ed-69dfde1cf856",
 InitializationCell->True],
Cell[225455, 5014, 294, 7, 35, "Text",ExpressionUUID->"6a3946ec-5d16-486d-ba84-5b235dbf01a2"],
Cell[225752, 5023, 504, 13, 46, "Input",ExpressionUUID->"172b05be-9638-4ce6-b916-343548a5a77b",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[226305, 5042, 220, 4, 38, "Subsection",ExpressionUUID->"094d05ae-3dfc-4a99-8bb4-6e2cc7250685"],
Cell[CellGroupData[{
Cell[226550, 5050, 220, 4, 45, "Subsubsection",ExpressionUUID->"92f6bc7d-8d7a-45b3-bdd9-ed526a754aa4"],
Cell[226773, 5056, 252, 6, 35, "Text",ExpressionUUID->"46b5f208-d020-497c-bf4a-ffccb4f3908c"],
Cell[227028, 5064, 2102, 43, 110, "Input",ExpressionUUID->"94126216-435e-49b3-92e2-1aed31249a2e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[229155, 5111, 455, 10, 30, "Input",ExpressionUUID->"5027a1af-0fa6-4b9a-834b-d9877a8ee090"],
Cell[229613, 5123, 36523, 759, 282, "Output",ExpressionUUID->"60e287a8-74be-489c-9b60-6bc123418b48"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[266185, 5888, 217, 4, 37, "Subsubsection",ExpressionUUID->"615df1f8-9986-4760-90df-500b943ce2e5"],
Cell[266405, 5894, 191, 3, 35, "Text",ExpressionUUID->"b84b683f-e31a-4fde-9c86-02986a586995"],
Cell[266599, 5899, 2238, 49, 152, "Input",ExpressionUUID->"6bb879ae-6656-4d19-b1e4-eb81d9604815",
 InitializationCell->True],
Cell[268840, 5950, 310, 7, 35, "Text",ExpressionUUID->"ab75402b-ee7b-419c-82f9-961d2f5c7c0e"],
Cell[269153, 5959, 2039, 42, 131, "Input",ExpressionUUID->"b716ff80-bfa2-4c62-91a5-49014f7d493c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[271217, 6005, 332, 7, 30, "Input",ExpressionUUID->"957c8aef-9d54-4a1c-afa1-29fb7bc25c86"],
Cell[271552, 6014, 8218, 171, 223, "Output",ExpressionUUID->"a7f8a4da-9eb2-4d8f-b720-02b5f986f777"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[279819, 6191, 217, 4, 37, "Subsubsection",ExpressionUUID->"a2d37f5b-09ab-4215-8b19-45a3ee8d7e22"],
Cell[280039, 6197, 498, 9, 58, "Text",ExpressionUUID->"6d673aa1-842f-4bb6-820f-f050e848b769"],
Cell[280540, 6208, 5353, 122, 320, "Input",ExpressionUUID->"87901ce1-f0ae-4c77-981f-762f434805cc",
 InitializationCell->True],
Cell[285896, 6332, 311, 9, 35, "Text",ExpressionUUID->"eb77a4f1-c80c-4682-adc8-527b589d7c59"],
Cell[286210, 6343, 449, 10, 46, "Input",ExpressionUUID->"b60367d8-34d8-467d-957d-da104bfde1a8",
 InitializationCell->True],
Cell[286662, 6355, 273, 6, 35, "Text",ExpressionUUID->"780a8d92-67b2-4f96-8886-ddb70e6f5dc2"],
Cell[286938, 6363, 507, 12, 46, "Input",ExpressionUUID->"714f910e-8d8f-4684-8d6c-6857d8b36888",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287494, 6381, 252, 4, 38, "Subsection",ExpressionUUID->"9bf70f31-f20d-4803-8098-382859b3160d"],
Cell[CellGroupData[{
Cell[287771, 6389, 275, 4, 45, "Subsubsection",ExpressionUUID->"8a8ed3b5-48d9-45e6-84f2-7fd588330599"],
Cell[288049, 6395, 223, 5, 35, "Text",ExpressionUUID->"4765ebd2-5041-480f-89f7-f4c519b19268"],
Cell[CellGroupData[{
Cell[288297, 6404, 1113, 20, 73, "Input",ExpressionUUID->"ee8bbad7-9682-409e-9ebf-333be4add327"],
Cell[289413, 6426, 30159, 620, 193, "Output",ExpressionUUID->"ce37346d-8e79-4469-b07a-f2d4eb0a01a3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[319621, 7052, 222, 4, 37, "Subsubsection",ExpressionUUID->"0bd5e2df-0ce3-45ef-af83-33233c5136dd"],
Cell[CellGroupData[{
Cell[319868, 7060, 280, 4, 30, "Input",ExpressionUUID->"2520a95f-e435-4444-b093-1ed28670890d"],
Cell[320151, 7066, 8539, 180, 229, "Output",ExpressionUUID->"be981adc-fa27-4cbe-835d-968a4cd8198f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328727, 7251, 272, 4, 30, "Input",ExpressionUUID->"69a50087-b7fa-4ecd-aa4f-ad4478eccd22"],
Cell[329002, 7257, 8521, 179, 222, "Output",ExpressionUUID->"c5400d50-3627-42e3-aa98-68276ddfee35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337560, 7441, 283, 5, 30, "Input",ExpressionUUID->"0f3c1774-6ecc-4262-aeec-311a8a728b3c"],
Cell[337846, 7448, 8553, 181, 226, "Output",ExpressionUUID->"bd1fc08d-5c1b-4e08-bd45-2c5db08e75da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346436, 7634, 270, 4, 30, "Input",ExpressionUUID->"fb2aec6c-775d-49e9-8b6d-c1d0d8fc3da8"],
Cell[346709, 7640, 8393, 178, 226, "Output",ExpressionUUID->"a997c526-432f-46a9-8912-3d5e5ab2bd08"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[355151, 7824, 273, 4, 37, "Subsubsection",ExpressionUUID->"bd6eb126-a85d-41fe-a0ae-0a4cc579fa6a"],
Cell[CellGroupData[{
Cell[355449, 7832, 289, 5, 30, "Input",ExpressionUUID->"5c6d751b-5684-4abf-8d79-8ce11cbfbd68"],
Cell[355741, 7839, 8425, 180, 224, "Output",ExpressionUUID->"5cda83f9-dcfd-44d1-9285-60144d62e259"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364203, 8024, 275, 4, 30, "Input",ExpressionUUID->"b64aa03d-f9f4-4b8c-8b55-767734237e12"],
Cell[364481, 8030, 8476, 180, 227, "Output",ExpressionUUID->"858bb795-3997-4259-9753-144e23fb686e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372994, 8215, 273, 4, 30, "Input",ExpressionUUID->"f154937e-8295-4966-b57d-a8ecc1b967d2"],
Cell[373270, 8221, 8680, 181, 227, "Output",ExpressionUUID->"c3e8a32e-e633-4d52-ae52-9a3d616b3d17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381987, 8407, 204, 3, 30, "Input",ExpressionUUID->"4776bc67-4f3e-4ed1-90fe-6b6b2c4ac292"],
Cell[382194, 8412, 8652, 181, 222, "Output",ExpressionUUID->"04481d0f-175c-475e-880f-f02238145fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390883, 8598, 469, 7, 30, "Input",ExpressionUUID->"8393abe4-c2a4-49e7-b0c9-acf97ac3bbf9"],
Cell[391355, 8607, 8178, 171, 220, "Output",ExpressionUUID->"223e6a81-4a2c-4070-8dfe-5aa5a2296280"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[399582, 8784, 173, 3, 37, "Subsubsection",ExpressionUUID->"041d7cc2-6d27-4298-9091-ca701adbc11c"],
Cell[399758, 8789, 172, 3, 35, "Text",ExpressionUUID->"8f95c04f-6398-4a4a-bb7f-0fca93dfe221"],
Cell[CellGroupData[{
Cell[399955, 8796, 453, 10, 30, "Input",ExpressionUUID->"f36e50a0-6eef-4c0e-a063-86a985866566"],
Cell[400411, 8808, 644, 11, 81, "Output",ExpressionUUID->"8843ea0b-5278-4d0f-bf3d-b66a68381cad"]
}, Open  ]],
Cell[401070, 8822, 729, 13, 73, "Input",ExpressionUUID->"9e0b304a-1f0c-45f7-b9d6-1929d09ad5f5"],
Cell[401802, 8837, 456, 11, 35, "Text",ExpressionUUID->"252507c1-e00b-476f-a8cc-f242cc0e59c9"],
Cell[CellGroupData[{
Cell[402283, 8852, 452, 11, 30, "Input",ExpressionUUID->"9197afbe-d1cb-4aa4-a2f4-666bfc46646e"],
Cell[402738, 8865, 994, 17, 81, "Output",ExpressionUUID->"00a0a1f8-bf09-40f5-95e6-08a9daa2230a"]
}, Open  ]],
Cell[403747, 8885, 1101, 19, 157, "Input",ExpressionUUID->"8a274750-6fe7-42f8-9618-d6952202ccd9"],
Cell[404851, 8906, 162, 3, 35, "Text",ExpressionUUID->"2091f923-78bc-4a92-8d7f-0bc972a4e6ed"],
Cell[CellGroupData[{
Cell[405038, 8913, 1645, 40, 157, "Input",ExpressionUUID->"bb9dac14-6213-4b9a-92b8-557d8a27ff55"],
Cell[406686, 8955, 8491, 180, 273, "Output",ExpressionUUID->"e00a20eb-6b5c-4f22-b976-d2bee7f1310a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[415226, 9141, 156, 3, 37, "Subsubsection",ExpressionUUID->"3295ff1a-6a9b-49d0-834e-dd159323dc61"],
Cell[415385, 9146, 212, 5, 35, "Text",ExpressionUUID->"03cbcd0d-4e2a-439f-bca6-a41123a5165b"],
Cell[415600, 9153, 69969, 1504, 367, "Output",ExpressionUUID->"0b1f5f94-0333-4de7-94bc-5273976d0c4f"]
}, Closed]],
Cell[CellGroupData[{
Cell[485606, 10662, 169, 3, 37, "Subsubsection",ExpressionUUID->"b9bc3500-7947-4f1b-9d64-e00cdddd4d2f"],
Cell[485778, 10667, 249, 5, 35, "Text",ExpressionUUID->"633bf066-041c-4c8f-bbfd-11c2d60cceb7"],
Cell[CellGroupData[{
Cell[486052, 10676, 314, 6, 30, "Input",ExpressionUUID->"9c76a3f0-9747-48f3-824c-cdb7b073a5f7"],
Cell[486369, 10684, 182, 2, 34, "Output",ExpressionUUID->"1808113f-ed39-4ca8-9731-c93ad3f6c399"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486588, 10691, 319, 7, 30, "Input",ExpressionUUID->"fd72c79a-0aaf-4f95-945b-2cf3d3ea1c95"],
Cell[486910, 10700, 159, 2, 34, "Output",ExpressionUUID->"f78e9302-623b-438f-8c2a-d0dfd13fb4e3"]
}, Open  ]],
Cell[487084, 10705, 202, 4, 35, "Text",ExpressionUUID->"cc1d476a-47de-4c63-b5b4-363a96fd9c32"],
Cell[CellGroupData[{
Cell[487311, 10713, 315, 6, 30, "Input",ExpressionUUID->"f00e214f-05e3-4b8f-b3b1-d808d3d59472"],
Cell[487629, 10721, 192, 2, 34, "Output",ExpressionUUID->"28c285b1-3fe3-4195-ad04-36df7a55784a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487858, 10728, 318, 7, 30, "Input",ExpressionUUID->"bbb347c1-cd3c-4e23-8ea2-dd5bd53d8ed6"],
Cell[488179, 10737, 168, 2, 34, "Output",ExpressionUUID->"a54acac2-233d-4f20-875a-1c003474ce32"]
}, Open  ]],
Cell[488362, 10742, 456, 10, 58, "Text",ExpressionUUID->"fb9d6c77-dc63-4359-871c-cbedd45d2c4e"],
Cell[CellGroupData[{
Cell[488843, 10756, 204, 3, 30, "Input",ExpressionUUID->"10b75731-afb9-4af9-a284-2a670cbf27c5"],
Cell[489050, 10761, 160, 2, 34, "Output",ExpressionUUID->"94da9ecf-acd3-4663-895f-a6964eebeeb0"]
}, Open  ]],
Cell[489225, 10766, 507, 10, 58, "Text",ExpressionUUID->"34be6bad-2a46-4acc-94b5-cb47ce581ab9"],
Cell[CellGroupData[{
Cell[489757, 10780, 253, 5, 30, "Input",ExpressionUUID->"68857a3d-96ec-4e16-a62f-10b3a4b20476"],
Cell[490013, 10787, 159, 2, 34, "Output",ExpressionUUID->"25ab68b4-07d5-46e7-8920-ac157cab85da"]
}, Open  ]],
Cell[490187, 10792, 592, 12, 81, "Text",ExpressionUUID->"a8f8ae2f-0db0-4104-ab3c-4e87b25bcd76"],
Cell[CellGroupData[{
Cell[490804, 10808, 253, 5, 30, "Input",ExpressionUUID->"58e6e943-9188-4bf2-9778-29474701f6e2"],
Cell[491060, 10815, 194, 2, 34, "Output",ExpressionUUID->"fedb4382-d8d9-4b59-bca3-66e77231d61d"]
}, Open  ]],
Cell[491269, 10820, 352, 8, 35, "Text",ExpressionUUID->"93f01889-db63-4b52-b209-c43ec0e9be95"],
Cell[CellGroupData[{
Cell[491646, 10832, 374, 10, 30, "Input",ExpressionUUID->"2e2b83f6-1c57-4629-bef2-e5b0d4371e65"],
Cell[492023, 10844, 197, 3, 34, "Output",ExpressionUUID->"d25ad421-ef5b-4a62-b900-4e7bd70bcb73"]
}, Open  ]],
Cell[492235, 10850, 357, 8, 35, "Text",ExpressionUUID->"1ac77575-24ab-4ecc-8f6a-bd700a1ce5ad"],
Cell[CellGroupData[{
Cell[492617, 10862, 1363, 33, 52, "Input",ExpressionUUID->"77548d2d-bac2-4ac0-965b-3d51cf91f18c"],
Cell[493983, 10897, 294, 5, 34, "Output",ExpressionUUID->"767a85ff-bfa5-42c6-9f3b-11cf6172b51c"]
}, Open  ]],
Cell[494292, 10905, 476, 9, 35, "Text",ExpressionUUID->"a123079f-a0e8-4d18-90f4-41ce2bd05346"],
Cell[CellGroupData[{
Cell[494793, 10918, 1420, 33, 52, "Input",ExpressionUUID->"52c4eae4-8cf2-455b-8087-3375d6fdb26c"],
Cell[496216, 10953, 270, 4, 34, "Output",ExpressionUUID->"1cc11db4-0725-4397-9846-d95a28f16300"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496523, 10962, 354, 9, 30, "Input",ExpressionUUID->"80d241aa-38b4-4594-8db2-9b7ffb2cd81a"],
Cell[496880, 10973, 198, 3, 34, "Output",ExpressionUUID->"056cebc9-4d87-4f2c-82eb-59bc7f700a29"]
}, Open  ]],
Cell[497093, 10979, 202, 4, 35, "Text",ExpressionUUID->"6a0087e9-35e0-4607-850e-420be02f35e7"],
Cell[CellGroupData[{
Cell[497320, 10987, 1958, 50, 115, "Input",ExpressionUUID->"85dbcf6b-162c-41ec-8527-e5596eca0920"],
Cell[499281, 11039, 8329, 170, 204, "Output",ExpressionUUID->"0106c30f-4aef-4993-9e42-b7c353e94c3d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[507659, 11215, 179, 3, 37, "Subsubsection",ExpressionUUID->"e88a2b09-3128-4c4f-aead-b46b61107269"],
Cell[507841, 11220, 190, 3, 35, "Text",ExpressionUUID->"61bd246a-6152-4910-b383-d77d00cae898"],
Cell[508034, 11225, 523, 13, 46, "Input",ExpressionUUID->"1c3b7614-6de8-42af-acc4-5d28ab1d547a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[508582, 11242, 415, 9, 30, "Input",ExpressionUUID->"8ff77263-e5be-4fb8-b272-54945b6bd8a3"],
Cell[509000, 11253, 923864, 15157, 331, "Output",ExpressionUUID->"11c70205-4020-4caf-98a0-f7fe87b3ef96"]
}, Open  ]],
Cell[1432879, 26413, 188, 3, 35, "Text",ExpressionUUID->"fb924e5a-572c-44a3-83f4-ac2785ecb149"],
Cell[CellGroupData[{
Cell[1433092, 26420, 360, 9, 30, "Input",ExpressionUUID->"6f5e541d-cbdf-4e4b-a16f-b4222eba3b96"],
Cell[1433455, 26431, 155, 3, 34, "Output",ExpressionUUID->"c11e64bc-5b6f-4aba-87df-1827bc462790"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1433659, 26440, 259, 4, 37, "Subsubsection",ExpressionUUID->"eea8719c-7969-4f1e-85f2-2ccc7847ad4f"],
Cell[1433921, 26446, 290, 6, 35, "Text",ExpressionUUID->"ffcc7274-2f57-46e0-8184-206a383dbfbd"],
Cell[1434214, 26454, 1290, 33, 131, "Input",ExpressionUUID->"3b1f0423-899c-4ed3-85a7-f353078180f0",
 InitializationCell->True],
Cell[1435507, 26489, 285, 7, 35, "Text",ExpressionUUID->"2d37da66-5734-41ea-b069-ead341cff40e"],
Cell[CellGroupData[{
Cell[1435817, 26500, 213, 4, 30, "Input",ExpressionUUID->"cbfdf811-749a-4783-8dae-293f7dbfa198"],
Cell[1436033, 26506, 63035, 1313, 1156, "Output",ExpressionUUID->"1f053f97-ff6c-4bc5-a8d6-2ef86eeb0ddf"]
}, Open  ]],
Cell[1499083, 27822, 285, 7, 35, "Text",ExpressionUUID->"9fca30b5-4352-45e5-b555-3fd51da95520"],
Cell[CellGroupData[{
Cell[1499393, 27833, 389, 7, 30, "Input",ExpressionUUID->"9aab06bc-3059-41db-bcaf-ffd99e60c495"],
Cell[1499785, 27842, 62428, 1268, 951, "Output",ExpressionUUID->"582ff1e3-0751-4095-b114-198147a8c90e"],
Cell[1562216, 29112, 183, 5, 358, "Graphics",ExpressionUUID->"1cce0115-a8df-4159-a039-c96737067aac"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1562448, 29123, 185, 3, 37, "Subsubsection",ExpressionUUID->"287df545-587f-4c00-9cdd-0a1f2e27cbe5"],
Cell[1562636, 29128, 192, 3, 35, "Text",ExpressionUUID->"8c5903f1-2f19-4d11-9c21-bfecff65ca03"],
Cell[CellGroupData[{
Cell[1562853, 29135, 1016, 21, 68, "Input",ExpressionUUID->"2f2c0ba8-c018-4bd1-8de0-45c3efca9980"],
Cell[1563872, 29158, 8970, 184, 207, "Output",ExpressionUUID->"0f259ca8-1e36-4ed0-a978-bcaac245f32c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1572891, 29348, 263, 5, 37, "Subsubsection",ExpressionUUID->"dfeb0a89-d6cb-4219-86e2-97edd6c0a41e"],
Cell[1573157, 29355, 444, 10, 58, "Text",ExpressionUUID->"a0411c48-9889-4c48-aff1-d89e1a2397a3"],
Cell[1573604, 29367, 5971, 104, 446, "Input",ExpressionUUID->"32b948af-51a8-45a7-b0f3-da68ecab9d71"],
Cell[1579578, 29473, 182, 3, 35, "Text",ExpressionUUID->"ef8f0cdc-7261-45fd-b62e-8e5240ae1176"],
Cell[CellGroupData[{
Cell[1579785, 29480, 1187, 27, 89, "Input",ExpressionUUID->"fae7a79f-80ca-4562-8514-f12e94f348f3"],
Cell[1580975, 29509, 8972, 184, 207, "Output",ExpressionUUID->"aba72447-b9a2-4324-9bb8-4898acfd8e03"]
}, Open  ]],
Cell[1589962, 29696, 172, 3, 35, "Text",ExpressionUUID->"8db4a201-10ec-4539-9b9b-fef0a4a63dee"],
Cell[CellGroupData[{
Cell[1590159, 29703, 1740, 46, 131, "Input",ExpressionUUID->"7ad05d26-e77e-4f17-8ff8-236619c42eb7"],
Cell[1591902, 29751, 8989, 184, 195, "Output",ExpressionUUID->"89df5bb3-ee41-469a-9671-1a9f0a061254"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1600940, 29941, 305, 5, 37, "Subsubsection",ExpressionUUID->"8c347135-bc43-46eb-ad2d-8190be94cfed"],
Cell[1601248, 29948, 446, 10, 58, "Text",ExpressionUUID->"85801cc7-8b1e-492b-a990-3a4e5ff56e02"],
Cell[1601697, 29960, 3696, 73, 215, "Input",ExpressionUUID->"793db871-3b6c-44af-8fc0-cf17424b6a68"],
Cell[1605396, 30035, 182, 3, 35, "Text",ExpressionUUID->"1e5af7ed-8c54-48a3-b790-7114f1bca73d"],
Cell[CellGroupData[{
Cell[1605603, 30042, 1191, 28, 89, "Input",ExpressionUUID->"9fcc1731-24b1-4748-b811-095611f671a2"],
Cell[1606797, 30072, 8876, 183, 207, "Output",ExpressionUUID->"b2924880-68d8-468d-8c02-f9d504785fd2"]
}, Open  ]],
Cell[1615688, 30258, 172, 3, 35, "Text",ExpressionUUID->"e9fdff9d-893e-4457-bb70-bda7444bd6cf"],
Cell[CellGroupData[{
Cell[1615885, 30265, 1728, 46, 131, "Input",ExpressionUUID->"1d1f1654-a357-4ae6-a095-00bd787e2a27"],
Cell[1617616, 30313, 8957, 185, 195, "Output",ExpressionUUID->"bf572a2b-ae61-4a02-b630-31d82222984a"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

